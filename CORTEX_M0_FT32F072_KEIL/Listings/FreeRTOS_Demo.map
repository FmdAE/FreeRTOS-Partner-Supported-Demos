Component: ARM Compiler 6.16 Tool: armlink [5dfeaa00]

==============================================================================

Section Cross References

    main.o(.text.main) refers to main-standardtest.o(.text.main_standartest) for main_standartest
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    startup_ft32f072xb.o(RESET) refers to startup_ft32f072xb.o(STACK) for __initial_sp
    startup_ft32f072xb.o(RESET) refers to startup_ft32f072xb.o(.text) for Reset_Handler
    startup_ft32f072xb.o(RESET) refers to ft32f0xx_it.o(.text.NMI_Handler) for NMI_Handler
    startup_ft32f072xb.o(RESET) refers to ft32f0xx_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_ft32f072xb.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_ft32f072xb.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_ft32f072xb.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_ft32f072xb.o(RESET) refers to ft32f0xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) for TIM1_BRK_UP_TRG_COM_IRQHandler
    startup_ft32f072xb.o(RESET) refers to ft32f0xx_it.o(.text.TIM16_IRQHandler) for TIM16_IRQHandler
    startup_ft32f072xb.o(RESET) refers to ft32f0xx_it.o(.text.USART1_IRQHandler) for USART1_IRQHandler
    startup_ft32f072xb.o(.text) refers to startup_ft32f072xb.o(STACK) for __initial_sp
    startup_ft32f072xb.o(.text) refers to system_ft32f0xx.o(.text.SystemInit) for SystemInit
    startup_ft32f072xb.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    main-standardtest.o(.text.main_standartest) refers to peripheral.o(.text.Usart_Init) for Usart_Init
    main-standardtest.o(.text.main_standartest) refers to testrunner.o(.text.vStartTests) for vStartTests
    main-standardtest.o(.ARM.exidx.text.main_standartest) refers to main-standardtest.o(.text.main_standartest) for [Anonymous Symbol]
    main-demo.o(.text.main_demo) refers to inittask.o(.text.CreateInitTask) for CreateInitTask
    main-demo.o(.text.main_demo) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main-demo.o(.ARM.exidx.text.main_demo) refers to main-demo.o(.text.main_demo) for [Anonymous Symbol]
    ft32f0xx_it.o(.ARM.exidx.text.NMI_Handler) refers to ft32f0xx_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    ft32f0xx_it.o(.ARM.exidx.text.HardFault_Handler) refers to ft32f0xx_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    ft32f0xx_it.o(.text.USART1_IRQHandler) refers to ft32f0xx_usart.o(.text.USART_GetFlagStatus) for USART_GetFlagStatus
    ft32f0xx_it.o(.text.USART1_IRQHandler) refers to ft32f0xx_usart.o(.text.USART_ClearFlag) for USART_ClearFlag
    ft32f0xx_it.o(.text.USART1_IRQHandler) refers to ft32f0xx_dma.o(.text.DMA_Cmd) for DMA_Cmd
    ft32f0xx_it.o(.text.USART1_IRQHandler) refers to ft32f0xx_dma.o(.text.DMA_ClearFlag) for DMA_ClearFlag
    ft32f0xx_it.o(.text.USART1_IRQHandler) refers to ft32f0xx_dma.o(.text.DMA_GetCurrDataCounter) for DMA_GetCurrDataCounter
    ft32f0xx_it.o(.text.USART1_IRQHandler) refers to ft32f0xx_dma.o(.text.DMA_SetCurrDataCounter) for DMA_SetCurrDataCounter
    ft32f0xx_it.o(.text.USART1_IRQHandler) refers to taskmanager.o(.text.SendMessageFromISR) for SendMessageFromISR
    ft32f0xx_it.o(.text.USART1_IRQHandler) refers to highprotask.o(.bss.xHighProTaskQueue) for xHighProTaskQueue
    ft32f0xx_it.o(.ARM.exidx.text.USART1_IRQHandler) refers to ft32f0xx_it.o(.text.USART1_IRQHandler) for [Anonymous Symbol]
    ft32f0xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to ft32f0xx_tim.o(.text.TIM_GetITStatus) for TIM_GetITStatus
    ft32f0xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to ft32f0xx_tim.o(.text.TIM_ClearITPendingBit) for TIM_ClearITPendingBit
    ft32f0xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to intqueuetimer.o(.text.IntQueueTestTimerHandler) for IntQueueTestTimerHandler
    ft32f0xx_it.o(.ARM.exidx.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to ft32f0xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) for [Anonymous Symbol]
    ft32f0xx_it.o(.text.TIM16_IRQHandler) refers to ft32f0xx_tim.o(.text.TIM_GetITStatus) for TIM_GetITStatus
    ft32f0xx_it.o(.text.TIM16_IRQHandler) refers to ft32f0xx_tim.o(.text.TIM_ClearITPendingBit) for TIM_ClearITPendingBit
    ft32f0xx_it.o(.ARM.exidx.text.TIM16_IRQHandler) refers to ft32f0xx_it.o(.text.TIM16_IRQHandler) for [Anonymous Symbol]
    board.o(.text.Led_Init) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    board.o(.text.Led_Init) refers to ft32f0xx_gpio.o(.text.GPIO_Init) for GPIO_Init
    board.o(.text.Led_Init) refers to ft32f0xx_gpio.o(.text.GPIO_SetBits) for GPIO_SetBits
    board.o(.text.Led_Init) refers to ft32f0xx_gpio.o(.text.GPIO_ResetBits) for GPIO_ResetBits
    board.o(.ARM.exidx.text.Led_Init) refers to board.o(.text.Led_Init) for [Anonymous Symbol]
    board.o(.text.LED_Toggle) refers to ft32f0xx_gpio.o(.text.GPIO_ReadOutputDataBit) for GPIO_ReadOutputDataBit
    board.o(.text.LED_Toggle) refers to ft32f0xx_gpio.o(.text.GPIO_WriteBit) for GPIO_WriteBit
    board.o(.ARM.exidx.text.LED_Toggle) refers to board.o(.text.LED_Toggle) for [Anonymous Symbol]
    board.o(.text.Key_Init) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    board.o(.text.Key_Init) refers to ft32f0xx_gpio.o(.text.GPIO_Init) for GPIO_Init
    board.o(.ARM.exidx.text.Key_Init) refers to board.o(.text.Key_Init) for [Anonymous Symbol]
    board.o(.text.Key_Scan) refers to ft32f0xx_gpio.o(.text.GPIO_ReadInputDataBit) for GPIO_ReadInputDataBit
    board.o(.text.Key_Scan) refers to board.o(.bss.Key_Scan.key_up) for [Anonymous Symbol]
    board.o(.text.Key_Scan) refers to board.o(.bss.Key_Scan.key_time) for [Anonymous Symbol]
    board.o(.ARM.exidx.text.Key_Scan) refers to board.o(.text.Key_Scan) for [Anonymous Symbol]
    board.o(.text.SysTick_Configuration) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    board.o(.text.SysTick_Configuration) refers to board.o(.text.SysTick_Config) for SysTick_Config
    board.o(.text.SysTick_Configuration) refers to ft32f0xx_misc.o(.text.SysTick_CLKSourceConfig) for SysTick_CLKSourceConfig
    board.o(.text.SysTick_Configuration) refers to board.o(.text.NVIC_SetPriority) for NVIC_SetPriority
    board.o(.text.SysTick_Configuration) refers to system_ft32f0xx.o(.data.SystemCoreClock) for SystemCoreClock
    board.o(.text.SysTick_Configuration) refers to peripheral.o(.rodata.TICK_RATE_HZ) for TICK_RATE_HZ
    board.o(.ARM.exidx.text.SysTick_Configuration) refers to board.o(.text.SysTick_Configuration) for [Anonymous Symbol]
    board.o(.text.SysTick_Config) refers to board.o(.text.NVIC_SetPriority) for NVIC_SetPriority
    board.o(.ARM.exidx.text.SysTick_Config) refers to board.o(.text.SysTick_Config) for [Anonymous Symbol]
    board.o(.ARM.exidx.text.NVIC_SetPriority) refers to board.o(.text.NVIC_SetPriority) for [Anonymous Symbol]
    board.o(.text.TimingDelay_Decrement) refers to board.o(.bss.TimingDelay) for TimingDelay
    board.o(.ARM.exidx.text.TimingDelay_Decrement) refers to board.o(.text.TimingDelay_Decrement) for [Anonymous Symbol]
    board.o(.text.SysTick_Delay_Ms) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    board.o(.text.SysTick_Delay_Ms) refers to board.o(.bss.TimingDelay) for TimingDelay
    board.o(.ARM.exidx.text.SysTick_Delay_Ms) refers to board.o(.text.SysTick_Delay_Ms) for [Anonymous Symbol]
    board.o(.ARM.exidx.text.SysCLK48M) refers to board.o(.text.SysCLK48M) for [Anonymous Symbol]
    peripheral.o(.text.Usart_Init) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    peripheral.o(.text.Usart_Init) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    peripheral.o(.text.Usart_Init) refers to ft32f0xx_gpio.o(.text.GPIO_Init) for GPIO_Init
    peripheral.o(.text.Usart_Init) refers to ft32f0xx_gpio.o(.text.GPIO_PinAFConfig) for GPIO_PinAFConfig
    peripheral.o(.text.Usart_Init) refers to ft32f0xx_usart.o(.text.USART_Init) for USART_Init
    peripheral.o(.text.Usart_Init) refers to ft32f0xx_usart.o(.text.USART_Cmd) for USART_Cmd
    peripheral.o(.text.Usart_Init) refers to ft32f0xx_misc.o(.text.NVIC_Init) for NVIC_Init
    peripheral.o(.text.Usart_Init) refers to ft32f0xx_usart.o(.text.USART_ITConfig) for USART_ITConfig
    peripheral.o(.text.Usart_Init) refers to ft32f0xx_usart.o(.text.USART_ClearFlag) for USART_ClearFlag
    peripheral.o(.text.Usart_Init) refers to peripheral.o(.text.DMA_USART_RX_Config) for DMA_USART_RX_Config
    peripheral.o(.text.Usart_Init) refers to ft32f0xx_usart.o(.text.USART_DMAReceptionErrorConfig) for USART_DMAReceptionErrorConfig
    peripheral.o(.text.Usart_Init) refers to ft32f0xx_usart.o(.text.USART_DMACmd) for USART_DMACmd
    peripheral.o(.text.Usart_Init) refers to ft32f0xx_dma.o(.text.DMA_Cmd) for DMA_Cmd
    peripheral.o(.ARM.exidx.text.Usart_Init) refers to peripheral.o(.text.Usart_Init) for [Anonymous Symbol]
    peripheral.o(.text.DMA_USART_RX_Config) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    peripheral.o(.text.DMA_USART_RX_Config) refers to ft32f0xx_dma.o(.text.DMA_Init) for DMA_Init
    peripheral.o(.text.DMA_USART_RX_Config) refers to peripheral.o(.bss.usart_rx_buff) for usart_rx_buff
    peripheral.o(.ARM.exidx.text.DMA_USART_RX_Config) refers to peripheral.o(.text.DMA_USART_RX_Config) for [Anonymous Symbol]
    peripheral.o(.text.ADC_Config) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    peripheral.o(.text.ADC_Config) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    peripheral.o(.text.ADC_Config) refers to ft32f0xx_gpio.o(.text.GPIO_Init) for GPIO_Init
    peripheral.o(.text.ADC_Config) refers to ft32f0xx_adc.o(.text.ADC_DeInit) for ADC_DeInit
    peripheral.o(.text.ADC_Config) refers to ft32f0xx_adc.o(.text.ADC_StructInit) for ADC_StructInit
    peripheral.o(.text.ADC_Config) refers to ft32f0xx_adc.o(.text.ADC_Init) for ADC_Init
    peripheral.o(.text.ADC_Config) refers to ft32f0xx_adc.o(.text.ADC_VrefselConfig) for ADC_VrefselConfig
    peripheral.o(.text.ADC_Config) refers to ft32f0xx_adc.o(.text.ADC_ChannelConfig) for ADC_ChannelConfig
    peripheral.o(.text.ADC_Config) refers to ft32f0xx_adc.o(.text.ADC_GetCalibrationFactor) for ADC_GetCalibrationFactor
    peripheral.o(.text.ADC_Config) refers to ft32f0xx_adc.o(.text.ADC_Cmd) for ADC_Cmd
    peripheral.o(.text.ADC_Config) refers to ft32f0xx_adc.o(.text.ADC_GetFlagStatus) for ADC_GetFlagStatus
    peripheral.o(.text.ADC_Config) refers to ft32f0xx_adc.o(.text.ADC_StartOfConversion) for ADC_StartOfConversion
    peripheral.o(.ARM.exidx.text.ADC_Config) refers to peripheral.o(.text.ADC_Config) for [Anonymous Symbol]
    peripheral.o(.text.ADC_Measure) refers to ft32f0xx_adc.o(.text.ADC_GetFlagStatus) for ADC_GetFlagStatus
    peripheral.o(.text.ADC_Measure) refers to ft32f0xx_adc.o(.text.ADC_GetConversionValue) for ADC_GetConversionValue
    peripheral.o(.text.ADC_Measure) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    peripheral.o(.text.ADC_Measure) refers to printf8.o(i.__0printf$8) for __2printf
    peripheral.o(.text.ADC_Measure) refers to peripheral.o(.bss.ADC1ConvertedValue) for ADC1ConvertedValue
    peripheral.o(.text.ADC_Measure) refers to peripheral.o(.bss.ADC1ConvertedVoltage) for ADC1ConvertedVoltage
    peripheral.o(.ARM.exidx.text.ADC_Measure) refers to peripheral.o(.text.ADC_Measure) for [Anonymous Symbol]
    peripheral.o(.text.TIM_PWM_Init) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    peripheral.o(.text.TIM_PWM_Init) refers to ft32f0xx_gpio.o(.text.GPIO_Init) for GPIO_Init
    peripheral.o(.text.TIM_PWM_Init) refers to ft32f0xx_gpio.o(.text.GPIO_PinAFConfig) for GPIO_PinAFConfig
    peripheral.o(.text.TIM_PWM_Init) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    peripheral.o(.text.TIM_PWM_Init) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    peripheral.o(.text.TIM_PWM_Init) refers to ft32f0xx_tim.o(.text.TIM_TimeBaseInit) for TIM_TimeBaseInit
    peripheral.o(.text.TIM_PWM_Init) refers to ft32f0xx_tim.o(.text.TIM_OC1Init) for TIM_OC1Init
    peripheral.o(.text.TIM_PWM_Init) refers to ft32f0xx_tim.o(.text.TIM_Cmd) for TIM_Cmd
    peripheral.o(.text.TIM_PWM_Init) refers to ft32f0xx_misc.o(.text.NVIC_Init) for NVIC_Init
    peripheral.o(.text.TIM_PWM_Init) refers to ft32f0xx_tim.o(.text.TIM_ITConfig) for TIM_ITConfig
    peripheral.o(.text.TIM_PWM_Init) refers to ft32f0xx_tim.o(.text.TIM_ClearITPendingBit) for TIM_ClearITPendingBit
    peripheral.o(.text.TIM_PWM_Init) refers to ft32f0xx_tim.o(.text.TIM_CtrlPWMOutputs) for TIM_CtrlPWMOutputs
    peripheral.o(.text.TIM_PWM_Init) refers to system_ft32f0xx.o(.data.SystemCoreClock) for SystemCoreClock
    peripheral.o(.text.TIM_PWM_Init) refers to peripheral.o(.bss.TimerPeriod) for TimerPeriod
    peripheral.o(.text.TIM_PWM_Init) refers to peripheral.o(.bss.Channel1Pulse) for Channel1Pulse
    peripheral.o(.ARM.exidx.text.TIM_PWM_Init) refers to peripheral.o(.text.TIM_PWM_Init) for [Anonymous Symbol]
    peripheral.o(.text.Iwdg_Init) refers to ft32f0xx_rcc.o(.text.RCC_LSICmd) for RCC_LSICmd
    peripheral.o(.text.Iwdg_Init) refers to ft32f0xx_iwdg.o(.text.IWDG_Enable) for IWDG_Enable
    peripheral.o(.text.Iwdg_Init) refers to ft32f0xx_iwdg.o(.text.IWDG_WriteAccessCmd) for IWDG_WriteAccessCmd
    peripheral.o(.text.Iwdg_Init) refers to ft32f0xx_iwdg.o(.text.IWDG_SetPrescaler) for IWDG_SetPrescaler
    peripheral.o(.text.Iwdg_Init) refers to ft32f0xx_iwdg.o(.text.IWDG_GetFlagStatus) for IWDG_GetFlagStatus
    peripheral.o(.text.Iwdg_Init) refers to ft32f0xx_iwdg.o(.text.IWDG_SetReload) for IWDG_SetReload
    peripheral.o(.text.Iwdg_Init) refers to ft32f0xx_iwdg.o(.text.IWDG_ReloadCounter) for IWDG_ReloadCounter
    peripheral.o(.ARM.exidx.text.Iwdg_Init) refers to peripheral.o(.text.Iwdg_Init) for [Anonymous Symbol]
    peripheral.o(.text.LED_Flash) refers to board.o(.text.LED_Toggle) for LED_Toggle
    peripheral.o(.ARM.exidx.text.LED_Flash) refers to peripheral.o(.text.LED_Flash) for [Anonymous Symbol]
    peripheral.o(.text.Key_Pro) refers to board.o(.text.LED_Toggle) for LED_Toggle
    peripheral.o(.text.Key_Pro) refers to ft32f0xx_tim.o(.text.TIM_SetCompare1) for TIM_SetCompare1
    peripheral.o(.text.Key_Pro) refers to printf8.o(i.__0printf$8) for __2printf
    peripheral.o(.text.Key_Pro) refers to peripheral.o(.bss.Channel1Pulse) for Channel1Pulse
    peripheral.o(.text.Key_Pro) refers to peripheral.o(.bss.TimerPeriod) for TimerPeriod
    peripheral.o(.text.Key_Pro) refers to peripheral.o(.rodata.str1.1) for [Anonymous Symbol]
    peripheral.o(.ARM.exidx.text.Key_Pro) refers to peripheral.o(.text.Key_Pro) for [Anonymous Symbol]
    peripheral.o(.text.fputc) refers to ft32f0xx_usart.o(.text.USART_GetFlagStatus) for USART_GetFlagStatus
    peripheral.o(.text.fputc) refers to ft32f0xx_usart.o(.text.USART_SendData) for USART_SendData
    peripheral.o(.ARM.exidx.text.fputc) refers to peripheral.o(.text.fputc) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups.o(.text.xEventGroupCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortYield) for vPortYield
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupWaitBits) refers to event_groups.o(.text.prvTestWaitCondition) for prvTestWaitCondition
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortYield) for vPortYield
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.prvTestWaitCondition) refers to event_groups.o(.text.prvTestWaitCondition) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for vEventGroupClearBitsCallback
    event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupGetBitsFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    event_groups.o(.text.xEventGroupGetBitsFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.vEventGroupDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for vEventGroupSetBitsCallback
    event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber) refers to event_groups.o(.text.uxEventGroupGetNumber) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.vEventGroupSetNumber) refers to event_groups.o(.text.vEventGroupSetNumber) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to llmul.o(.text) for __aeabi_lmul
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortYield) for vPortYield
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to llmul.o(.text) for __aeabi_lmul
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortYield) for vPortYield
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortYield) for vPortYield
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvNotifyQueueSetContainer) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    queue.o(.text.xQueueGiveFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortYield) for vPortYield
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortYield) for vPortYield
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to queue.o(.text.vQueueUnregisterQueue) for vQueueUnregisterQueue
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.text.vQueueUnregisterQueue) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.vQueueUnregisterQueue) refers to queue.o(.text.vQueueUnregisterQueue) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueAddToRegistry) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.vQueueAddToRegistry) refers to queue.o(.text.vQueueAddToRegistry) for [Anonymous Symbol]
    queue.o(.text.pcQueueGetName) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.pcQueueGetName) refers to queue.o(.text.pcQueueGetName) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateSet) refers to queue.o(.text.xQueueCreateSet) for [Anonymous Symbol]
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueAddToSet) refers to queue.o(.text.xQueueAddToSet) for [Anonymous Symbol]
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueRemoveFromSet) refers to queue.o(.text.xQueueRemoveFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queue.o(.ARM.exidx.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueSelectFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.xStreamBufferGenericCreate) for [Anonymous Symbol]
    stream_buffer.o(.text.prvInitialiseNewStreamBuffer) refers to memseta.o(.text) for __aeabi_memclr
    stream_buffer.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.vStreamBufferDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    stream_buffer.o(.text.vStreamBufferDelete) refers to memseta.o(.text) for __aeabi_memclr4
    stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete) refers to stream_buffer.o(.text.vStreamBufferDelete) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReset) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReset) refers to stream_buffer.o(.text.xStreamBufferReset) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel) refers to stream_buffer.o(.text.xStreamBufferSetTriggerLevel) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.xStreamBufferBytesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.prvBytesInBuffer) refers to stream_buffer.o(.text.prvBytesInBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSetTimeOutState) for vTaskSetTimeOutState
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSend) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteBytesToBuffer) for prvWriteBytesToBuffer
    stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSendFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive) refers to stream_buffer.o(.text.xStreamBufferReceive) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadBytesFromBuffer) refers to memcpya.o(.text) for __aeabi_memcpy
    stream_buffer.o(.ARM.exidx.text.prvReadBytesFromBuffer) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty) refers to stream_buffer.o(.text.xStreamBufferIsEmpty) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferIsFull) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber) refers to stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber) refers to stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType) refers to stream_buffer.o(.text.ucStreamBufferGetStreamBufferType) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteBytesToBuffer) refers to memcpya.o(.text) for __aeabi_memcpy
    stream_buffer.o(.ARM.exidx.text.prvWriteBytesToBuffer) refers to stream_buffer.o(.text.prvWriteBytesToBuffer) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to memseta.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.xTaskDelayUntil) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskDelay) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to taskmanager.o(.text.vApplicationStackOverflowHook) for vApplicationStackOverflowHook
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to testrunner.o(.text.vApplicationTickHook) for vApplicationTickHook
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for prvSearchForNameWithinSingleList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xSuspendedTaskList) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskGetHandle) refers to tasks.o(.text.xTaskGetHandle) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.xTaskAbortDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskAbortDelay) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.vQueueAddToRegistry) for vQueueAddToRegistry
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.text.prvProcessTimerOrBlockTask) refers to port.o(.text.vPortYield) for vPortYield
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.text.prvProcessReceivedCommands) refers to heap_4.o(.text.vPortFree) for vPortFree
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvReloadTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.ARM.exidx.text.prvReloadTimer) refers to timers.o(.text.prvReloadTimer) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvHeapInit) for prvHeapInit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.pvPortMalloc) refers to taskmanager.o(.text.vApplicationMallocFailedHook) for vApplicationMallocFailedHook
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xBlockAllocatedBit) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.ucHeap) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xStart) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.pxEnd) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xFreeBytesRemaining) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xBlockAllocatedBit) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.prvHeapInit) refers to heap_4.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.xStart) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.pxEnd) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xBlockAllocatedBit) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortStartFirstTask) for vPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    port.o(.text.vPortSetupTimerInterrupt) refers to system_ft32f0xx.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.text.vPortStartFirstTask) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.vPortStartFirstTask) refers to port.o(.text.vPortStartFirstTask) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortYield) refers to port.o(.text.vPortYield) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.ulSetInterruptMaskFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vClearInterruptMaskFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.text.SysTick_Handler) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    ft32f0xx_adc.o(.text.ADC_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_DeInit) refers to ft32f0xx_adc.o(.text.ADC_DeInit) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_Init) refers to ft32f0xx_adc.o(.text.ADC_Init) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_StructInit) refers to ft32f0xx_adc.o(.text.ADC_StructInit) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_Cmd) refers to ft32f0xx_adc.o(.text.ADC_Cmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_ClockModeConfig) refers to ft32f0xx_adc.o(.text.ADC_ClockModeConfig) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_JitterCmd) refers to ft32f0xx_adc.o(.text.ADC_JitterCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_AutoPowerOffCmd) refers to ft32f0xx_adc.o(.text.ADC_AutoPowerOffCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_WaitModeCmd) refers to ft32f0xx_adc.o(.text.ADC_WaitModeCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogCmd) refers to ft32f0xx_adc.o(.text.ADC_AnalogWatchdogCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogThresholdsConfig) refers to ft32f0xx_adc.o(.text.ADC_AnalogWatchdogThresholdsConfig) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelConfig) refers to ft32f0xx_adc.o(.text.ADC_AnalogWatchdogSingleChannelConfig) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelCmd) refers to ft32f0xx_adc.o(.text.ADC_AnalogWatchdogSingleChannelCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_TempSensorCmd) refers to ft32f0xx_adc.o(.text.ADC_TempSensorCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_VrefintCmd) refers to ft32f0xx_adc.o(.text.ADC_VrefintCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_VbatCmd) refers to ft32f0xx_adc.o(.text.ADC_VbatCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_ChannelConfig) refers to ft32f0xx_adc.o(.text.ADC_ChannelConfig) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_ContinuousModeCmd) refers to ft32f0xx_adc.o(.text.ADC_ContinuousModeCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_DiscModeCmd) refers to ft32f0xx_adc.o(.text.ADC_DiscModeCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_OverrunModeCmd) refers to ft32f0xx_adc.o(.text.ADC_OverrunModeCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_GetCalibrationFactor) refers to ft32f0xx_adc.o(.text.ADC_GetCalibrationFactor) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_StopOfConversion) refers to ft32f0xx_adc.o(.text.ADC_StopOfConversion) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_StartOfConversion) refers to ft32f0xx_adc.o(.text.ADC_StartOfConversion) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_GetConversionValue) refers to ft32f0xx_adc.o(.text.ADC_GetConversionValue) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_DMACmd) refers to ft32f0xx_adc.o(.text.ADC_DMACmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_DMARequestModeConfig) refers to ft32f0xx_adc.o(.text.ADC_DMARequestModeConfig) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_ITConfig) refers to ft32f0xx_adc.o(.text.ADC_ITConfig) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_GetFlagStatus) refers to ft32f0xx_adc.o(.text.ADC_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_ClearFlag) refers to ft32f0xx_adc.o(.text.ADC_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_GetITStatus) refers to ft32f0xx_adc.o(.text.ADC_GetITStatus) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_ClearITPendingBit) refers to ft32f0xx_adc.o(.text.ADC_ClearITPendingBit) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_VrefselConfig) refers to ft32f0xx_adc.o(.text.ADC_VrefselConfig) for [Anonymous Symbol]
    ft32f0xx_comp.o(.ARM.exidx.text.COMP_DeInit) refers to ft32f0xx_comp.o(.text.COMP_DeInit) for [Anonymous Symbol]
    ft32f0xx_comp.o(.ARM.exidx.text.COMP_Init) refers to ft32f0xx_comp.o(.text.COMP_Init) for [Anonymous Symbol]
    ft32f0xx_comp.o(.ARM.exidx.text.COMP_StructInit) refers to ft32f0xx_comp.o(.text.COMP_StructInit) for [Anonymous Symbol]
    ft32f0xx_comp.o(.ARM.exidx.text.COMP_Cmd) refers to ft32f0xx_comp.o(.text.COMP_Cmd) for [Anonymous Symbol]
    ft32f0xx_comp.o(.ARM.exidx.text.COMP_GetOutputLevel) refers to ft32f0xx_comp.o(.text.COMP_GetOutputLevel) for [Anonymous Symbol]
    ft32f0xx_comp.o(.ARM.exidx.text.COMP_WindowCmd) refers to ft32f0xx_comp.o(.text.COMP_WindowCmd) for [Anonymous Symbol]
    ft32f0xx_comp.o(.ARM.exidx.text.COMP_LockConfig) refers to ft32f0xx_comp.o(.text.COMP_LockConfig) for [Anonymous Symbol]
    ft32f0xx_crc.o(.ARM.exidx.text.CRC_DeInit) refers to ft32f0xx_crc.o(.text.CRC_DeInit) for [Anonymous Symbol]
    ft32f0xx_crc.o(.ARM.exidx.text.CRC_ResetDR) refers to ft32f0xx_crc.o(.text.CRC_ResetDR) for [Anonymous Symbol]
    ft32f0xx_crc.o(.ARM.exidx.text.CRC_ReverseInputDataSelect) refers to ft32f0xx_crc.o(.text.CRC_ReverseInputDataSelect) for [Anonymous Symbol]
    ft32f0xx_crc.o(.ARM.exidx.text.CRC_ReverseOutputDataCmd) refers to ft32f0xx_crc.o(.text.CRC_ReverseOutputDataCmd) for [Anonymous Symbol]
    ft32f0xx_crc.o(.ARM.exidx.text.CRC_SetInitRegister) refers to ft32f0xx_crc.o(.text.CRC_SetInitRegister) for [Anonymous Symbol]
    ft32f0xx_crc.o(.ARM.exidx.text.CRC_SetPolynomial) refers to ft32f0xx_crc.o(.text.CRC_SetPolynomial) for [Anonymous Symbol]
    ft32f0xx_crc.o(.ARM.exidx.text.CRC_CalcCRC) refers to ft32f0xx_crc.o(.text.CRC_CalcCRC) for [Anonymous Symbol]
    ft32f0xx_crc.o(.ARM.exidx.text.CRC_CalcCRC16bits) refers to ft32f0xx_crc.o(.text.CRC_CalcCRC16bits) for [Anonymous Symbol]
    ft32f0xx_crc.o(.ARM.exidx.text.CRC_CalcCRC8bits) refers to ft32f0xx_crc.o(.text.CRC_CalcCRC8bits) for [Anonymous Symbol]
    ft32f0xx_crc.o(.ARM.exidx.text.CRC_CalcBlockCRC) refers to ft32f0xx_crc.o(.text.CRC_CalcBlockCRC) for [Anonymous Symbol]
    ft32f0xx_crc.o(.ARM.exidx.text.CRC_GetCRC) refers to ft32f0xx_crc.o(.text.CRC_GetCRC) for [Anonymous Symbol]
    ft32f0xx_crc.o(.ARM.exidx.text.CRC_SetIDRegister) refers to ft32f0xx_crc.o(.text.CRC_SetIDRegister) for [Anonymous Symbol]
    ft32f0xx_crc.o(.ARM.exidx.text.CRC_GetIDRegister) refers to ft32f0xx_crc.o(.text.CRC_GetIDRegister) for [Anonymous Symbol]
    ft32f0xx_crs.o(.text.CRS_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_DeInit) refers to ft32f0xx_crs.o(.text.CRS_DeInit) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_AdjustHSI48CalibrationValue) refers to ft32f0xx_crs.o(.text.CRS_AdjustHSI48CalibrationValue) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_FrequencyErrorCounterCmd) refers to ft32f0xx_crs.o(.text.CRS_FrequencyErrorCounterCmd) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_AutomaticCalibrationCmd) refers to ft32f0xx_crs.o(.text.CRS_AutomaticCalibrationCmd) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_SoftwareSynchronizationGenerate) refers to ft32f0xx_crs.o(.text.CRS_SoftwareSynchronizationGenerate) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_FrequencyErrorCounterReload) refers to ft32f0xx_crs.o(.text.CRS_FrequencyErrorCounterReload) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_FrequencyErrorLimitConfig) refers to ft32f0xx_crs.o(.text.CRS_FrequencyErrorLimitConfig) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_SynchronizationPrescalerConfig) refers to ft32f0xx_crs.o(.text.CRS_SynchronizationPrescalerConfig) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_SynchronizationSourceConfig) refers to ft32f0xx_crs.o(.text.CRS_SynchronizationSourceConfig) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_SynchronizationPolarityConfig) refers to ft32f0xx_crs.o(.text.CRS_SynchronizationPolarityConfig) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_GetReloadValue) refers to ft32f0xx_crs.o(.text.CRS_GetReloadValue) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_GetHSI48CalibrationValue) refers to ft32f0xx_crs.o(.text.CRS_GetHSI48CalibrationValue) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_GetFrequencyErrorValue) refers to ft32f0xx_crs.o(.text.CRS_GetFrequencyErrorValue) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_GetFrequencyErrorDirection) refers to ft32f0xx_crs.o(.text.CRS_GetFrequencyErrorDirection) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_ITConfig) refers to ft32f0xx_crs.o(.text.CRS_ITConfig) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_GetFlagStatus) refers to ft32f0xx_crs.o(.text.CRS_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_ClearFlag) refers to ft32f0xx_crs.o(.text.CRS_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_GetITStatus) refers to ft32f0xx_crs.o(.text.CRS_GetITStatus) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_ClearITPendingBit) refers to ft32f0xx_crs.o(.text.CRS_ClearITPendingBit) for [Anonymous Symbol]
    ft32f0xx_dac.o(.ARM.exidx.text.DAC_Ref_Config) refers to ft32f0xx_dac.o(.text.DAC_Ref_Config) for [Anonymous Symbol]
    ft32f0xx_dac.o(.ARM.exidx.text.DAC_Cmd) refers to ft32f0xx_dac.o(.text.DAC_Cmd) for [Anonymous Symbol]
    ft32f0xx_dac.o(.ARM.exidx.text.DAC_SetChannel1Data) refers to ft32f0xx_dac.o(.text.DAC_SetChannel1Data) for [Anonymous Symbol]
    ft32f0xx_dac.o(.ARM.exidx.text.DAC_SetChannel2Data) refers to ft32f0xx_dac.o(.text.DAC_SetChannel2Data) for [Anonymous Symbol]
    ft32f0xx_dac.o(.ARM.exidx.text.DAC_Read_Reg) refers to ft32f0xx_dac.o(.text.DAC_Read_Reg) for [Anonymous Symbol]
    ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_GetREVID) refers to ft32f0xx_debug.o(.text.DBGMCU_GetREVID) for [Anonymous Symbol]
    ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_GetDEVID) refers to ft32f0xx_debug.o(.text.DBGMCU_GetDEVID) for [Anonymous Symbol]
    ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_Config) refers to ft32f0xx_debug.o(.text.DBGMCU_Config) for [Anonymous Symbol]
    ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_APB1PeriphConfig) refers to ft32f0xx_debug.o(.text.DBGMCU_APB1PeriphConfig) for [Anonymous Symbol]
    ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_APB2PeriphConfig) refers to ft32f0xx_debug.o(.text.DBGMCU_APB2PeriphConfig) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_DeInit) refers to ft32f0xx_dma.o(.text.DMA_DeInit) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_Init) refers to ft32f0xx_dma.o(.text.DMA_Init) for [Anonymous Symbol]
    ft32f0xx_dma.o(.text.DMA_StructInit) refers to memseta.o(.text) for __aeabi_memclr4
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_StructInit) refers to ft32f0xx_dma.o(.text.DMA_StructInit) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_Cmd) refers to ft32f0xx_dma.o(.text.DMA_Cmd) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_SetCurrDataCounter) refers to ft32f0xx_dma.o(.text.DMA_SetCurrDataCounter) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_GetCurrDataCounter) refers to ft32f0xx_dma.o(.text.DMA_GetCurrDataCounter) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_ITConfig) refers to ft32f0xx_dma.o(.text.DMA_ITConfig) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_GetFlagStatus) refers to ft32f0xx_dma.o(.text.DMA_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_ClearFlag) refers to ft32f0xx_dma.o(.text.DMA_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_GetITStatus) refers to ft32f0xx_dma.o(.text.DMA_GetITStatus) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_ClearITPendingBit) refers to ft32f0xx_dma.o(.text.DMA_ClearITPendingBit) for [Anonymous Symbol]
    ft32f0xx_exti.o(.ARM.exidx.text.EXTI_DeInit) refers to ft32f0xx_exti.o(.text.EXTI_DeInit) for [Anonymous Symbol]
    ft32f0xx_exti.o(.ARM.exidx.text.EXTI_Init) refers to ft32f0xx_exti.o(.text.EXTI_Init) for [Anonymous Symbol]
    ft32f0xx_exti.o(.ARM.exidx.text.EXTI_StructInit) refers to ft32f0xx_exti.o(.text.EXTI_StructInit) for [Anonymous Symbol]
    ft32f0xx_exti.o(.ARM.exidx.text.EXTI_GenerateSWInterrupt) refers to ft32f0xx_exti.o(.text.EXTI_GenerateSWInterrupt) for [Anonymous Symbol]
    ft32f0xx_exti.o(.ARM.exidx.text.EXTI_GetFlagStatus) refers to ft32f0xx_exti.o(.text.EXTI_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_exti.o(.ARM.exidx.text.EXTI_ClearFlag) refers to ft32f0xx_exti.o(.text.EXTI_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_exti.o(.ARM.exidx.text.EXTI_GetITStatus) refers to ft32f0xx_exti.o(.text.EXTI_GetITStatus) for [Anonymous Symbol]
    ft32f0xx_exti.o(.ARM.exidx.text.EXTI_ClearITPendingBit) refers to ft32f0xx_exti.o(.text.EXTI_ClearITPendingBit) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_SetLatency) refers to ft32f0xx_flash.o(.text.FLASH_SetLatency) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_PrefetchBufferCmd) refers to ft32f0xx_flash.o(.text.FLASH_PrefetchBufferCmd) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_GetPrefetchBufferStatus) refers to ft32f0xx_flash.o(.text.FLASH_GetPrefetchBufferStatus) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_Unlock) refers to ft32f0xx_flash.o(.text.FLASH_Unlock) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_Lock) refers to ft32f0xx_flash.o(.text.FLASH_Lock) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_ErasePage) refers to ft32f0xx_flash.o(.text.FLASH_PrefetchBufferCmd) for FLASH_PrefetchBufferCmd
    ft32f0xx_flash.o(.text.FLASH_ErasePage) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_ErasePage) refers to ft32f0xx_flash.o(.text.FLASH_ErasePage) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) refers to ft32f0xx_flash.o(.text.FLASH_GetStatus) for FLASH_GetStatus
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_EraseAllPages) refers to ft32f0xx_flash.o(.text.FLASH_PrefetchBufferCmd) for FLASH_PrefetchBufferCmd
    ft32f0xx_flash.o(.text.FLASH_EraseAllPages) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_EraseAllPages) refers to ft32f0xx_flash.o(.text.FLASH_EraseAllPages) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_ProgramWord) refers to ft32f0xx_flash.o(.text.FLASH_PrefetchBufferCmd) for FLASH_PrefetchBufferCmd
    ft32f0xx_flash.o(.text.FLASH_ProgramWord) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_ProgramWord) refers to ft32f0xx_flash.o(.text.FLASH_ProgramWord) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_Unlock) refers to ft32f0xx_flash.o(.text.FLASH_OB_Unlock) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_Lock) refers to ft32f0xx_flash.o(.text.FLASH_OB_Lock) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_Launch) refers to ft32f0xx_flash.o(.text.FLASH_OB_Launch) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_Erase) refers to ft32f0xx_flash.o(.text.FLASH_OB_GetRDP) for FLASH_OB_GetRDP
    ft32f0xx_flash.o(.text.FLASH_OB_Erase) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_Erase) refers to ft32f0xx_flash.o(.text.FLASH_OB_Erase) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_GetRDP) refers to ft32f0xx_flash.o(.text.FLASH_OB_GetRDP) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_EnableWRP) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_EnableWRP) refers to ft32f0xx_flash.o(.text.FLASH_OB_EnableWRP) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_RDPConfig) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_RDPConfig) refers to ft32f0xx_flash.o(.text.FLASH_OB_RDPConfig) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_UserConfig) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_UserConfig) refers to ft32f0xx_flash.o(.text.FLASH_OB_UserConfig) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_BOOTConfig) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_BOOTConfig) refers to ft32f0xx_flash.o(.text.FLASH_OB_BOOTConfig) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_VDDAConfig) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_VDDAConfig) refers to ft32f0xx_flash.o(.text.FLASH_OB_VDDAConfig) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_SRAMParityConfig) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_SRAMParityConfig) refers to ft32f0xx_flash.o(.text.FLASH_OB_SRAMParityConfig) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_WriteUser) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_WriteUser) refers to ft32f0xx_flash.o(.text.FLASH_OB_WriteUser) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_ProgramData) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_ProgramData) refers to ft32f0xx_flash.o(.text.FLASH_OB_ProgramData) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_GetUser) refers to ft32f0xx_flash.o(.text.FLASH_OB_GetUser) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_GetWRP) refers to ft32f0xx_flash.o(.text.FLASH_OB_GetWRP) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_ITConfig) refers to ft32f0xx_flash.o(.text.FLASH_ITConfig) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_GetFlagStatus) refers to ft32f0xx_flash.o(.text.FLASH_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_ClearFlag) refers to ft32f0xx_flash.o(.text.FLASH_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_GetStatus) refers to ft32f0xx_flash.o(.text.FLASH_GetStatus) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.text.GPIO_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphResetCmd) for RCC_AHBPeriphResetCmd
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_DeInit) refers to ft32f0xx_gpio.o(.text.GPIO_DeInit) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_Init) refers to ft32f0xx_gpio.o(.text.GPIO_Init) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_StructInit) refers to ft32f0xx_gpio.o(.text.GPIO_StructInit) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_PinLockConfig) refers to ft32f0xx_gpio.o(.text.GPIO_PinLockConfig) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit) refers to ft32f0xx_gpio.o(.text.GPIO_ReadInputDataBit) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ReadInputData) refers to ft32f0xx_gpio.o(.text.GPIO_ReadInputData) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit) refers to ft32f0xx_gpio.o(.text.GPIO_ReadOutputDataBit) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData) refers to ft32f0xx_gpio.o(.text.GPIO_ReadOutputData) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_SetBits) refers to ft32f0xx_gpio.o(.text.GPIO_SetBits) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ResetBits) refers to ft32f0xx_gpio.o(.text.GPIO_ResetBits) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_WriteBit) refers to ft32f0xx_gpio.o(.text.GPIO_WriteBit) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_Write) refers to ft32f0xx_gpio.o(.text.GPIO_Write) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_PinAFConfig) refers to ft32f0xx_gpio.o(.text.GPIO_PinAFConfig) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_LedmConfig) refers to ft32f0xx_gpio.o(.text.GPIO_LedmConfig) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.text.I2C_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_DeInit) refers to ft32f0xx_i2c.o(.text.I2C_DeInit) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_Init) refers to ft32f0xx_i2c.o(.text.I2C_Init) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_StructInit) refers to ft32f0xx_i2c.o(.text.I2C_StructInit) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_Cmd) refers to ft32f0xx_i2c.o(.text.I2C_Cmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_SoftwareResetCmd) refers to ft32f0xx_i2c.o(.text.I2C_SoftwareResetCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ITConfig) refers to ft32f0xx_i2c.o(.text.I2C_ITConfig) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_StretchClockCmd) refers to ft32f0xx_i2c.o(.text.I2C_StretchClockCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_DualAddressCmd) refers to ft32f0xx_i2c.o(.text.I2C_DualAddressCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_OwnAddress2Config) refers to ft32f0xx_i2c.o(.text.I2C_OwnAddress2Config) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GeneralCallCmd) refers to ft32f0xx_i2c.o(.text.I2C_GeneralCallCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_SlaveByteControlCmd) refers to ft32f0xx_i2c.o(.text.I2C_SlaveByteControlCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_SlaveAddressConfig) refers to ft32f0xx_i2c.o(.text.I2C_SlaveAddressConfig) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_10BitAddressingModeCmd) refers to ft32f0xx_i2c.o(.text.I2C_10BitAddressingModeCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_AutoEndCmd) refers to ft32f0xx_i2c.o(.text.I2C_AutoEndCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ReloadCmd) refers to ft32f0xx_i2c.o(.text.I2C_ReloadCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_NumberOfBytesConfig) refers to ft32f0xx_i2c.o(.text.I2C_NumberOfBytesConfig) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_MasterRequestConfig) refers to ft32f0xx_i2c.o(.text.I2C_MasterRequestConfig) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GenerateSTART) refers to ft32f0xx_i2c.o(.text.I2C_GenerateSTART) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GenerateSTOP) refers to ft32f0xx_i2c.o(.text.I2C_GenerateSTOP) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_10BitAddressHeaderCmd) refers to ft32f0xx_i2c.o(.text.I2C_10BitAddressHeaderCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_AcknowledgeConfig) refers to ft32f0xx_i2c.o(.text.I2C_AcknowledgeConfig) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GetAddressMatched) refers to ft32f0xx_i2c.o(.text.I2C_GetAddressMatched) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GetTransferDirection) refers to ft32f0xx_i2c.o(.text.I2C_GetTransferDirection) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_TransferHandling) refers to ft32f0xx_i2c.o(.text.I2C_TransferHandling) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_SMBusAlertCmd) refers to ft32f0xx_i2c.o(.text.I2C_SMBusAlertCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ClockTimeoutCmd) refers to ft32f0xx_i2c.o(.text.I2C_ClockTimeoutCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ExtendedClockTimeoutCmd) refers to ft32f0xx_i2c.o(.text.I2C_ExtendedClockTimeoutCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_IdleClockTimeoutCmd) refers to ft32f0xx_i2c.o(.text.I2C_IdleClockTimeoutCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_TimeoutAConfig) refers to ft32f0xx_i2c.o(.text.I2C_TimeoutAConfig) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_TimeoutBConfig) refers to ft32f0xx_i2c.o(.text.I2C_TimeoutBConfig) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_CalculatePEC) refers to ft32f0xx_i2c.o(.text.I2C_CalculatePEC) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_PECRequestCmd) refers to ft32f0xx_i2c.o(.text.I2C_PECRequestCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GetPEC) refers to ft32f0xx_i2c.o(.text.I2C_GetPEC) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ReadRegister) refers to ft32f0xx_i2c.o(.text.I2C_ReadRegister) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_SendData) refers to ft32f0xx_i2c.o(.text.I2C_SendData) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ReceiveData) refers to ft32f0xx_i2c.o(.text.I2C_ReceiveData) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_DMACmd) refers to ft32f0xx_i2c.o(.text.I2C_DMACmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GetFlagStatus) refers to ft32f0xx_i2c.o(.text.I2C_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ClearFlag) refers to ft32f0xx_i2c.o(.text.I2C_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GetITStatus) refers to ft32f0xx_i2c.o(.text.I2C_GetITStatus) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ClearITPendingBit) refers to ft32f0xx_i2c.o(.text.I2C_ClearITPendingBit) for [Anonymous Symbol]
    ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_WriteAccessCmd) refers to ft32f0xx_iwdg.o(.text.IWDG_WriteAccessCmd) for [Anonymous Symbol]
    ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_SetPrescaler) refers to ft32f0xx_iwdg.o(.text.IWDG_SetPrescaler) for [Anonymous Symbol]
    ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_SetReload) refers to ft32f0xx_iwdg.o(.text.IWDG_SetReload) for [Anonymous Symbol]
    ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_ReloadCounter) refers to ft32f0xx_iwdg.o(.text.IWDG_ReloadCounter) for [Anonymous Symbol]
    ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_SetWindowValue) refers to ft32f0xx_iwdg.o(.text.IWDG_SetWindowValue) for [Anonymous Symbol]
    ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_Enable) refers to ft32f0xx_iwdg.o(.text.IWDG_Enable) for [Anonymous Symbol]
    ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_GetFlagStatus) refers to ft32f0xx_iwdg.o(.text.IWDG_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_misc.o(.ARM.exidx.text.NVIC_Init) refers to ft32f0xx_misc.o(.text.NVIC_Init) for [Anonymous Symbol]
    ft32f0xx_misc.o(.ARM.exidx.text.NVIC_SystemLPConfig) refers to ft32f0xx_misc.o(.text.NVIC_SystemLPConfig) for [Anonymous Symbol]
    ft32f0xx_misc.o(.ARM.exidx.text.SysTick_CLKSourceConfig) refers to ft32f0xx_misc.o(.text.SysTick_CLKSourceConfig) for [Anonymous Symbol]
    ft32f0xx_opa.o(.ARM.exidx.text.OPA_DeInit) refers to ft32f0xx_opa.o(.text.OPA_DeInit) for [Anonymous Symbol]
    ft32f0xx_opa.o(.ARM.exidx.text.OPA_Init) refers to ft32f0xx_opa.o(.text.OPA_Init) for [Anonymous Symbol]
    ft32f0xx_opa.o(.ARM.exidx.text.OPA_StructInit) refers to ft32f0xx_opa.o(.text.OPA_StructInit) for [Anonymous Symbol]
    ft32f0xx_opa.o(.ARM.exidx.text.OPA_Cmd) refers to ft32f0xx_opa.o(.text.OPA_Cmd) for [Anonymous Symbol]
    ft32f0xx_opa.o(.ARM.exidx.text.OPA_GetOutputLevel) refers to ft32f0xx_opa.o(.text.OPA_GetOutputLevel) for [Anonymous Symbol]
    ft32f0xx_opa.o(.ARM.exidx.text.OPA_Cali) refers to ft32f0xx_opa.o(.text.OPA_Cali) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.text.PWR_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_DeInit) refers to ft32f0xx_pwr.o(.text.PWR_DeInit) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_BackupAccessCmd) refers to ft32f0xx_pwr.o(.text.PWR_BackupAccessCmd) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_PVDLevelConfig) refers to ft32f0xx_pwr.o(.text.PWR_PVDLevelConfig) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_PVDCmd) refers to ft32f0xx_pwr.o(.text.PWR_PVDCmd) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_WakeUpPinCmd) refers to ft32f0xx_pwr.o(.text.PWR_WakeUpPinCmd) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_EnterSleepMode) refers to ft32f0xx_pwr.o(.text.PWR_EnterSleepMode) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_EnterSTOPMode) refers to ft32f0xx_pwr.o(.text.PWR_EnterSTOPMode) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_EnterSTANDBYMode) refers to ft32f0xx_pwr.o(.text.PWR_EnterSTANDBYMode) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_GetFlagStatus) refers to ft32f0xx_pwr.o(.text.PWR_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_ClearFlag) refers to ft32f0xx_pwr.o(.text.PWR_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_DeInit) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSEConfig) refers to ft32f0xx_rcc.o(.text.RCC_HSEConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.text.RCC_WaitForHSEStartUp) refers to ft32f0xx_rcc.o(.text.RCC_GetFlagStatus) for RCC_GetFlagStatus
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_WaitForHSEStartUp) refers to ft32f0xx_rcc.o(.text.RCC_WaitForHSEStartUp) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus) refers to ft32f0xx_rcc.o(.text.RCC_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_AdjustHSICalibrationValue) refers to ft32f0xx_rcc.o(.text.RCC_AdjustHSICalibrationValue) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSICmd) refers to ft32f0xx_rcc.o(.text.RCC_HSICmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_AdjustHSI14CalibrationValue) refers to ft32f0xx_rcc.o(.text.RCC_AdjustHSI14CalibrationValue) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSI14Cmd) refers to ft32f0xx_rcc.o(.text.RCC_HSI14Cmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSI14ADCRequestCmd) refers to ft32f0xx_rcc.o(.text.RCC_HSI14ADCRequestCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_LSEConfig) refers to ft32f0xx_rcc.o(.text.RCC_LSEConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_LSEDriveConfig) refers to ft32f0xx_rcc.o(.text.RCC_LSEDriveConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_LSICmd) refers to ft32f0xx_rcc.o(.text.RCC_LSICmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_PLLConfig) refers to ft32f0xx_rcc.o(.text.RCC_PLLConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_PLLCmd) refers to ft32f0xx_rcc.o(.text.RCC_PLLCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSI48Cmd) refers to ft32f0xx_rcc.o(.text.RCC_HSI48Cmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_PREDIV1Config) refers to ft32f0xx_rcc.o(.text.RCC_PREDIV1Config) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ClockSecuritySystemCmd) refers to ft32f0xx_rcc.o(.text.RCC_ClockSecuritySystemCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_MCOConfig) refers to ft32f0xx_rcc.o(.text.RCC_MCOConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig) refers to ft32f0xx_rcc.o(.text.RCC_SYSCLKConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource) refers to ft32f0xx_rcc.o(.text.RCC_GetSYSCLKSource) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HCLKConfig) refers to ft32f0xx_rcc.o(.text.RCC_HCLKConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_PCLKConfig) refers to ft32f0xx_rcc.o(.text.RCC_PCLKConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ADCCLKConfig) refers to ft32f0xx_rcc.o(.text.RCC_ADCCLKConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_I2CCLKConfig) refers to ft32f0xx_rcc.o(.text.RCC_I2CCLKConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_USARTCLKConfig) refers to ft32f0xx_rcc.o(.text.RCC_USARTCLKConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_USBCLKConfig) refers to ft32f0xx_rcc.o(.text.RCC_USBCLKConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.text.RCC_GetClocksFreq) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    ft32f0xx_rcc.o(.text.RCC_GetClocksFreq) refers to ft32f0xx_rcc.o(.rodata.APBAHBPrescTable) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq) refers to ft32f0xx_rcc.o(.text.RCC_GetClocksFreq) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_RTCCLKConfig) refers to ft32f0xx_rcc.o(.text.RCC_RTCCLKConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_RTCCLKCmd) refers to ft32f0xx_rcc.o(.text.RCC_RTCCLKCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_BackupResetCmd) refers to ft32f0xx_rcc.o(.text.RCC_BackupResetCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_AHBPeriphClockCmd) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockCmd) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphClockCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockCmd) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphClockCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_AHBPeriphResetCmd) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphResetCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_APB2PeriphResetCmd) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphResetCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_APB1PeriphResetCmd) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphResetCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ITConfig) refers to ft32f0xx_rcc.o(.text.RCC_ITConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ClearFlag) refers to ft32f0xx_rcc.o(.text.RCC_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_GetITStatus) refers to ft32f0xx_rcc.o(.text.RCC_GetITStatus) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ClearITPendingBit) refers to ft32f0xx_rcc.o(.text.RCC_ClearITPendingBit) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_DeInit) refers to ft32f0xx_rtc.o(.text.RTC_EnterInitMode) for RTC_EnterInitMode
    ft32f0xx_rtc.o(.text.RTC_DeInit) refers to ft32f0xx_rtc.o(.text.RTC_WaitForSynchro) for RTC_WaitForSynchro
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_DeInit) refers to ft32f0xx_rtc.o(.text.RTC_DeInit) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_EnterInitMode) refers to ft32f0xx_rtc.o(.text.RTC_EnterInitMode) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_WaitForSynchro) refers to ft32f0xx_rtc.o(.text.RTC_WaitForSynchro) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_Init) refers to ft32f0xx_rtc.o(.text.RTC_EnterInitMode) for RTC_EnterInitMode
    ft32f0xx_rtc.o(.text.RTC_Init) refers to ft32f0xx_rtc.o(.text.RTC_ExitInitMode) for RTC_ExitInitMode
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_Init) refers to ft32f0xx_rtc.o(.text.RTC_Init) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ExitInitMode) refers to ft32f0xx_rtc.o(.text.RTC_ExitInitMode) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_StructInit) refers to ft32f0xx_rtc.o(.text.RTC_StructInit) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_WriteProtectionCmd) refers to ft32f0xx_rtc.o(.text.RTC_WriteProtectionCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_RefClockCmd) refers to ft32f0xx_rtc.o(.text.RTC_EnterInitMode) for RTC_EnterInitMode
    ft32f0xx_rtc.o(.text.RTC_RefClockCmd) refers to ft32f0xx_rtc.o(.text.RTC_ExitInitMode) for RTC_ExitInitMode
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_RefClockCmd) refers to ft32f0xx_rtc.o(.text.RTC_RefClockCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_BypassShadowCmd) refers to ft32f0xx_rtc.o(.text.RTC_BypassShadowCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_SetTime) refers to ft32f0xx_rtc.o(.text.RTC_ByteToBcd2) for RTC_ByteToBcd2
    ft32f0xx_rtc.o(.text.RTC_SetTime) refers to ft32f0xx_rtc.o(.text.RTC_EnterInitMode) for RTC_EnterInitMode
    ft32f0xx_rtc.o(.text.RTC_SetTime) refers to ft32f0xx_rtc.o(.text.RTC_ExitInitMode) for RTC_ExitInitMode
    ft32f0xx_rtc.o(.text.RTC_SetTime) refers to ft32f0xx_rtc.o(.text.RTC_WaitForSynchro) for RTC_WaitForSynchro
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SetTime) refers to ft32f0xx_rtc.o(.text.RTC_SetTime) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_Bcd2ToByte) refers to ft32f0xx_rtc.o(.text.RTC_Bcd2ToByte) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_ByteToBcd2) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ByteToBcd2) refers to ft32f0xx_rtc.o(.text.RTC_ByteToBcd2) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TimeStructInit) refers to ft32f0xx_rtc.o(.text.RTC_TimeStructInit) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_GetTime) refers to ft32f0xx_rtc.o(.text.RTC_Bcd2ToByte) for RTC_Bcd2ToByte
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetTime) refers to ft32f0xx_rtc.o(.text.RTC_GetTime) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetSubSecond) refers to ft32f0xx_rtc.o(.text.RTC_GetSubSecond) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_SetDate) refers to ft32f0xx_rtc.o(.text.RTC_EnterInitMode) for RTC_EnterInitMode
    ft32f0xx_rtc.o(.text.RTC_SetDate) refers to ft32f0xx_rtc.o(.text.RTC_ExitInitMode) for RTC_ExitInitMode
    ft32f0xx_rtc.o(.text.RTC_SetDate) refers to ft32f0xx_rtc.o(.text.RTC_WaitForSynchro) for RTC_WaitForSynchro
    ft32f0xx_rtc.o(.text.RTC_SetDate) refers to ft32f0xx_rtc.o(.text.RTC_ByteToBcd2) for RTC_ByteToBcd2
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SetDate) refers to ft32f0xx_rtc.o(.text.RTC_SetDate) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_DateStructInit) refers to ft32f0xx_rtc.o(.text.RTC_DateStructInit) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_GetDate) refers to ft32f0xx_rtc.o(.text.RTC_Bcd2ToByte) for RTC_Bcd2ToByte
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetDate) refers to ft32f0xx_rtc.o(.text.RTC_GetDate) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_SetAlarm) refers to ft32f0xx_rtc.o(.text.RTC_ByteToBcd2) for RTC_ByteToBcd2
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SetAlarm) refers to ft32f0xx_rtc.o(.text.RTC_SetAlarm) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_AlarmStructInit) refers to ft32f0xx_rtc.o(.text.RTC_AlarmStructInit) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_GetAlarm) refers to ft32f0xx_rtc.o(.text.RTC_Bcd2ToByte) for RTC_Bcd2ToByte
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetAlarm) refers to ft32f0xx_rtc.o(.text.RTC_GetAlarm) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_AlarmCmd) refers to ft32f0xx_rtc.o(.text.RTC_AlarmCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_AlarmSubSecondConfig) refers to ft32f0xx_rtc.o(.text.RTC_AlarmSubSecondConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetAlarmSubSecond) refers to ft32f0xx_rtc.o(.text.RTC_GetAlarmSubSecond) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_DayLightSavingConfig) refers to ft32f0xx_rtc.o(.text.RTC_DayLightSavingConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetStoreOperation) refers to ft32f0xx_rtc.o(.text.RTC_GetStoreOperation) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_OutputConfig) refers to ft32f0xx_rtc.o(.text.RTC_OutputConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_CalibOutputCmd) refers to ft32f0xx_rtc.o(.text.RTC_CalibOutputCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_CalibOutputConfig) refers to ft32f0xx_rtc.o(.text.RTC_CalibOutputConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SmoothCalibConfig) refers to ft32f0xx_rtc.o(.text.RTC_SmoothCalibConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TimeStampCmd) refers to ft32f0xx_rtc.o(.text.RTC_TimeStampCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_GetTimeStamp) refers to ft32f0xx_rtc.o(.text.RTC_Bcd2ToByte) for RTC_Bcd2ToByte
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetTimeStamp) refers to ft32f0xx_rtc.o(.text.RTC_GetTimeStamp) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetTimeStampSubSecond) refers to ft32f0xx_rtc.o(.text.RTC_GetTimeStampSubSecond) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperTriggerConfig) refers to ft32f0xx_rtc.o(.text.RTC_TamperTriggerConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperCmd) refers to ft32f0xx_rtc.o(.text.RTC_TamperCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperFilterConfig) refers to ft32f0xx_rtc.o(.text.RTC_TamperFilterConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperSamplingFreqConfig) refers to ft32f0xx_rtc.o(.text.RTC_TamperSamplingFreqConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperPinsPrechargeDuration) refers to ft32f0xx_rtc.o(.text.RTC_TamperPinsPrechargeDuration) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TimeStampOnTamperDetectionCmd) refers to ft32f0xx_rtc.o(.text.RTC_TimeStampOnTamperDetectionCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperPullUpCmd) refers to ft32f0xx_rtc.o(.text.RTC_TamperPullUpCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_OutputTypeConfig) refers to ft32f0xx_rtc.o(.text.RTC_OutputTypeConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_SynchroShiftConfig) refers to ft32f0xx_rtc.o(.text.RTC_WaitForSynchro) for RTC_WaitForSynchro
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SynchroShiftConfig) refers to ft32f0xx_rtc.o(.text.RTC_SynchroShiftConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ITConfig) refers to ft32f0xx_rtc.o(.text.RTC_ITConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetFlagStatus) refers to ft32f0xx_rtc.o(.text.RTC_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ClearFlag) refers to ft32f0xx_rtc.o(.text.RTC_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetITStatus) refers to ft32f0xx_rtc.o(.text.RTC_GetITStatus) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ClearITPendingBit) refers to ft32f0xx_rtc.o(.text.RTC_ClearITPendingBit) for [Anonymous Symbol]
    ft32f0xx_spi.o(.text.SPI_I2S_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    ft32f0xx_spi.o(.text.SPI_I2S_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_DeInit) refers to ft32f0xx_spi.o(.text.SPI_I2S_DeInit) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_StructInit) refers to ft32f0xx_spi.o(.text.SPI_StructInit) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_Init) refers to ft32f0xx_spi.o(.text.SPI_Init) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_Cmd) refers to ft32f0xx_spi.o(.text.SPI_Cmd) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_TIModeCmd) refers to ft32f0xx_spi.o(.text.SPI_TIModeCmd) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_DataSizeConfig) refers to ft32f0xx_spi.o(.text.SPI_DataSizeConfig) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_RxFIFOThresholdConfig) refers to ft32f0xx_spi.o(.text.SPI_RxFIFOThresholdConfig) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_BiDirectionalLineConfig) refers to ft32f0xx_spi.o(.text.SPI_BiDirectionalLineConfig) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_NSSInternalSoftwareConfig) refers to ft32f0xx_spi.o(.text.SPI_NSSInternalSoftwareConfig) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_SSOutputCmd) refers to ft32f0xx_spi.o(.text.SPI_SSOutputCmd) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_NSSPulseModeCmd) refers to ft32f0xx_spi.o(.text.SPI_NSSPulseModeCmd) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_SendData8) refers to ft32f0xx_spi.o(.text.SPI_SendData8) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_SendData16) refers to ft32f0xx_spi.o(.text.SPI_I2S_SendData16) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_ReceiveData8) refers to ft32f0xx_spi.o(.text.SPI_ReceiveData8) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_ReceiveData16) refers to ft32f0xx_spi.o(.text.SPI_I2S_ReceiveData16) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_CRCLengthConfig) refers to ft32f0xx_spi.o(.text.SPI_CRCLengthConfig) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_CalculateCRC) refers to ft32f0xx_spi.o(.text.SPI_CalculateCRC) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_TransmitCRC) refers to ft32f0xx_spi.o(.text.SPI_TransmitCRC) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_GetCRC) refers to ft32f0xx_spi.o(.text.SPI_GetCRC) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_GetCRCPolynomial) refers to ft32f0xx_spi.o(.text.SPI_GetCRCPolynomial) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_DMACmd) refers to ft32f0xx_spi.o(.text.SPI_I2S_DMACmd) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_LastDMATransferCmd) refers to ft32f0xx_spi.o(.text.SPI_LastDMATransferCmd) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_ITConfig) refers to ft32f0xx_spi.o(.text.SPI_I2S_ITConfig) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_GetTransmissionFIFOStatus) refers to ft32f0xx_spi.o(.text.SPI_GetTransmissionFIFOStatus) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_GetReceptionFIFOStatus) refers to ft32f0xx_spi.o(.text.SPI_GetReceptionFIFOStatus) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_GetFlagStatus) refers to ft32f0xx_spi.o(.text.SPI_I2S_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_ClearFlag) refers to ft32f0xx_spi.o(.text.SPI_I2S_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_GetITStatus) refers to ft32f0xx_spi.o(.text.SPI_I2S_GetITStatus) for [Anonymous Symbol]
    ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_DeInit) refers to ft32f0xx_syscfg.o(.text.SYSCFG_DeInit) for [Anonymous Symbol]
    ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_MemoryRemapConfig) refers to ft32f0xx_syscfg.o(.text.SYSCFG_MemoryRemapConfig) for [Anonymous Symbol]
    ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_DMAChannelRemapConfig) refers to ft32f0xx_syscfg.o(.text.SYSCFG_DMAChannelRemapConfig) for [Anonymous Symbol]
    ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_I2CFastModePlusConfig) refers to ft32f0xx_syscfg.o(.text.SYSCFG_I2CFastModePlusConfig) for [Anonymous Symbol]
    ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_IRDAEnvSelection) refers to ft32f0xx_syscfg.o(.text.SYSCFG_IRDAEnvSelection) for [Anonymous Symbol]
    ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_EXTILineConfig) refers to ft32f0xx_syscfg.o(.text.SYSCFG_EXTILineConfig) for [Anonymous Symbol]
    ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_BreakConfig) refers to ft32f0xx_syscfg.o(.text.SYSCFG_BreakConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.text.TIM_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    ft32f0xx_tim.o(.text.TIM_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_DeInit) refers to ft32f0xx_tim.o(.text.TIM_DeInit) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_TimeBaseInit) refers to ft32f0xx_tim.o(.text.TIM_TimeBaseInit) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_TimeBaseStructInit) refers to ft32f0xx_tim.o(.text.TIM_TimeBaseStructInit) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_PrescalerConfig) refers to ft32f0xx_tim.o(.text.TIM_PrescalerConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_CounterModeConfig) refers to ft32f0xx_tim.o(.text.TIM_CounterModeConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCounter) refers to ft32f0xx_tim.o(.text.TIM_SetCounter) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetAutoreload) refers to ft32f0xx_tim.o(.text.TIM_SetAutoreload) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCounter) refers to ft32f0xx_tim.o(.text.TIM_GetCounter) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetPrescaler) refers to ft32f0xx_tim.o(.text.TIM_GetPrescaler) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_UpdateDisableConfig) refers to ft32f0xx_tim.o(.text.TIM_UpdateDisableConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_UpdateRequestConfig) refers to ft32f0xx_tim.o(.text.TIM_UpdateRequestConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ARRPreloadConfig) refers to ft32f0xx_tim.o(.text.TIM_ARRPreloadConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectOnePulseMode) refers to ft32f0xx_tim.o(.text.TIM_SelectOnePulseMode) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetClockDivision) refers to ft32f0xx_tim.o(.text.TIM_SetClockDivision) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_Cmd) refers to ft32f0xx_tim.o(.text.TIM_Cmd) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_BDTRConfig) refers to ft32f0xx_tim.o(.text.TIM_BDTRConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_BDTRStructInit) refers to ft32f0xx_tim.o(.text.TIM_BDTRStructInit) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_CtrlPWMOutputs) refers to ft32f0xx_tim.o(.text.TIM_CtrlPWMOutputs) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1Init) refers to ft32f0xx_tim.o(.text.TIM_OC1Init) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2Init) refers to ft32f0xx_tim.o(.text.TIM_OC2Init) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3Init) refers to ft32f0xx_tim.o(.text.TIM_OC3Init) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC4Init) refers to ft32f0xx_tim.o(.text.TIM_OC4Init) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OCStructInit) refers to ft32f0xx_tim.o(.text.TIM_OCStructInit) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectOCxM) refers to ft32f0xx_tim.o(.text.TIM_SelectOCxM) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCompare1) refers to ft32f0xx_tim.o(.text.TIM_SetCompare1) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCompare2) refers to ft32f0xx_tim.o(.text.TIM_SetCompare2) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCompare3) refers to ft32f0xx_tim.o(.text.TIM_SetCompare3) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCompare4) refers to ft32f0xx_tim.o(.text.TIM_SetCompare4) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ForcedOC1Config) refers to ft32f0xx_tim.o(.text.TIM_ForcedOC1Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ForcedOC2Config) refers to ft32f0xx_tim.o(.text.TIM_ForcedOC2Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ForcedOC3Config) refers to ft32f0xx_tim.o(.text.TIM_ForcedOC3Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ForcedOC4Config) refers to ft32f0xx_tim.o(.text.TIM_ForcedOC4Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_CCPreloadControl) refers to ft32f0xx_tim.o(.text.TIM_CCPreloadControl) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1PreloadConfig) refers to ft32f0xx_tim.o(.text.TIM_OC1PreloadConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2PreloadConfig) refers to ft32f0xx_tim.o(.text.TIM_OC2PreloadConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3PreloadConfig) refers to ft32f0xx_tim.o(.text.TIM_OC3PreloadConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC4PreloadConfig) refers to ft32f0xx_tim.o(.text.TIM_OC4PreloadConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1FastConfig) refers to ft32f0xx_tim.o(.text.TIM_OC1FastConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2FastConfig) refers to ft32f0xx_tim.o(.text.TIM_OC2FastConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3FastConfig) refers to ft32f0xx_tim.o(.text.TIM_OC3FastConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC4FastConfig) refers to ft32f0xx_tim.o(.text.TIM_OC4FastConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearOC1Ref) refers to ft32f0xx_tim.o(.text.TIM_ClearOC1Ref) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearOC2Ref) refers to ft32f0xx_tim.o(.text.TIM_ClearOC2Ref) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearOC3Ref) refers to ft32f0xx_tim.o(.text.TIM_ClearOC3Ref) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearOC4Ref) refers to ft32f0xx_tim.o(.text.TIM_ClearOC4Ref) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1PolarityConfig) refers to ft32f0xx_tim.o(.text.TIM_OC1PolarityConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1NPolarityConfig) refers to ft32f0xx_tim.o(.text.TIM_OC1NPolarityConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2PolarityConfig) refers to ft32f0xx_tim.o(.text.TIM_OC2PolarityConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2NPolarityConfig) refers to ft32f0xx_tim.o(.text.TIM_OC2NPolarityConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3PolarityConfig) refers to ft32f0xx_tim.o(.text.TIM_OC3PolarityConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3NPolarityConfig) refers to ft32f0xx_tim.o(.text.TIM_OC3NPolarityConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC4PolarityConfig) refers to ft32f0xx_tim.o(.text.TIM_OC4PolarityConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectOCREFClear) refers to ft32f0xx_tim.o(.text.TIM_SelectOCREFClear) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_CCxCmd) refers to ft32f0xx_tim.o(.text.TIM_CCxCmd) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_CCxNCmd) refers to ft32f0xx_tim.o(.text.TIM_CCxNCmd) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectCOM) refers to ft32f0xx_tim.o(.text.TIM_SelectCOM) for [Anonymous Symbol]
    ft32f0xx_tim.o(.text.TIM_ICInit) refers to ft32f0xx_tim.o(.text.TI1_Config) for TI1_Config
    ft32f0xx_tim.o(.text.TIM_ICInit) refers to ft32f0xx_tim.o(.text.TIM_SetIC1Prescaler) for TIM_SetIC1Prescaler
    ft32f0xx_tim.o(.text.TIM_ICInit) refers to ft32f0xx_tim.o(.text.TI3_Config) for TI3_Config
    ft32f0xx_tim.o(.text.TIM_ICInit) refers to ft32f0xx_tim.o(.text.TIM_SetIC3Prescaler) for TIM_SetIC3Prescaler
    ft32f0xx_tim.o(.text.TIM_ICInit) refers to ft32f0xx_tim.o(.text.TI2_Config) for TI2_Config
    ft32f0xx_tim.o(.text.TIM_ICInit) refers to ft32f0xx_tim.o(.text.TIM_SetIC2Prescaler) for TIM_SetIC2Prescaler
    ft32f0xx_tim.o(.text.TIM_ICInit) refers to ft32f0xx_tim.o(.text.TI4_Config) for TI4_Config
    ft32f0xx_tim.o(.text.TIM_ICInit) refers to ft32f0xx_tim.o(.text.TIM_SetIC4Prescaler) for TIM_SetIC4Prescaler
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ICInit) refers to ft32f0xx_tim.o(.text.TIM_ICInit) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TI1_Config) refers to ft32f0xx_tim.o(.text.TI1_Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetIC1Prescaler) refers to ft32f0xx_tim.o(.text.TIM_SetIC1Prescaler) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TI2_Config) refers to ft32f0xx_tim.o(.text.TI2_Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetIC2Prescaler) refers to ft32f0xx_tim.o(.text.TIM_SetIC2Prescaler) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TI3_Config) refers to ft32f0xx_tim.o(.text.TI3_Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetIC3Prescaler) refers to ft32f0xx_tim.o(.text.TIM_SetIC3Prescaler) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TI4_Config) refers to ft32f0xx_tim.o(.text.TI4_Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetIC4Prescaler) refers to ft32f0xx_tim.o(.text.TIM_SetIC4Prescaler) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ICStructInit) refers to ft32f0xx_tim.o(.text.TIM_ICStructInit) for [Anonymous Symbol]
    ft32f0xx_tim.o(.text.TIM_PWMIConfig) refers to ft32f0xx_tim.o(.text.TI2_Config) for TI2_Config
    ft32f0xx_tim.o(.text.TIM_PWMIConfig) refers to ft32f0xx_tim.o(.text.TIM_SetIC2Prescaler) for TIM_SetIC2Prescaler
    ft32f0xx_tim.o(.text.TIM_PWMIConfig) refers to ft32f0xx_tim.o(.text.TI1_Config) for TI1_Config
    ft32f0xx_tim.o(.text.TIM_PWMIConfig) refers to ft32f0xx_tim.o(.text.TIM_SetIC1Prescaler) for TIM_SetIC1Prescaler
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_PWMIConfig) refers to ft32f0xx_tim.o(.text.TIM_PWMIConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCapture1) refers to ft32f0xx_tim.o(.text.TIM_GetCapture1) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCapture2) refers to ft32f0xx_tim.o(.text.TIM_GetCapture2) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCapture3) refers to ft32f0xx_tim.o(.text.TIM_GetCapture3) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCapture4) refers to ft32f0xx_tim.o(.text.TIM_GetCapture4) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ITConfig) refers to ft32f0xx_tim.o(.text.TIM_ITConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GenerateEvent) refers to ft32f0xx_tim.o(.text.TIM_GenerateEvent) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetFlagStatus) refers to ft32f0xx_tim.o(.text.TIM_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearFlag) refers to ft32f0xx_tim.o(.text.TIM_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetITStatus) refers to ft32f0xx_tim.o(.text.TIM_GetITStatus) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearITPendingBit) refers to ft32f0xx_tim.o(.text.TIM_ClearITPendingBit) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_DMAConfig) refers to ft32f0xx_tim.o(.text.TIM_DMAConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_DMACmd) refers to ft32f0xx_tim.o(.text.TIM_DMACmd) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectCCDMA) refers to ft32f0xx_tim.o(.text.TIM_SelectCCDMA) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_InternalClockConfig) refers to ft32f0xx_tim.o(.text.TIM_InternalClockConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.text.TIM_ITRxExternalClockConfig) refers to ft32f0xx_tim.o(.text.TIM_SelectInputTrigger) for TIM_SelectInputTrigger
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ITRxExternalClockConfig) refers to ft32f0xx_tim.o(.text.TIM_ITRxExternalClockConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectInputTrigger) refers to ft32f0xx_tim.o(.text.TIM_SelectInputTrigger) for [Anonymous Symbol]
    ft32f0xx_tim.o(.text.TIM_TIxExternalClockConfig) refers to ft32f0xx_tim.o(.text.TI2_Config) for TI2_Config
    ft32f0xx_tim.o(.text.TIM_TIxExternalClockConfig) refers to ft32f0xx_tim.o(.text.TI1_Config) for TI1_Config
    ft32f0xx_tim.o(.text.TIM_TIxExternalClockConfig) refers to ft32f0xx_tim.o(.text.TIM_SelectInputTrigger) for TIM_SelectInputTrigger
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_TIxExternalClockConfig) refers to ft32f0xx_tim.o(.text.TIM_TIxExternalClockConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.text.TIM_ETRClockMode1Config) refers to ft32f0xx_tim.o(.text.TIM_ETRConfig) for TIM_ETRConfig
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ETRClockMode1Config) refers to ft32f0xx_tim.o(.text.TIM_ETRClockMode1Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ETRConfig) refers to ft32f0xx_tim.o(.text.TIM_ETRConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.text.TIM_ETRClockMode2Config) refers to ft32f0xx_tim.o(.text.TIM_ETRConfig) for TIM_ETRConfig
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ETRClockMode2Config) refers to ft32f0xx_tim.o(.text.TIM_ETRClockMode2Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectOutputTrigger) refers to ft32f0xx_tim.o(.text.TIM_SelectOutputTrigger) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectSlaveMode) refers to ft32f0xx_tim.o(.text.TIM_SelectSlaveMode) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectMasterSlaveMode) refers to ft32f0xx_tim.o(.text.TIM_SelectMasterSlaveMode) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_EncoderInterfaceConfig) refers to ft32f0xx_tim.o(.text.TIM_EncoderInterfaceConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectHallSensor) refers to ft32f0xx_tim.o(.text.TIM_SelectHallSensor) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_RemapConfig) refers to ft32f0xx_tim.o(.text.TIM_RemapConfig) for [Anonymous Symbol]
    ft32f0xx_usart.o(.text.USART_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    ft32f0xx_usart.o(.text.USART_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    ft32f0xx_usart.o(.ARM.exidx.text.USART_DeInit) refers to ft32f0xx_usart.o(.text.USART_DeInit) for [Anonymous Symbol]
    ft32f0xx_usart.o(.text.USART_Init) refers to ft32f0xx_rcc.o(.text.RCC_GetClocksFreq) for RCC_GetClocksFreq
    ft32f0xx_usart.o(.text.USART_Init) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    ft32f0xx_usart.o(.ARM.exidx.text.USART_Init) refers to ft32f0xx_usart.o(.text.USART_Init) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_StructInit) refers to ft32f0xx_usart.o(.text.USART_StructInit) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_ClockInit) refers to ft32f0xx_usart.o(.text.USART_ClockInit) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_ClockStructInit) refers to ft32f0xx_usart.o(.text.USART_ClockStructInit) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_Cmd) refers to ft32f0xx_usart.o(.text.USART_Cmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_DirectionModeCmd) refers to ft32f0xx_usart.o(.text.USART_DirectionModeCmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_OverSampling8Cmd) refers to ft32f0xx_usart.o(.text.USART_OverSampling8Cmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_OneBitMethodCmd) refers to ft32f0xx_usart.o(.text.USART_OneBitMethodCmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_MSBFirstCmd) refers to ft32f0xx_usart.o(.text.USART_MSBFirstCmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_DataInvCmd) refers to ft32f0xx_usart.o(.text.USART_DataInvCmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_InvPinCmd) refers to ft32f0xx_usart.o(.text.USART_InvPinCmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_SWAPPinCmd) refers to ft32f0xx_usart.o(.text.USART_SWAPPinCmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_ReceiverTimeOutCmd) refers to ft32f0xx_usart.o(.text.USART_ReceiverTimeOutCmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_SetReceiverTimeOut) refers to ft32f0xx_usart.o(.text.USART_SetReceiverTimeOut) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_AutoBaudRateCmd) refers to ft32f0xx_usart.o(.text.USART_AutoBaudRateCmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_AutoBaudRateConfig) refers to ft32f0xx_usart.o(.text.USART_AutoBaudRateConfig) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_SendData) refers to ft32f0xx_usart.o(.text.USART_SendData) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_ReceiveData) refers to ft32f0xx_usart.o(.text.USART_ReceiveData) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_SetAddress) refers to ft32f0xx_usart.o(.text.USART_SetAddress) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_MuteModeCmd) refers to ft32f0xx_usart.o(.text.USART_MuteModeCmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_MuteModeWakeUpConfig) refers to ft32f0xx_usart.o(.text.USART_MuteModeWakeUpConfig) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_AddressDetectionConfig) refers to ft32f0xx_usart.o(.text.USART_AddressDetectionConfig) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_HalfDuplexCmd) refers to ft32f0xx_usart.o(.text.USART_HalfDuplexCmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_DECmd) refers to ft32f0xx_usart.o(.text.USART_DECmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_DEPolarityConfig) refers to ft32f0xx_usart.o(.text.USART_DEPolarityConfig) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_SetDEAssertionTime) refers to ft32f0xx_usart.o(.text.USART_SetDEAssertionTime) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_SetDEDeassertionTime) refers to ft32f0xx_usart.o(.text.USART_SetDEDeassertionTime) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_DMACmd) refers to ft32f0xx_usart.o(.text.USART_DMACmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_DMAReceptionErrorConfig) refers to ft32f0xx_usart.o(.text.USART_DMAReceptionErrorConfig) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_ITConfig) refers to ft32f0xx_usart.o(.text.USART_ITConfig) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_RequestCmd) refers to ft32f0xx_usart.o(.text.USART_RequestCmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_OverrunDetectionConfig) refers to ft32f0xx_usart.o(.text.USART_OverrunDetectionConfig) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_GetFlagStatus) refers to ft32f0xx_usart.o(.text.USART_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_ClearFlag) refers to ft32f0xx_usart.o(.text.USART_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_GetITStatus) refers to ft32f0xx_usart.o(.text.USART_GetITStatus) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_ClearITPendingBit) refers to ft32f0xx_usart.o(.text.USART_ClearITPendingBit) for [Anonymous Symbol]
    ft32f0xx_wwdg.o(.text.WWDG_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_DeInit) refers to ft32f0xx_wwdg.o(.text.WWDG_DeInit) for [Anonymous Symbol]
    ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_SetPrescaler) refers to ft32f0xx_wwdg.o(.text.WWDG_SetPrescaler) for [Anonymous Symbol]
    ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_SetWindowValue) refers to ft32f0xx_wwdg.o(.text.WWDG_SetWindowValue) for [Anonymous Symbol]
    ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_EnableIT) refers to ft32f0xx_wwdg.o(.text.WWDG_EnableIT) for [Anonymous Symbol]
    ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_SetCounter) refers to ft32f0xx_wwdg.o(.text.WWDG_SetCounter) for [Anonymous Symbol]
    ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_Enable) refers to ft32f0xx_wwdg.o(.text.WWDG_Enable) for [Anonymous Symbol]
    ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_GetFlagStatus) refers to ft32f0xx_wwdg.o(.text.WWDG_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_ClearFlag) refers to ft32f0xx_wwdg.o(.text.WWDG_ClearFlag) for [Anonymous Symbol]
    system_ft32f0xx.o(.text.SystemInit) refers to system_ft32f0xx.o(.text.SetSysClock) for SetSysClock
    system_ft32f0xx.o(.ARM.exidx.text.SystemInit) refers to system_ft32f0xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_ft32f0xx.o(.ARM.exidx.text.SetSysClock) refers to system_ft32f0xx.o(.text.SetSysClock) for [Anonymous Symbol]
    system_ft32f0xx.o(.text.SystemCoreClockUpdate) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    system_ft32f0xx.o(.text.SystemCoreClockUpdate) refers to system_ft32f0xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_ft32f0xx.o(.text.SystemCoreClockUpdate) refers to system_ft32f0xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_ft32f0xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_ft32f0xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    intqueuetimer.o(.text.vInitialiseTimerForIntQueueTest) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    intqueuetimer.o(.text.vInitialiseTimerForIntQueueTest) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    intqueuetimer.o(.text.vInitialiseTimerForIntQueueTest) refers to ft32f0xx_tim.o(.text.TIM_TimeBaseInit) for TIM_TimeBaseInit
    intqueuetimer.o(.text.vInitialiseTimerForIntQueueTest) refers to ft32f0xx_tim.o(.text.TIM_Cmd) for TIM_Cmd
    intqueuetimer.o(.text.vInitialiseTimerForIntQueueTest) refers to ft32f0xx_tim.o(.text.TIM_ITConfig) for TIM_ITConfig
    intqueuetimer.o(.text.vInitialiseTimerForIntQueueTest) refers to ft32f0xx_misc.o(.text.NVIC_Init) for NVIC_Init
    intqueuetimer.o(.text.vInitialiseTimerForIntQueueTest) refers to system_ft32f0xx.o(.data.SystemCoreClock) for SystemCoreClock
    intqueuetimer.o(.ARM.exidx.text.vInitialiseTimerForIntQueueTest) refers to intqueuetimer.o(.text.vInitialiseTimerForIntQueueTest) for [Anonymous Symbol]
    intqueuetimer.o(.text.IntQueueTestTimerHandler) refers to intqueue.o(.text.xSecondTimerHandler) for xSecondTimerHandler
    intqueuetimer.o(.ARM.exidx.text.IntQueueTestTimerHandler) refers to intqueuetimer.o(.text.IntQueueTestTimerHandler) for [Anonymous Symbol]
    regtests.o(.text.vStartRegisterTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    regtests.o(.text.vStartRegisterTasks) refers to regtests.o(.text.prvRegisterTest1Task) for prvRegisterTest1Task
    regtests.o(.text.vStartRegisterTasks) refers to regtests.o(.text.prvRegisterTest2Task) for prvRegisterTest2Task
    regtests.o(.text.vStartRegisterTasks) refers to regtests.o(.text.prvRegisterTest3Task) for prvRegisterTest3Task
    regtests.o(.text.vStartRegisterTasks) refers to regtests.o(.text.prvRegisterTest4Task) for prvRegisterTest4Task
    regtests.o(.ARM.exidx.text.vStartRegisterTasks) refers to regtests.o(.text.vStartRegisterTasks) for [Anonymous Symbol]
    regtests.o(.text.prvRegisterTest1Task) refers to regtests.o(.bss.ulRegisterTest1Counter) for [Anonymous Symbol]
    regtests.o(.ARM.exidx.text.prvRegisterTest1Task) refers to regtests.o(.text.prvRegisterTest1Task) for [Anonymous Symbol]
    regtests.o(.text.prvRegisterTest2Task) refers to regtests.o(.bss.ulRegisterTest2Counter) for [Anonymous Symbol]
    regtests.o(.ARM.exidx.text.prvRegisterTest2Task) refers to regtests.o(.text.prvRegisterTest2Task) for [Anonymous Symbol]
    regtests.o(.text.prvRegisterTest3Task) refers to regtests.o(.bss.ulRegisterTest3Counter) for [Anonymous Symbol]
    regtests.o(.ARM.exidx.text.prvRegisterTest3Task) refers to regtests.o(.text.prvRegisterTest3Task) for [Anonymous Symbol]
    regtests.o(.text.prvRegisterTest4Task) refers to regtests.o(.bss.ulRegisterTest4Counter) for [Anonymous Symbol]
    regtests.o(.ARM.exidx.text.prvRegisterTest4Task) refers to regtests.o(.text.prvRegisterTest4Task) for [Anonymous Symbol]
    regtests.o(.text.xAreRegisterTasksStillRunning) refers to regtests.o(.bss.ulRegisterTest1Counter) for [Anonymous Symbol]
    regtests.o(.text.xAreRegisterTasksStillRunning) refers to regtests.o(.bss.xAreRegisterTasksStillRunning.ulLastRegisterTest1Counter) for [Anonymous Symbol]
    regtests.o(.text.xAreRegisterTasksStillRunning) refers to regtests.o(.bss.xErrorDetected) for [Anonymous Symbol]
    regtests.o(.text.xAreRegisterTasksStillRunning) refers to regtests.o(.bss.ulRegisterTest2Counter) for [Anonymous Symbol]
    regtests.o(.text.xAreRegisterTasksStillRunning) refers to regtests.o(.bss.xAreRegisterTasksStillRunning.ulLastRegisterTest2Counter) for [Anonymous Symbol]
    regtests.o(.text.xAreRegisterTasksStillRunning) refers to regtests.o(.bss.ulRegisterTest3Counter) for [Anonymous Symbol]
    regtests.o(.text.xAreRegisterTasksStillRunning) refers to regtests.o(.bss.xAreRegisterTasksStillRunning.ulLastRegisterTest3Counter) for [Anonymous Symbol]
    regtests.o(.text.xAreRegisterTasksStillRunning) refers to regtests.o(.bss.ulRegisterTest4Counter) for [Anonymous Symbol]
    regtests.o(.text.xAreRegisterTasksStillRunning) refers to regtests.o(.bss.xAreRegisterTasksStillRunning.ulLastRegisterTest4Counter) for [Anonymous Symbol]
    regtests.o(.ARM.exidx.text.xAreRegisterTasksStillRunning) refers to regtests.o(.text.xAreRegisterTasksStillRunning) for [Anonymous Symbol]
    testrunner.o(.text.vStartTests) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    testrunner.o(.text.vStartTests) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    testrunner.o(.text.vStartTests) refers to testrunner.o(.text.prvCheckTask) for prvCheckTask
    testrunner.o(.ARM.exidx.text.vStartTests) refers to testrunner.o(.text.vStartTests) for [Anonymous Symbol]
    testrunner.o(.text.prvCheckTask) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    testrunner.o(.text.prvCheckTask) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    testrunner.o(.text.prvCheckTask) refers to printf8.o(i.__0printf$8) for __2printf
    testrunner.o(.ARM.exidx.text.prvCheckTask) refers to testrunner.o(.text.prvCheckTask) for [Anonymous Symbol]
    testrunner.o(.ARM.exidx.text.vApplicationTickHook) refers to testrunner.o(.text.vApplicationTickHook) for [Anonymous Symbol]
    abortdelay.o(.text.vCreateAbortDelayTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    abortdelay.o(.text.vCreateAbortDelayTasks) refers to abortdelay.o(.text.prvControllingTask) for prvControllingTask
    abortdelay.o(.text.vCreateAbortDelayTasks) refers to abortdelay.o(.rodata.str1.1) for [Anonymous Symbol]
    abortdelay.o(.text.vCreateAbortDelayTasks) refers to abortdelay.o(.text.prvBlockingTask) for prvBlockingTask
    abortdelay.o(.ARM.exidx.text.vCreateAbortDelayTasks) refers to abortdelay.o(.text.vCreateAbortDelayTasks) for [Anonymous Symbol]
    abortdelay.o(.text.prvControllingTask) refers to tasks.o(.text.xTaskGetHandle) for xTaskGetHandle
    abortdelay.o(.text.prvControllingTask) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    abortdelay.o(.text.prvControllingTask) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    abortdelay.o(.text.prvControllingTask) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    abortdelay.o(.text.prvControllingTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    abortdelay.o(.text.prvControllingTask) refers to tasks.o(.text.xTaskAbortDelay) for xTaskAbortDelay
    abortdelay.o(.text.prvControllingTask) refers to tasks.o(.text.ulTaskGenericNotifyTake) for ulTaskGenericNotifyTake
    abortdelay.o(.text.prvControllingTask) refers to abortdelay.o(.text.prvCheckExpectedTimeIsWithinAnAcceptableMargin) for prvCheckExpectedTimeIsWithinAnAcceptableMargin
    abortdelay.o(.text.prvControllingTask) refers to abortdelay.o(.rodata.str1.1) for [Anonymous Symbol]
    abortdelay.o(.text.prvControllingTask) refers to abortdelay.o(.bss.xErrorOccurred) for [Anonymous Symbol]
    abortdelay.o(.text.prvControllingTask) refers to abortdelay.o(.bss.xControllingCycles) for [Anonymous Symbol]
    abortdelay.o(.ARM.exidx.text.prvControllingTask) refers to abortdelay.o(.text.prvControllingTask) for [Anonymous Symbol]
    abortdelay.o(.text.prvBlockingTask) refers to abortdelay.o(.text.prvPerformSingleTaskTests) for prvPerformSingleTaskTests
    abortdelay.o(.text.prvBlockingTask) refers to tasks.o(.text.xTaskGetHandle) for xTaskGetHandle
    abortdelay.o(.text.prvBlockingTask) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    abortdelay.o(.text.prvBlockingTask) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    abortdelay.o(.text.prvBlockingTask) refers to abortdelay.o(.text.prvTestAbortingStreamBufferReceive) for prvTestAbortingStreamBufferReceive
    abortdelay.o(.text.prvBlockingTask) refers to abortdelay.o(.text.prvTestAbortingTaskNotifyWait) for prvTestAbortingTaskNotifyWait
    abortdelay.o(.text.prvBlockingTask) refers to abortdelay.o(.text.prvTestAbortingTaskNotifyTake) for prvTestAbortingTaskNotifyTake
    abortdelay.o(.text.prvBlockingTask) refers to abortdelay.o(.text.prvTestAbortingTaskDelay) for prvTestAbortingTaskDelay
    abortdelay.o(.text.prvBlockingTask) refers to abortdelay.o(.text.prvTestAbortingTaskDelayUntil) for prvTestAbortingTaskDelayUntil
    abortdelay.o(.text.prvBlockingTask) refers to abortdelay.o(.text.prvTestAbortingSemaphoreTake) for prvTestAbortingSemaphoreTake
    abortdelay.o(.text.prvBlockingTask) refers to abortdelay.o(.text.prvTestAbortingEventGroupWait) for prvTestAbortingEventGroupWait
    abortdelay.o(.text.prvBlockingTask) refers to abortdelay.o(.text.prvTestAbortingQueueSend) for prvTestAbortingQueueSend
    abortdelay.o(.text.prvBlockingTask) refers to abortdelay.o(.rodata.str1.1) for [Anonymous Symbol]
    abortdelay.o(.text.prvBlockingTask) refers to abortdelay.o(.bss.xBlockingCycles) for [Anonymous Symbol]
    abortdelay.o(.ARM.exidx.text.prvBlockingTask) refers to abortdelay.o(.text.prvBlockingTask) for [Anonymous Symbol]
    abortdelay.o(.text.xAreAbortDelayTestTasksStillRunning) refers to abortdelay.o(.bss.xControllingCycles) for [Anonymous Symbol]
    abortdelay.o(.text.xAreAbortDelayTestTasksStillRunning) refers to abortdelay.o(.bss.xBlockingCycles) for [Anonymous Symbol]
    abortdelay.o(.text.xAreAbortDelayTestTasksStillRunning) refers to abortdelay.o(.bss.xErrorOccurred) for [Anonymous Symbol]
    abortdelay.o(.text.xAreAbortDelayTestTasksStillRunning) refers to abortdelay.o(.bss.xAreAbortDelayTestTasksStillRunning.xLastBlockingCycleCount) for [Anonymous Symbol]
    abortdelay.o(.text.xAreAbortDelayTestTasksStillRunning) refers to abortdelay.o(.bss.xAreAbortDelayTestTasksStillRunning.xLastControllingCycleCount) for [Anonymous Symbol]
    abortdelay.o(.ARM.exidx.text.xAreAbortDelayTestTasksStillRunning) refers to abortdelay.o(.text.xAreAbortDelayTestTasksStillRunning) for [Anonymous Symbol]
    abortdelay.o(.text.prvCheckExpectedTimeIsWithinAnAcceptableMargin) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    abortdelay.o(.text.prvCheckExpectedTimeIsWithinAnAcceptableMargin) refers to abortdelay.o(.bss.xErrorOccurred) for [Anonymous Symbol]
    abortdelay.o(.ARM.exidx.text.prvCheckExpectedTimeIsWithinAnAcceptableMargin) refers to abortdelay.o(.text.prvCheckExpectedTimeIsWithinAnAcceptableMargin) for [Anonymous Symbol]
    abortdelay.o(.text.prvPerformSingleTaskTests) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    abortdelay.o(.text.prvPerformSingleTaskTests) refers to tasks.o(.text.xTaskAbortDelay) for xTaskAbortDelay
    abortdelay.o(.text.prvPerformSingleTaskTests) refers to abortdelay.o(.bss.xErrorOccurred) for [Anonymous Symbol]
    abortdelay.o(.ARM.exidx.text.prvPerformSingleTaskTests) refers to abortdelay.o(.text.prvPerformSingleTaskTests) for [Anonymous Symbol]
    abortdelay.o(.text.prvTestAbortingTaskNotifyWait) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    abortdelay.o(.text.prvTestAbortingTaskNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    abortdelay.o(.text.prvTestAbortingTaskNotifyWait) refers to abortdelay.o(.text.prvCheckExpectedTimeIsWithinAnAcceptableMargin) for prvCheckExpectedTimeIsWithinAnAcceptableMargin
    abortdelay.o(.text.prvTestAbortingTaskNotifyWait) refers to abortdelay.o(.bss.xErrorOccurred) for [Anonymous Symbol]
    abortdelay.o(.ARM.exidx.text.prvTestAbortingTaskNotifyWait) refers to abortdelay.o(.text.prvTestAbortingTaskNotifyWait) for [Anonymous Symbol]
    abortdelay.o(.text.prvTestAbortingTaskNotifyTake) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    abortdelay.o(.text.prvTestAbortingTaskNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for ulTaskGenericNotifyTake
    abortdelay.o(.text.prvTestAbortingTaskNotifyTake) refers to abortdelay.o(.text.prvCheckExpectedTimeIsWithinAnAcceptableMargin) for prvCheckExpectedTimeIsWithinAnAcceptableMargin
    abortdelay.o(.text.prvTestAbortingTaskNotifyTake) refers to abortdelay.o(.bss.xErrorOccurred) for [Anonymous Symbol]
    abortdelay.o(.ARM.exidx.text.prvTestAbortingTaskNotifyTake) refers to abortdelay.o(.text.prvTestAbortingTaskNotifyTake) for [Anonymous Symbol]
    abortdelay.o(.text.prvTestAbortingTaskDelay) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    abortdelay.o(.text.prvTestAbortingTaskDelay) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    abortdelay.o(.text.prvTestAbortingTaskDelay) refers to abortdelay.o(.text.prvCheckExpectedTimeIsWithinAnAcceptableMargin) for prvCheckExpectedTimeIsWithinAnAcceptableMargin
    abortdelay.o(.ARM.exidx.text.prvTestAbortingTaskDelay) refers to abortdelay.o(.text.prvTestAbortingTaskDelay) for [Anonymous Symbol]
    abortdelay.o(.text.prvTestAbortingTaskDelayUntil) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    abortdelay.o(.text.prvTestAbortingTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    abortdelay.o(.text.prvTestAbortingTaskDelayUntil) refers to abortdelay.o(.text.prvCheckExpectedTimeIsWithinAnAcceptableMargin) for prvCheckExpectedTimeIsWithinAnAcceptableMargin
    abortdelay.o(.ARM.exidx.text.prvTestAbortingTaskDelayUntil) refers to abortdelay.o(.text.prvTestAbortingTaskDelayUntil) for [Anonymous Symbol]
    abortdelay.o(.text.prvTestAbortingSemaphoreTake) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    abortdelay.o(.text.prvTestAbortingSemaphoreTake) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    abortdelay.o(.text.prvTestAbortingSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    abortdelay.o(.text.prvTestAbortingSemaphoreTake) refers to abortdelay.o(.text.prvCheckExpectedTimeIsWithinAnAcceptableMargin) for prvCheckExpectedTimeIsWithinAnAcceptableMargin
    abortdelay.o(.text.prvTestAbortingSemaphoreTake) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    abortdelay.o(.text.prvTestAbortingSemaphoreTake) refers to abortdelay.o(.bss.xErrorOccurred) for [Anonymous Symbol]
    abortdelay.o(.ARM.exidx.text.prvTestAbortingSemaphoreTake) refers to abortdelay.o(.text.prvTestAbortingSemaphoreTake) for [Anonymous Symbol]
    abortdelay.o(.text.prvTestAbortingEventGroupWait) refers to event_groups.o(.text.xEventGroupCreate) for xEventGroupCreate
    abortdelay.o(.text.prvTestAbortingEventGroupWait) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    abortdelay.o(.text.prvTestAbortingEventGroupWait) refers to event_groups.o(.text.xEventGroupWaitBits) for xEventGroupWaitBits
    abortdelay.o(.text.prvTestAbortingEventGroupWait) refers to abortdelay.o(.text.prvCheckExpectedTimeIsWithinAnAcceptableMargin) for prvCheckExpectedTimeIsWithinAnAcceptableMargin
    abortdelay.o(.text.prvTestAbortingEventGroupWait) refers to event_groups.o(.text.vEventGroupDelete) for vEventGroupDelete
    abortdelay.o(.text.prvTestAbortingEventGroupWait) refers to abortdelay.o(.bss.xErrorOccurred) for [Anonymous Symbol]
    abortdelay.o(.ARM.exidx.text.prvTestAbortingEventGroupWait) refers to abortdelay.o(.text.prvTestAbortingEventGroupWait) for [Anonymous Symbol]
    abortdelay.o(.text.prvTestAbortingQueueSend) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    abortdelay.o(.text.prvTestAbortingQueueSend) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    abortdelay.o(.text.prvTestAbortingQueueSend) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    abortdelay.o(.text.prvTestAbortingQueueSend) refers to abortdelay.o(.text.prvCheckExpectedTimeIsWithinAnAcceptableMargin) for prvCheckExpectedTimeIsWithinAnAcceptableMargin
    abortdelay.o(.text.prvTestAbortingQueueSend) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    abortdelay.o(.text.prvTestAbortingQueueSend) refers to abortdelay.o(.bss.xErrorOccurred) for [Anonymous Symbol]
    abortdelay.o(.ARM.exidx.text.prvTestAbortingQueueSend) refers to abortdelay.o(.text.prvTestAbortingQueueSend) for [Anonymous Symbol]
    abortdelay.o(.text.prvTestAbortingStreamBufferReceive) refers to stream_buffer.o(.text.xStreamBufferGenericCreate) for xStreamBufferGenericCreate
    abortdelay.o(.text.prvTestAbortingStreamBufferReceive) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    abortdelay.o(.text.prvTestAbortingStreamBufferReceive) refers to stream_buffer.o(.text.xStreamBufferReceive) for xStreamBufferReceive
    abortdelay.o(.text.prvTestAbortingStreamBufferReceive) refers to abortdelay.o(.text.prvCheckExpectedTimeIsWithinAnAcceptableMargin) for prvCheckExpectedTimeIsWithinAnAcceptableMargin
    abortdelay.o(.text.prvTestAbortingStreamBufferReceive) refers to stream_buffer.o(.text.vStreamBufferDelete) for vStreamBufferDelete
    abortdelay.o(.text.prvTestAbortingStreamBufferReceive) refers to abortdelay.o(.bss.xErrorOccurred) for [Anonymous Symbol]
    abortdelay.o(.ARM.exidx.text.prvTestAbortingStreamBufferReceive) refers to abortdelay.o(.text.prvTestAbortingStreamBufferReceive) for [Anonymous Symbol]
    blockq.o(.text.vStartBlockingQueueTasks) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    blockq.o(.text.vStartBlockingQueueTasks) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    blockq.o(.text.vStartBlockingQueueTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    blockq.o(.text.vStartBlockingQueueTasks) refers to blockq.o(.bss.sBlockingConsumerCount) for [Anonymous Symbol]
    blockq.o(.text.vStartBlockingQueueTasks) refers to blockq.o(.bss.sBlockingProducerCount) for [Anonymous Symbol]
    blockq.o(.text.vStartBlockingQueueTasks) refers to blockq.o(.text.vBlockingQueueConsumer) for vBlockingQueueConsumer
    blockq.o(.text.vStartBlockingQueueTasks) refers to blockq.o(.text.vBlockingQueueProducer) for vBlockingQueueProducer
    blockq.o(.ARM.exidx.text.vStartBlockingQueueTasks) refers to blockq.o(.text.vStartBlockingQueueTasks) for [Anonymous Symbol]
    blockq.o(.text.vBlockingQueueConsumer) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    blockq.o(.ARM.exidx.text.vBlockingQueueConsumer) refers to blockq.o(.text.vBlockingQueueConsumer) for [Anonymous Symbol]
    blockq.o(.text.vBlockingQueueProducer) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    blockq.o(.ARM.exidx.text.vBlockingQueueProducer) refers to blockq.o(.text.vBlockingQueueProducer) for [Anonymous Symbol]
    blockq.o(.text.xAreBlockingQueuesStillRunning) refers to blockq.o(.bss.sBlockingConsumerCount) for [Anonymous Symbol]
    blockq.o(.text.xAreBlockingQueuesStillRunning) refers to blockq.o(.bss.xAreBlockingQueuesStillRunning.sLastBlockingConsumerCount) for [Anonymous Symbol]
    blockq.o(.text.xAreBlockingQueuesStillRunning) refers to blockq.o(.bss.sBlockingProducerCount) for [Anonymous Symbol]
    blockq.o(.text.xAreBlockingQueuesStillRunning) refers to blockq.o(.bss.xAreBlockingQueuesStillRunning.sLastBlockingProducerCount) for [Anonymous Symbol]
    blockq.o(.ARM.exidx.text.xAreBlockingQueuesStillRunning) refers to blockq.o(.text.xAreBlockingQueuesStillRunning) for [Anonymous Symbol]
    blocktim.o(.text.vCreateBlockTimeTasks) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    blocktim.o(.text.vCreateBlockTimeTasks) refers to queue.o(.text.vQueueAddToRegistry) for vQueueAddToRegistry
    blocktim.o(.text.vCreateBlockTimeTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    blocktim.o(.text.vCreateBlockTimeTasks) refers to blocktim.o(.bss.xTestQueue) for [Anonymous Symbol]
    blocktim.o(.text.vCreateBlockTimeTasks) refers to blocktim.o(.text.vPrimaryBlockTimeTestTask) for vPrimaryBlockTimeTestTask
    blocktim.o(.text.vCreateBlockTimeTasks) refers to blocktim.o(.bss.xSecondary) for [Anonymous Symbol]
    blocktim.o(.text.vCreateBlockTimeTasks) refers to blocktim.o(.text.vSecondaryBlockTimeTestTask) for vSecondaryBlockTimeTestTask
    blocktim.o(.ARM.exidx.text.vCreateBlockTimeTasks) refers to blocktim.o(.text.vCreateBlockTimeTasks) for [Anonymous Symbol]
    blocktim.o(.text.vPrimaryBlockTimeTestTask) refers to blocktim.o(.text.prvBasicDelayTests) for prvBasicDelayTests
    blocktim.o(.text.vPrimaryBlockTimeTestTask) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    blocktim.o(.text.vPrimaryBlockTimeTestTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    blocktim.o(.text.vPrimaryBlockTimeTestTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    blocktim.o(.text.vPrimaryBlockTimeTestTask) refers to tasks.o(.text.vTaskResume) for vTaskResume
    blocktim.o(.text.vPrimaryBlockTimeTestTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    blocktim.o(.text.vPrimaryBlockTimeTestTask) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    blocktim.o(.text.vPrimaryBlockTimeTestTask) refers to blocktim.o(.bss.xTestQueue) for [Anonymous Symbol]
    blocktim.o(.text.vPrimaryBlockTimeTestTask) refers to blocktim.o(.bss.xErrorOccurred) for [Anonymous Symbol]
    blocktim.o(.text.vPrimaryBlockTimeTestTask) refers to blocktim.o(.bss.xRunIndicator) for [Anonymous Symbol]
    blocktim.o(.text.vPrimaryBlockTimeTestTask) refers to blocktim.o(.bss.xSecondary) for [Anonymous Symbol]
    blocktim.o(.text.vPrimaryBlockTimeTestTask) refers to blocktim.o(.bss.xPrimaryCycles) for [Anonymous Symbol]
    blocktim.o(.ARM.exidx.text.vPrimaryBlockTimeTestTask) refers to blocktim.o(.text.vPrimaryBlockTimeTestTask) for [Anonymous Symbol]
    blocktim.o(.text.vSecondaryBlockTimeTestTask) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    blocktim.o(.text.vSecondaryBlockTimeTestTask) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    blocktim.o(.text.vSecondaryBlockTimeTestTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    blocktim.o(.text.vSecondaryBlockTimeTestTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    blocktim.o(.text.vSecondaryBlockTimeTestTask) refers to blocktim.o(.bss.xRunIndicator) for [Anonymous Symbol]
    blocktim.o(.text.vSecondaryBlockTimeTestTask) refers to blocktim.o(.bss.xTestQueue) for [Anonymous Symbol]
    blocktim.o(.text.vSecondaryBlockTimeTestTask) refers to blocktim.o(.bss.xErrorOccurred) for [Anonymous Symbol]
    blocktim.o(.text.vSecondaryBlockTimeTestTask) refers to blocktim.o(.bss.xSecondaryCycles) for [Anonymous Symbol]
    blocktim.o(.ARM.exidx.text.vSecondaryBlockTimeTestTask) refers to blocktim.o(.text.vSecondaryBlockTimeTestTask) for [Anonymous Symbol]
    blocktim.o(.text.xAreBlockTimeTestTasksStillRunning) refers to blocktim.o(.bss.xPrimaryCycles) for [Anonymous Symbol]
    blocktim.o(.text.xAreBlockTimeTestTasksStillRunning) refers to blocktim.o(.bss.xSecondaryCycles) for [Anonymous Symbol]
    blocktim.o(.text.xAreBlockTimeTestTasksStillRunning) refers to blocktim.o(.bss.xErrorOccurred) for [Anonymous Symbol]
    blocktim.o(.text.xAreBlockTimeTestTasksStillRunning) refers to blocktim.o(.bss.xAreBlockTimeTestTasksStillRunning.xLastSecondaryCycleCount) for [Anonymous Symbol]
    blocktim.o(.text.xAreBlockTimeTestTasksStillRunning) refers to blocktim.o(.bss.xAreBlockTimeTestTasksStillRunning.xLastPrimaryCycleCount) for [Anonymous Symbol]
    blocktim.o(.ARM.exidx.text.xAreBlockTimeTestTasksStillRunning) refers to blocktim.o(.text.xAreBlockTimeTestTasksStillRunning) for [Anonymous Symbol]
    blocktim.o(.text.prvBasicDelayTests) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    blocktim.o(.text.prvBasicDelayTests) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    blocktim.o(.text.prvBasicDelayTests) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    blocktim.o(.text.prvBasicDelayTests) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    blocktim.o(.text.prvBasicDelayTests) refers to blocktim.o(.bss.xErrorOccurred) for [Anonymous Symbol]
    blocktim.o(.text.prvBasicDelayTests) refers to blocktim.o(.bss.xPrimaryCycles) for [Anonymous Symbol]
    blocktim.o(.ARM.exidx.text.prvBasicDelayTests) refers to blocktim.o(.text.prvBasicDelayTests) for [Anonymous Symbol]
    countsem.o(.text.vStartCountingSemaphoreTasks) refers to queue.o(.text.xQueueCreateCountingSemaphore) for xQueueCreateCountingSemaphore
    countsem.o(.text.vStartCountingSemaphoreTasks) refers to queue.o(.text.vQueueAddToRegistry) for vQueueAddToRegistry
    countsem.o(.text.vStartCountingSemaphoreTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    countsem.o(.text.vStartCountingSemaphoreTasks) refers to countsem.o(.bss.xParameters) for [Anonymous Symbol]
    countsem.o(.text.vStartCountingSemaphoreTasks) refers to countsem.o(.text.prvCountingSemaphoreTask) for prvCountingSemaphoreTask
    countsem.o(.ARM.exidx.text.vStartCountingSemaphoreTasks) refers to countsem.o(.text.vStartCountingSemaphoreTasks) for [Anonymous Symbol]
    countsem.o(.text.prvCountingSemaphoreTask) refers to countsem.o(.text.prvDecrementSemaphoreCount) for prvDecrementSemaphoreCount
    countsem.o(.text.prvCountingSemaphoreTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    countsem.o(.text.prvCountingSemaphoreTask) refers to countsem.o(.text.prvIncrementSemaphoreCount) for prvIncrementSemaphoreCount
    countsem.o(.text.prvCountingSemaphoreTask) refers to countsem.o(.bss.xErrorDetected) for [Anonymous Symbol]
    countsem.o(.ARM.exidx.text.prvCountingSemaphoreTask) refers to countsem.o(.text.prvCountingSemaphoreTask) for [Anonymous Symbol]
    countsem.o(.text.xAreCountingSemaphoreTasksStillRunning) refers to countsem.o(.bss.xErrorDetected) for [Anonymous Symbol]
    countsem.o(.text.xAreCountingSemaphoreTasksStillRunning) refers to countsem.o(.bss.xAreCountingSemaphoreTasksStillRunning.uxLastCount0) for [Anonymous Symbol]
    countsem.o(.text.xAreCountingSemaphoreTasksStillRunning) refers to countsem.o(.bss.xParameters) for [Anonymous Symbol]
    countsem.o(.text.xAreCountingSemaphoreTasksStillRunning) refers to countsem.o(.bss.xAreCountingSemaphoreTasksStillRunning.uxLastCount1) for [Anonymous Symbol]
    countsem.o(.ARM.exidx.text.xAreCountingSemaphoreTasksStillRunning) refers to countsem.o(.text.xAreCountingSemaphoreTasksStillRunning) for [Anonymous Symbol]
    countsem.o(.text.prvDecrementSemaphoreCount) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    countsem.o(.text.prvDecrementSemaphoreCount) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    countsem.o(.text.prvDecrementSemaphoreCount) refers to countsem.o(.bss.xErrorDetected) for [Anonymous Symbol]
    countsem.o(.ARM.exidx.text.prvDecrementSemaphoreCount) refers to countsem.o(.text.prvDecrementSemaphoreCount) for [Anonymous Symbol]
    countsem.o(.text.prvIncrementSemaphoreCount) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    countsem.o(.text.prvIncrementSemaphoreCount) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    countsem.o(.text.prvIncrementSemaphoreCount) refers to countsem.o(.bss.xErrorDetected) for [Anonymous Symbol]
    countsem.o(.ARM.exidx.text.prvIncrementSemaphoreCount) refers to countsem.o(.text.prvIncrementSemaphoreCount) for [Anonymous Symbol]
    death.o(.text.vCreateSuicidalTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    death.o(.text.vCreateSuicidalTasks) refers to death.o(.text.vCreateTasks) for vCreateTasks
    death.o(.ARM.exidx.text.vCreateSuicidalTasks) refers to death.o(.text.vCreateSuicidalTasks) for [Anonymous Symbol]
    death.o(.text.vCreateTasks) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    death.o(.text.vCreateTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    death.o(.text.vCreateTasks) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    death.o(.text.vCreateTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    death.o(.text.vCreateTasks) refers to death.o(.bss.uxTasksRunningAtStart) for [Anonymous Symbol]
    death.o(.text.vCreateTasks) refers to death.o(.bss.xCreatedTask) for xCreatedTask
    death.o(.text.vCreateTasks) refers to death.o(.text.vSuicidalTask) for vSuicidalTask
    death.o(.text.vCreateTasks) refers to death.o(.bss.usCreationCount) for [Anonymous Symbol]
    death.o(.ARM.exidx.text.vCreateTasks) refers to death.o(.text.vCreateTasks) for [Anonymous Symbol]
    death.o(.text.xIsCreateTaskStillRunning) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    death.o(.text.xIsCreateTaskStillRunning) refers to death.o(.bss.usCreationCount) for [Anonymous Symbol]
    death.o(.text.xIsCreateTaskStillRunning) refers to death.o(.data.xIsCreateTaskStillRunning.usLastCreationCount) for [Anonymous Symbol]
    death.o(.text.xIsCreateTaskStillRunning) refers to death.o(.bss.uxTasksRunningAtStart) for [Anonymous Symbol]
    death.o(.ARM.exidx.text.xIsCreateTaskStillRunning) refers to death.o(.text.xIsCreateTaskStillRunning) for [Anonymous Symbol]
    death.o(.text.vSuicidalTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    death.o(.text.vSuicidalTask) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    death.o(.ARM.exidx.text.vSuicidalTask) refers to death.o(.text.vSuicidalTask) for [Anonymous Symbol]
    dynamic.o(.text.vStartDynamicPriorityTasks) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    dynamic.o(.text.vStartDynamicPriorityTasks) refers to queue.o(.text.vQueueAddToRegistry) for vQueueAddToRegistry
    dynamic.o(.text.vStartDynamicPriorityTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    dynamic.o(.text.vStartDynamicPriorityTasks) refers to dynamic.o(.bss.xSuspendedTestQueue) for xSuspendedTestQueue
    dynamic.o(.text.vStartDynamicPriorityTasks) refers to dynamic.o(.bss.xContinuousIncrementHandle) for [Anonymous Symbol]
    dynamic.o(.text.vStartDynamicPriorityTasks) refers to dynamic.o(.text.vContinuousIncrementTask) for vContinuousIncrementTask
    dynamic.o(.text.vStartDynamicPriorityTasks) refers to dynamic.o(.bss.ulCounter) for [Anonymous Symbol]
    dynamic.o(.text.vStartDynamicPriorityTasks) refers to dynamic.o(.bss.xLimitedIncrementHandle) for [Anonymous Symbol]
    dynamic.o(.text.vStartDynamicPriorityTasks) refers to dynamic.o(.text.vLimitedIncrementTask) for vLimitedIncrementTask
    dynamic.o(.text.vStartDynamicPriorityTasks) refers to dynamic.o(.text.vCounterControlTask) for vCounterControlTask
    dynamic.o(.text.vStartDynamicPriorityTasks) refers to dynamic.o(.text.vQueueSendWhenSuspendedTask) for vQueueSendWhenSuspendedTask
    dynamic.o(.text.vStartDynamicPriorityTasks) refers to dynamic.o(.text.vQueueReceiveWhenSuspendedTask) for vQueueReceiveWhenSuspendedTask
    dynamic.o(.ARM.exidx.text.vStartDynamicPriorityTasks) refers to dynamic.o(.text.vStartDynamicPriorityTasks) for [Anonymous Symbol]
    dynamic.o(.text.vContinuousIncrementTask) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    dynamic.o(.text.vContinuousIncrementTask) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    dynamic.o(.ARM.exidx.text.vContinuousIncrementTask) refers to dynamic.o(.text.vContinuousIncrementTask) for [Anonymous Symbol]
    dynamic.o(.text.vLimitedIncrementTask) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    dynamic.o(.ARM.exidx.text.vLimitedIncrementTask) refers to dynamic.o(.text.vLimitedIncrementTask) for [Anonymous Symbol]
    dynamic.o(.text.vCounterControlTask) refers to tasks.o(.text.vTaskResume) for vTaskResume
    dynamic.o(.text.vCounterControlTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    dynamic.o(.text.vCounterControlTask) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    dynamic.o(.text.vCounterControlTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    dynamic.o(.text.vCounterControlTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    dynamic.o(.text.vCounterControlTask) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    dynamic.o(.text.vCounterControlTask) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    dynamic.o(.text.vCounterControlTask) refers to dynamic.o(.bss.ulCounter) for [Anonymous Symbol]
    dynamic.o(.text.vCounterControlTask) refers to dynamic.o(.bss.xContinuousIncrementHandle) for [Anonymous Symbol]
    dynamic.o(.text.vCounterControlTask) refers to dynamic.o(.bss.xLimitedIncrementHandle) for [Anonymous Symbol]
    dynamic.o(.text.vCounterControlTask) refers to dynamic.o(.bss.usCheckVariable) for [Anonymous Symbol]
    dynamic.o(.ARM.exidx.text.vCounterControlTask) refers to dynamic.o(.text.vCounterControlTask) for [Anonymous Symbol]
    dynamic.o(.text.vQueueSendWhenSuspendedTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    dynamic.o(.text.vQueueSendWhenSuspendedTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    dynamic.o(.text.vQueueSendWhenSuspendedTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    dynamic.o(.text.vQueueSendWhenSuspendedTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    dynamic.o(.text.vQueueSendWhenSuspendedTask) refers to dynamic.o(.bss.xSuspendedTestQueue) for xSuspendedTestQueue
    dynamic.o(.text.vQueueSendWhenSuspendedTask) refers to dynamic.o(.bss.vQueueSendWhenSuspendedTask.ulValueToSend) for [Anonymous Symbol]
    dynamic.o(.text.vQueueSendWhenSuspendedTask) refers to dynamic.o(.bss.xSuspendedQueueSendError) for [Anonymous Symbol]
    dynamic.o(.ARM.exidx.text.vQueueSendWhenSuspendedTask) refers to dynamic.o(.text.vQueueSendWhenSuspendedTask) for [Anonymous Symbol]
    dynamic.o(.text.vQueueReceiveWhenSuspendedTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    dynamic.o(.text.vQueueReceiveWhenSuspendedTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    dynamic.o(.text.vQueueReceiveWhenSuspendedTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    dynamic.o(.text.vQueueReceiveWhenSuspendedTask) refers to dynamic.o(.bss.xSuspendedTestQueue) for xSuspendedTestQueue
    dynamic.o(.text.vQueueReceiveWhenSuspendedTask) refers to dynamic.o(.bss.xSuspendedQueueReceiveError) for [Anonymous Symbol]
    dynamic.o(.text.vQueueReceiveWhenSuspendedTask) refers to dynamic.o(.bss.ulExpectedValue) for [Anonymous Symbol]
    dynamic.o(.ARM.exidx.text.vQueueReceiveWhenSuspendedTask) refers to dynamic.o(.text.vQueueReceiveWhenSuspendedTask) for [Anonymous Symbol]
    dynamic.o(.text.xAreDynamicPriorityTasksStillRunning) refers to dynamic.o(.bss.xAreDynamicPriorityTasksStillRunning.ulLastExpectedValue) for [Anonymous Symbol]
    dynamic.o(.text.xAreDynamicPriorityTasksStillRunning) refers to dynamic.o(.bss.ulExpectedValue) for [Anonymous Symbol]
    dynamic.o(.text.xAreDynamicPriorityTasksStillRunning) refers to dynamic.o(.bss.usCheckVariable) for [Anonymous Symbol]
    dynamic.o(.text.xAreDynamicPriorityTasksStillRunning) refers to dynamic.o(.bss.xSuspendedQueueSendError) for [Anonymous Symbol]
    dynamic.o(.text.xAreDynamicPriorityTasksStillRunning) refers to dynamic.o(.bss.xSuspendedQueueReceiveError) for [Anonymous Symbol]
    dynamic.o(.text.xAreDynamicPriorityTasksStillRunning) refers to dynamic.o(.bss.xAreDynamicPriorityTasksStillRunning.usLastTaskCheck) for [Anonymous Symbol]
    dynamic.o(.ARM.exidx.text.xAreDynamicPriorityTasksStillRunning) refers to dynamic.o(.text.xAreDynamicPriorityTasksStillRunning) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.vStartEventGroupTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    eventgroupsdemo.o(.text.vStartEventGroupTasks) refers to event_groups.o(.text.xEventGroupCreate) for xEventGroupCreate
    eventgroupsdemo.o(.text.vStartEventGroupTasks) refers to eventgroupsdemo.o(.text.prvTestSlaveTask) for prvTestSlaveTask
    eventgroupsdemo.o(.text.vStartEventGroupTasks) refers to eventgroupsdemo.o(.text.prvTestMasterTask) for prvTestMasterTask
    eventgroupsdemo.o(.text.vStartEventGroupTasks) refers to eventgroupsdemo.o(.bss.xSyncTask1) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.vStartEventGroupTasks) refers to eventgroupsdemo.o(.text.prvSyncTask) for prvSyncTask
    eventgroupsdemo.o(.text.vStartEventGroupTasks) refers to eventgroupsdemo.o(.rodata.str1.1) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.vStartEventGroupTasks) refers to eventgroupsdemo.o(.bss.xSyncTask2) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.vStartEventGroupTasks) refers to eventgroupsdemo.o(.bss.xISREventGroup) for [Anonymous Symbol]
    eventgroupsdemo.o(.ARM.exidx.text.vStartEventGroupTasks) refers to eventgroupsdemo.o(.text.vStartEventGroupTasks) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.prvTestSlaveTask) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    eventgroupsdemo.o(.text.prvTestSlaveTask) refers to event_groups.o(.text.xEventGroupWaitBits) for xEventGroupWaitBits
    eventgroupsdemo.o(.text.prvTestSlaveTask) refers to event_groups.o(.text.xEventGroupSync) for xEventGroupSync
    eventgroupsdemo.o(.text.prvTestSlaveTask) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    eventgroupsdemo.o(.text.prvTestSlaveTask) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    eventgroupsdemo.o(.text.prvTestSlaveTask) refers to eventgroupsdemo.o(.bss.xEventGroup) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.prvTestSlaveTask) refers to eventgroupsdemo.o(.bss.ulTestSlaveCycles) for [Anonymous Symbol]
    eventgroupsdemo.o(.ARM.exidx.text.prvTestSlaveTask) refers to eventgroupsdemo.o(.text.prvTestSlaveTask) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.prvTestMasterTask) refers to event_groups.o(.text.xEventGroupCreate) for xEventGroupCreate
    eventgroupsdemo.o(.text.prvTestMasterTask) refers to eventgroupsdemo.o(.text.prvSelectiveBitsTestMasterFunction) for prvSelectiveBitsTestMasterFunction
    eventgroupsdemo.o(.text.prvTestMasterTask) refers to eventgroupsdemo.o(.text.prvBitCombinationTestMasterFunction) for prvBitCombinationTestMasterFunction
    eventgroupsdemo.o(.text.prvTestMasterTask) refers to eventgroupsdemo.o(.text.prvPerformTaskSyncTests) for prvPerformTaskSyncTests
    eventgroupsdemo.o(.text.prvTestMasterTask) refers to event_groups.o(.text.vEventGroupDelete) for vEventGroupDelete
    eventgroupsdemo.o(.text.prvTestMasterTask) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    eventgroupsdemo.o(.text.prvTestMasterTask) refers to eventgroupsdemo.o(.bss.xEventGroup) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.prvTestMasterTask) refers to eventgroupsdemo.o(.bss.xSyncTask1) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.prvTestMasterTask) refers to eventgroupsdemo.o(.bss.xSyncTask2) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.prvTestMasterTask) refers to eventgroupsdemo.o(.bss.ulTestMasterCycles) for [Anonymous Symbol]
    eventgroupsdemo.o(.ARM.exidx.text.prvTestMasterTask) refers to eventgroupsdemo.o(.text.prvTestMasterTask) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.prvSyncTask) refers to eventgroupsdemo.o(.text.prvSelectiveBitsTestSlaveFunction) for prvSelectiveBitsTestSlaveFunction
    eventgroupsdemo.o(.text.prvSyncTask) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    eventgroupsdemo.o(.text.prvSyncTask) refers to event_groups.o(.text.xEventGroupSync) for xEventGroupSync
    eventgroupsdemo.o(.text.prvSyncTask) refers to event_groups.o(.text.xEventGroupWaitBits) for xEventGroupWaitBits
    eventgroupsdemo.o(.text.prvSyncTask) refers to eventgroupsdemo.o(.bss.xEventGroup) for [Anonymous Symbol]
    eventgroupsdemo.o(.ARM.exidx.text.prvSyncTask) refers to eventgroupsdemo.o(.text.prvSyncTask) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.vPeriodicEventGroupsProcessing) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    eventgroupsdemo.o(.text.vPeriodicEventGroupsProcessing) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for xEventGroupSetBitsFromISR
    eventgroupsdemo.o(.text.vPeriodicEventGroupsProcessing) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for xEventGroupClearBitsFromISR
    eventgroupsdemo.o(.text.vPeriodicEventGroupsProcessing) refers to eventgroupsdemo.o(.bss.vPeriodicEventGroupsProcessing.xCallCount) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.vPeriodicEventGroupsProcessing) refers to eventgroupsdemo.o(.bss.xISREventGroup) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.vPeriodicEventGroupsProcessing) refers to eventgroupsdemo.o(.bss.vPeriodicEventGroupsProcessing.xISRTestError) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.vPeriodicEventGroupsProcessing) refers to eventgroupsdemo.o(.bss.ulISRCycles) for [Anonymous Symbol]
    eventgroupsdemo.o(.ARM.exidx.text.vPeriodicEventGroupsProcessing) refers to eventgroupsdemo.o(.text.vPeriodicEventGroupsProcessing) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.xAreEventGroupTasksStillRunning) refers to eventgroupsdemo.o(.bss.ulTestMasterCycles) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.xAreEventGroupTasksStillRunning) refers to eventgroupsdemo.o(.bss.xAreEventGroupTasksStillRunning.ulPreviousSetBitCycles) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.xAreEventGroupTasksStillRunning) refers to eventgroupsdemo.o(.bss.ulTestSlaveCycles) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.xAreEventGroupTasksStillRunning) refers to eventgroupsdemo.o(.bss.xAreEventGroupTasksStillRunning.ulPreviousWaitBitCycles) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.xAreEventGroupTasksStillRunning) refers to eventgroupsdemo.o(.bss.ulISRCycles) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.xAreEventGroupTasksStillRunning) refers to eventgroupsdemo.o(.bss.xAreEventGroupTasksStillRunning.ulPreviousISRCycles) for [Anonymous Symbol]
    eventgroupsdemo.o(.ARM.exidx.text.xAreEventGroupTasksStillRunning) refers to eventgroupsdemo.o(.text.xAreEventGroupTasksStillRunning) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.prvSelectiveBitsTestMasterFunction) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    eventgroupsdemo.o(.text.prvSelectiveBitsTestMasterFunction) refers to tasks.o(.text.vTaskResume) for vTaskResume
    eventgroupsdemo.o(.text.prvSelectiveBitsTestMasterFunction) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    eventgroupsdemo.o(.text.prvSelectiveBitsTestMasterFunction) refers to event_groups.o(.text.vEventGroupDelete) for vEventGroupDelete
    eventgroupsdemo.o(.text.prvSelectiveBitsTestMasterFunction) refers to eventgroupsdemo.o(.bss.xSyncTask1) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.prvSelectiveBitsTestMasterFunction) refers to eventgroupsdemo.o(.bss.xSyncTask2) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.prvSelectiveBitsTestMasterFunction) refers to eventgroupsdemo.o(.bss.xEventGroup) for [Anonymous Symbol]
    eventgroupsdemo.o(.ARM.exidx.text.prvSelectiveBitsTestMasterFunction) refers to eventgroupsdemo.o(.text.prvSelectiveBitsTestMasterFunction) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.prvBitCombinationTestMasterFunction) refers to tasks.o(.text.vTaskResume) for vTaskResume
    eventgroupsdemo.o(.text.prvBitCombinationTestMasterFunction) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    eventgroupsdemo.o(.text.prvBitCombinationTestMasterFunction) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    eventgroupsdemo.o(.text.prvBitCombinationTestMasterFunction) refers to event_groups.o(.text.xEventGroupWaitBits) for xEventGroupWaitBits
    eventgroupsdemo.o(.text.prvBitCombinationTestMasterFunction) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    eventgroupsdemo.o(.text.prvBitCombinationTestMasterFunction) refers to eventgroupsdemo.o(.bss.xEventGroup) for [Anonymous Symbol]
    eventgroupsdemo.o(.ARM.exidx.text.prvBitCombinationTestMasterFunction) refers to eventgroupsdemo.o(.text.prvBitCombinationTestMasterFunction) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.prvPerformTaskSyncTests) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    eventgroupsdemo.o(.text.prvPerformTaskSyncTests) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    eventgroupsdemo.o(.text.prvPerformTaskSyncTests) refers to event_groups.o(.text.xEventGroupSync) for xEventGroupSync
    eventgroupsdemo.o(.text.prvPerformTaskSyncTests) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    eventgroupsdemo.o(.text.prvPerformTaskSyncTests) refers to tasks.o(.text.vTaskResume) for vTaskResume
    eventgroupsdemo.o(.text.prvPerformTaskSyncTests) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    eventgroupsdemo.o(.text.prvPerformTaskSyncTests) refers to eventgroupsdemo.o(.bss.xSyncTask1) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.prvPerformTaskSyncTests) refers to eventgroupsdemo.o(.bss.xSyncTask2) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.prvPerformTaskSyncTests) refers to eventgroupsdemo.o(.bss.xEventGroup) for [Anonymous Symbol]
    eventgroupsdemo.o(.ARM.exidx.text.prvPerformTaskSyncTests) refers to eventgroupsdemo.o(.text.prvPerformTaskSyncTests) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.prvSelectiveBitsTestSlaveFunction) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    eventgroupsdemo.o(.text.prvSelectiveBitsTestSlaveFunction) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    eventgroupsdemo.o(.text.prvSelectiveBitsTestSlaveFunction) refers to event_groups.o(.text.xEventGroupWaitBits) for xEventGroupWaitBits
    eventgroupsdemo.o(.text.prvSelectiveBitsTestSlaveFunction) refers to eventgroupsdemo.o(.bss.xSyncTask1) for [Anonymous Symbol]
    eventgroupsdemo.o(.text.prvSelectiveBitsTestSlaveFunction) refers to eventgroupsdemo.o(.bss.xEventGroup) for [Anonymous Symbol]
    eventgroupsdemo.o(.ARM.exidx.text.prvSelectiveBitsTestSlaveFunction) refers to eventgroupsdemo.o(.text.prvSelectiveBitsTestSlaveFunction) for [Anonymous Symbol]
    flop.o(.text.vStartMathTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    flop.o(.text.vStartMathTasks) refers to flop.o(.text.vCompetingMathTask1) for vCompetingMathTask1
    flop.o(.text.vStartMathTasks) refers to flop.o(.bss.usTaskCheck) for [Anonymous Symbol]
    flop.o(.text.vStartMathTasks) refers to flop.o(.text.vCompetingMathTask2) for vCompetingMathTask2
    flop.o(.text.vStartMathTasks) refers to flop.o(.text.vCompetingMathTask3) for vCompetingMathTask3
    flop.o(.text.vStartMathTasks) refers to flop.o(.text.vCompetingMathTask4) for vCompetingMathTask4
    flop.o(.ARM.exidx.text.vStartMathTasks) refers to flop.o(.text.vStartMathTasks) for [Anonymous Symbol]
    flop.o(.text.vCompetingMathTask1) refers to dadd.o(.text) for __aeabi_dadd
    flop.o(.text.vCompetingMathTask1) refers to dmul.o(.text) for __aeabi_dmul
    flop.o(.text.vCompetingMathTask1) refers to dcmpgt.o(.text) for __aeabi_dcmpgt
    flop.o(.ARM.exidx.text.vCompetingMathTask1) refers to flop.o(.text.vCompetingMathTask1) for [Anonymous Symbol]
    flop.o(.text.vCompetingMathTask2) refers to ddiv.o(.text) for __aeabi_ddiv
    flop.o(.text.vCompetingMathTask2) refers to dmul.o(.text) for __aeabi_dmul
    flop.o(.text.vCompetingMathTask2) refers to dadd.o(.text) for __aeabi_dsub
    flop.o(.text.vCompetingMathTask2) refers to dcmpgt.o(.text) for __aeabi_dcmpgt
    flop.o(.ARM.exidx.text.vCompetingMathTask2) refers to flop.o(.text.vCompetingMathTask2) for [Anonymous Symbol]
    flop.o(.text.vCompetingMathTask3) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    flop.o(.text.vCompetingMathTask3) refers to dfltui.o(.text) for __aeabi_ui2d
    flop.o(.text.vCompetingMathTask3) refers to dadd.o(.text) for __aeabi_dadd
    flop.o(.text.vCompetingMathTask3) refers to dcmpgt.o(.text) for __aeabi_dcmpgt
    flop.o(.ARM.exidx.text.vCompetingMathTask3) refers to flop.o(.text.vCompetingMathTask3) for [Anonymous Symbol]
    flop.o(.text.vCompetingMathTask4) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    flop.o(.text.vCompetingMathTask4) refers to dfltui.o(.text) for __aeabi_ui2d
    flop.o(.text.vCompetingMathTask4) refers to dmul.o(.text) for __aeabi_dmul
    flop.o(.text.vCompetingMathTask4) refers to dadd.o(.text) for __aeabi_dadd
    flop.o(.text.vCompetingMathTask4) refers to dcmpgt.o(.text) for __aeabi_dcmpgt
    flop.o(.ARM.exidx.text.vCompetingMathTask4) refers to flop.o(.text.vCompetingMathTask4) for [Anonymous Symbol]
    flop.o(.text.xAreMathsTaskStillRunning) refers to flop.o(.bss.usTaskCheck) for [Anonymous Symbol]
    flop.o(.ARM.exidx.text.xAreMathsTaskStillRunning) refers to flop.o(.text.xAreMathsTaskStillRunning) for [Anonymous Symbol]
    genqtest.o(.text.vStartGenericQueueTasks) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    genqtest.o(.text.vStartGenericQueueTasks) refers to queue.o(.text.vQueueAddToRegistry) for vQueueAddToRegistry
    genqtest.o(.text.vStartGenericQueueTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    genqtest.o(.text.vStartGenericQueueTasks) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    genqtest.o(.text.vStartGenericQueueTasks) refers to genqtest.o(.text.prvSendFrontAndBackTest) for prvSendFrontAndBackTest
    genqtest.o(.text.vStartGenericQueueTasks) refers to genqtest.o(.text.prvLowPriorityMutexTask) for prvLowPriorityMutexTask
    genqtest.o(.text.vStartGenericQueueTasks) refers to genqtest.o(.bss.xMediumPriorityMutexTask) for [Anonymous Symbol]
    genqtest.o(.text.vStartGenericQueueTasks) refers to genqtest.o(.text.prvMediumPriorityMutexTask) for prvMediumPriorityMutexTask
    genqtest.o(.text.vStartGenericQueueTasks) refers to genqtest.o(.bss.xHighPriorityMutexTask) for [Anonymous Symbol]
    genqtest.o(.text.vStartGenericQueueTasks) refers to genqtest.o(.text.prvHighPriorityMutexTask) for prvHighPriorityMutexTask
    genqtest.o(.text.vStartGenericQueueTasks) refers to genqtest.o(.bss.xSecondMediumPriorityMutexTask) for [Anonymous Symbol]
    genqtest.o(.ARM.exidx.text.vStartGenericQueueTasks) refers to genqtest.o(.text.vStartGenericQueueTasks) for [Anonymous Symbol]
    genqtest.o(.text.prvSendFrontAndBackTest) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    genqtest.o(.text.prvSendFrontAndBackTest) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    genqtest.o(.text.prvSendFrontAndBackTest) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    genqtest.o(.text.prvSendFrontAndBackTest) refers to queue.o(.text.xQueuePeek) for xQueuePeek
    genqtest.o(.text.prvSendFrontAndBackTest) refers to genqtest.o(.bss.ulLoopCounter) for [Anonymous Symbol]
    genqtest.o(.text.prvSendFrontAndBackTest) refers to genqtest.o(.bss.xErrorDetected) for [Anonymous Symbol]
    genqtest.o(.ARM.exidx.text.prvSendFrontAndBackTest) refers to genqtest.o(.text.prvSendFrontAndBackTest) for [Anonymous Symbol]
    genqtest.o(.text.prvLowPriorityMutexTask) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    genqtest.o(.text.prvLowPriorityMutexTask) refers to genqtest.o(.text.prvTakeTwoMutexesReturnInDifferentOrder) for prvTakeTwoMutexesReturnInDifferentOrder
    genqtest.o(.text.prvLowPriorityMutexTask) refers to genqtest.o(.text.prvTakeTwoMutexesReturnInSameOrder) for prvTakeTwoMutexesReturnInSameOrder
    genqtest.o(.text.prvLowPriorityMutexTask) refers to genqtest.o(.text.prvHighPriorityTimeout) for prvHighPriorityTimeout
    genqtest.o(.text.prvLowPriorityMutexTask) refers to genqtest.o(.bss.ulLoopCounter2) for [Anonymous Symbol]
    genqtest.o(.ARM.exidx.text.prvLowPriorityMutexTask) refers to genqtest.o(.text.prvLowPriorityMutexTask) for [Anonymous Symbol]
    genqtest.o(.text.prvMediumPriorityMutexTask) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    genqtest.o(.text.prvMediumPriorityMutexTask) refers to genqtest.o(.bss.ulGuardedVariable) for [Anonymous Symbol]
    genqtest.o(.ARM.exidx.text.prvMediumPriorityMutexTask) refers to genqtest.o(.text.prvMediumPriorityMutexTask) for [Anonymous Symbol]
    genqtest.o(.text.prvHighPriorityMutexTask) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    genqtest.o(.text.prvHighPriorityMutexTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    genqtest.o(.text.prvHighPriorityMutexTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    genqtest.o(.text.prvHighPriorityMutexTask) refers to genqtest.o(.bss.xBlockWasAborted) for [Anonymous Symbol]
    genqtest.o(.text.prvHighPriorityMutexTask) refers to genqtest.o(.bss.xErrorDetected) for [Anonymous Symbol]
    genqtest.o(.ARM.exidx.text.prvHighPriorityMutexTask) refers to genqtest.o(.text.prvHighPriorityMutexTask) for [Anonymous Symbol]
    genqtest.o(.text.xAreGenericQueueTasksStillRunning) refers to genqtest.o(.bss.ulLoopCounter) for [Anonymous Symbol]
    genqtest.o(.text.xAreGenericQueueTasksStillRunning) refers to genqtest.o(.bss.xAreGenericQueueTasksStillRunning.ulLastLoopCounter) for [Anonymous Symbol]
    genqtest.o(.text.xAreGenericQueueTasksStillRunning) refers to genqtest.o(.bss.xErrorDetected) for [Anonymous Symbol]
    genqtest.o(.text.xAreGenericQueueTasksStillRunning) refers to genqtest.o(.bss.ulLoopCounter2) for [Anonymous Symbol]
    genqtest.o(.text.xAreGenericQueueTasksStillRunning) refers to genqtest.o(.bss.xAreGenericQueueTasksStillRunning.ulLastLoopCounter2) for [Anonymous Symbol]
    genqtest.o(.ARM.exidx.text.xAreGenericQueueTasksStillRunning) refers to genqtest.o(.text.xAreGenericQueueTasksStillRunning) for [Anonymous Symbol]
    genqtest.o(.text.prvTakeTwoMutexesReturnInDifferentOrder) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    genqtest.o(.text.prvTakeTwoMutexesReturnInDifferentOrder) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    genqtest.o(.text.prvTakeTwoMutexesReturnInDifferentOrder) refers to tasks.o(.text.vTaskResume) for vTaskResume
    genqtest.o(.text.prvTakeTwoMutexesReturnInDifferentOrder) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    genqtest.o(.text.prvTakeTwoMutexesReturnInDifferentOrder) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    genqtest.o(.text.prvTakeTwoMutexesReturnInDifferentOrder) refers to genqtest.o(.bss.xErrorDetected) for [Anonymous Symbol]
    genqtest.o(.text.prvTakeTwoMutexesReturnInDifferentOrder) refers to genqtest.o(.bss.ulGuardedVariable) for [Anonymous Symbol]
    genqtest.o(.text.prvTakeTwoMutexesReturnInDifferentOrder) refers to genqtest.o(.bss.xHighPriorityMutexTask) for [Anonymous Symbol]
    genqtest.o(.text.prvTakeTwoMutexesReturnInDifferentOrder) refers to genqtest.o(.bss.xMediumPriorityMutexTask) for [Anonymous Symbol]
    genqtest.o(.ARM.exidx.text.prvTakeTwoMutexesReturnInDifferentOrder) refers to genqtest.o(.text.prvTakeTwoMutexesReturnInDifferentOrder) for [Anonymous Symbol]
    genqtest.o(.text.prvTakeTwoMutexesReturnInSameOrder) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    genqtest.o(.text.prvTakeTwoMutexesReturnInSameOrder) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    genqtest.o(.text.prvTakeTwoMutexesReturnInSameOrder) refers to tasks.o(.text.vTaskResume) for vTaskResume
    genqtest.o(.text.prvTakeTwoMutexesReturnInSameOrder) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    genqtest.o(.text.prvTakeTwoMutexesReturnInSameOrder) refers to genqtest.o(.bss.xErrorDetected) for [Anonymous Symbol]
    genqtest.o(.text.prvTakeTwoMutexesReturnInSameOrder) refers to genqtest.o(.bss.ulGuardedVariable) for [Anonymous Symbol]
    genqtest.o(.text.prvTakeTwoMutexesReturnInSameOrder) refers to genqtest.o(.bss.xHighPriorityMutexTask) for [Anonymous Symbol]
    genqtest.o(.text.prvTakeTwoMutexesReturnInSameOrder) refers to genqtest.o(.bss.xMediumPriorityMutexTask) for [Anonymous Symbol]
    genqtest.o(.ARM.exidx.text.prvTakeTwoMutexesReturnInSameOrder) refers to genqtest.o(.text.prvTakeTwoMutexesReturnInSameOrder) for [Anonymous Symbol]
    genqtest.o(.text.prvHighPriorityTimeout) refers to queue.o(.text.xQueueGetMutexHolder) for xQueueGetMutexHolder
    genqtest.o(.text.prvHighPriorityTimeout) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    genqtest.o(.text.prvHighPriorityTimeout) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    genqtest.o(.text.prvHighPriorityTimeout) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    genqtest.o(.text.prvHighPriorityTimeout) refers to tasks.o(.text.vTaskResume) for vTaskResume
    genqtest.o(.text.prvHighPriorityTimeout) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    genqtest.o(.text.prvHighPriorityTimeout) refers to tasks.o(.text.xTaskAbortDelay) for xTaskAbortDelay
    genqtest.o(.text.prvHighPriorityTimeout) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for xQueueGetMutexHolderFromISR
    genqtest.o(.text.prvHighPriorityTimeout) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    genqtest.o(.text.prvHighPriorityTimeout) refers to genqtest.o(.bss.xErrorDetected) for [Anonymous Symbol]
    genqtest.o(.text.prvHighPriorityTimeout) refers to genqtest.o(.bss.xHighPriorityMutexTask) for [Anonymous Symbol]
    genqtest.o(.text.prvHighPriorityTimeout) refers to genqtest.o(.bss.xSecondMediumPriorityMutexTask) for [Anonymous Symbol]
    genqtest.o(.text.prvHighPriorityTimeout) refers to genqtest.o(.bss.prvHighPriorityTimeout.uxLoopCount) for [Anonymous Symbol]
    genqtest.o(.text.prvHighPriorityTimeout) refers to genqtest.o(.bss.xBlockWasAborted) for [Anonymous Symbol]
    genqtest.o(.ARM.exidx.text.prvHighPriorityTimeout) refers to genqtest.o(.text.prvHighPriorityTimeout) for [Anonymous Symbol]
    integer.o(.text.vStartIntegerMathTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    integer.o(.text.vStartIntegerMathTasks) refers to integer.o(.text.vCompeteingIntMathTask) for vCompeteingIntMathTask
    integer.o(.text.vStartIntegerMathTasks) refers to integer.o(.bss.xTaskCheck) for [Anonymous Symbol]
    integer.o(.ARM.exidx.text.vStartIntegerMathTasks) refers to integer.o(.text.vStartIntegerMathTasks) for [Anonymous Symbol]
    integer.o(.text.vCompeteingIntMathTask) refers to idiv_div0.o(.text) for __aeabi_idiv
    integer.o(.text.vCompeteingIntMathTask) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    integer.o(.text.vCompeteingIntMathTask) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    integer.o(.ARM.exidx.text.vCompeteingIntMathTask) refers to integer.o(.text.vCompeteingIntMathTask) for [Anonymous Symbol]
    integer.o(.text.xAreIntegerMathsTaskStillRunning) refers to integer.o(.bss.xTaskCheck) for [Anonymous Symbol]
    integer.o(.ARM.exidx.text.xAreIntegerMathsTaskStillRunning) refers to integer.o(.text.xAreIntegerMathsTaskStillRunning) for [Anonymous Symbol]
    intqueue.o(.text.vStartInterruptQueueTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    intqueue.o(.text.vStartInterruptQueueTasks) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    intqueue.o(.text.vStartInterruptQueueTasks) refers to queue.o(.text.vQueueAddToRegistry) for vQueueAddToRegistry
    intqueue.o(.text.vStartInterruptQueueTasks) refers to intqueue.o(.bss.xHighPriorityNormallyEmptyTask1) for xHighPriorityNormallyEmptyTask1
    intqueue.o(.text.vStartInterruptQueueTasks) refers to intqueue.o(.text.prvHigherPriorityNormallyEmptyTask) for prvHigherPriorityNormallyEmptyTask
    intqueue.o(.text.vStartInterruptQueueTasks) refers to intqueue.o(.bss.xHighPriorityNormallyEmptyTask2) for xHighPriorityNormallyEmptyTask2
    intqueue.o(.text.vStartInterruptQueueTasks) refers to intqueue.o(.text.prvLowerPriorityNormallyEmptyTask) for prvLowerPriorityNormallyEmptyTask
    intqueue.o(.text.vStartInterruptQueueTasks) refers to intqueue.o(.bss.xHighPriorityNormallyFullTask1) for xHighPriorityNormallyFullTask1
    intqueue.o(.text.vStartInterruptQueueTasks) refers to intqueue.o(.text.prv1stHigherPriorityNormallyFullTask) for prv1stHigherPriorityNormallyFullTask
    intqueue.o(.text.vStartInterruptQueueTasks) refers to intqueue.o(.bss.xHighPriorityNormallyFullTask2) for xHighPriorityNormallyFullTask2
    intqueue.o(.text.vStartInterruptQueueTasks) refers to intqueue.o(.text.prv2ndHigherPriorityNormallyFullTask) for prv2ndHigherPriorityNormallyFullTask
    intqueue.o(.text.vStartInterruptQueueTasks) refers to intqueue.o(.text.prvLowerPriorityNormallyFullTask) for prvLowerPriorityNormallyFullTask
    intqueue.o(.text.vStartInterruptQueueTasks) refers to intqueue.o(.bss.xNormallyFullQueue) for [Anonymous Symbol]
    intqueue.o(.text.vStartInterruptQueueTasks) refers to intqueue.o(.bss.xNormallyEmptyQueue) for [Anonymous Symbol]
    intqueue.o(.ARM.exidx.text.vStartInterruptQueueTasks) refers to intqueue.o(.text.vStartInterruptQueueTasks) for [Anonymous Symbol]
    intqueue.o(.text.prvHigherPriorityNormallyEmptyTask) refers to intqueuetimer.o(.text.vInitialiseTimerForIntQueueTest) for vInitialiseTimerForIntQueueTest
    intqueue.o(.text.prvHigherPriorityNormallyEmptyTask) refers to memseta.o(.text) for __aeabi_memclr4
    intqueue.o(.text.prvHigherPriorityNormallyEmptyTask) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    intqueue.o(.text.prvHigherPriorityNormallyEmptyTask) refers to tasks.o(.text.vTaskResume) for vTaskResume
    intqueue.o(.text.prvHigherPriorityNormallyEmptyTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    intqueue.o(.text.prvHigherPriorityNormallyEmptyTask) refers to intqueue.o(.text.prvRecordValue_NormallyEmpty) for prvRecordValue_NormallyEmpty
    intqueue.o(.text.prvHigherPriorityNormallyEmptyTask) refers to intqueue.o(.text.prvQueueAccessLogError) for prvQueueAccessLogError
    intqueue.o(.text.prvHigherPriorityNormallyEmptyTask) refers to port.o(.text.vPortYield) for vPortYield
    intqueue.o(.text.prvHigherPriorityNormallyEmptyTask) refers to intqueue.o(.bss.xNormallyEmptyQueue) for [Anonymous Symbol]
    intqueue.o(.text.prvHigherPriorityNormallyEmptyTask) refers to intqueue.o(.bss.uxValueForNormallyEmptyQueue) for [Anonymous Symbol]
    intqueue.o(.text.prvHigherPriorityNormallyEmptyTask) refers to intqueue.o(.bss.xHighPriorityNormallyEmptyTask2) for xHighPriorityNormallyEmptyTask2
    intqueue.o(.text.prvHigherPriorityNormallyEmptyTask) refers to intqueue.o(.bss.ucNormallyEmptyReceivedValues) for [Anonymous Symbol]
    intqueue.o(.text.prvHigherPriorityNormallyEmptyTask) refers to intqueue.o(.bss.uxHighPriorityLoops1) for [Anonymous Symbol]
    intqueue.o(.ARM.exidx.text.prvHigherPriorityNormallyEmptyTask) refers to intqueue.o(.text.prvHigherPriorityNormallyEmptyTask) for [Anonymous Symbol]
    intqueue.o(.text.prvLowerPriorityNormallyEmptyTask) refers to intqueue.o(.text.prvRecordValue_NormallyEmpty) for prvRecordValue_NormallyEmpty
    intqueue.o(.text.prvLowerPriorityNormallyEmptyTask) refers to tasks.o(.text.vTaskResume) for vTaskResume
    intqueue.o(.text.prvLowerPriorityNormallyEmptyTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    intqueue.o(.text.prvLowerPriorityNormallyEmptyTask) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    intqueue.o(.text.prvLowerPriorityNormallyEmptyTask) refers to intqueue.o(.text.prvQueueAccessLogError) for prvQueueAccessLogError
    intqueue.o(.text.prvLowerPriorityNormallyEmptyTask) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    intqueue.o(.text.prvLowerPriorityNormallyEmptyTask) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    intqueue.o(.text.prvLowerPriorityNormallyEmptyTask) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    intqueue.o(.text.prvLowerPriorityNormallyEmptyTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    intqueue.o(.text.prvLowerPriorityNormallyEmptyTask) refers to intqueue.o(.bss.xNormallyEmptyQueue) for [Anonymous Symbol]
    intqueue.o(.text.prvLowerPriorityNormallyEmptyTask) refers to intqueue.o(.bss.xHighPriorityNormallyEmptyTask1) for xHighPriorityNormallyEmptyTask1
    intqueue.o(.text.prvLowerPriorityNormallyEmptyTask) refers to intqueue.o(.bss.uxLowPriorityLoops1) for [Anonymous Symbol]
    intqueue.o(.text.prvLowerPriorityNormallyEmptyTask) refers to intqueue.o(.bss.uxValueForNormallyEmptyQueue) for [Anonymous Symbol]
    intqueue.o(.ARM.exidx.text.prvLowerPriorityNormallyEmptyTask) refers to intqueue.o(.text.prvLowerPriorityNormallyEmptyTask) for [Anonymous Symbol]
    intqueue.o(.text.prv1stHigherPriorityNormallyFullTask) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    intqueue.o(.text.prv1stHigherPriorityNormallyFullTask) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    intqueue.o(.text.prv1stHigherPriorityNormallyFullTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    intqueue.o(.text.prv1stHigherPriorityNormallyFullTask) refers to memseta.o(.text) for __aeabi_memclr4
    intqueue.o(.text.prv1stHigherPriorityNormallyFullTask) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    intqueue.o(.text.prv1stHigherPriorityNormallyFullTask) refers to tasks.o(.text.vTaskResume) for vTaskResume
    intqueue.o(.text.prv1stHigherPriorityNormallyFullTask) refers to intqueue.o(.text.prvQueueAccessLogError) for prvQueueAccessLogError
    intqueue.o(.text.prv1stHigherPriorityNormallyFullTask) refers to port.o(.text.vPortYield) for vPortYield
    intqueue.o(.text.prv1stHigherPriorityNormallyFullTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    intqueue.o(.text.prv1stHigherPriorityNormallyFullTask) refers to intqueue.o(.bss.uxValueForNormallyFullQueue) for [Anonymous Symbol]
    intqueue.o(.text.prv1stHigherPriorityNormallyFullTask) refers to intqueue.o(.bss.xNormallyFullQueue) for [Anonymous Symbol]
    intqueue.o(.text.prv1stHigherPriorityNormallyFullTask) refers to intqueue.o(.bss.xHighPriorityNormallyFullTask2) for xHighPriorityNormallyFullTask2
    intqueue.o(.text.prv1stHigherPriorityNormallyFullTask) refers to intqueue.o(.bss.xWasSuspended) for [Anonymous Symbol]
    intqueue.o(.text.prv1stHigherPriorityNormallyFullTask) refers to intqueue.o(.bss.ucNormallyFullReceivedValues) for [Anonymous Symbol]
    intqueue.o(.text.prv1stHigherPriorityNormallyFullTask) refers to intqueue.o(.bss.uxHighPriorityLoops2) for [Anonymous Symbol]
    intqueue.o(.ARM.exidx.text.prv1stHigherPriorityNormallyFullTask) refers to intqueue.o(.text.prv1stHigherPriorityNormallyFullTask) for [Anonymous Symbol]
    intqueue.o(.text.prv2ndHigherPriorityNormallyFullTask) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    intqueue.o(.text.prv2ndHigherPriorityNormallyFullTask) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    intqueue.o(.text.prv2ndHigherPriorityNormallyFullTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    intqueue.o(.text.prv2ndHigherPriorityNormallyFullTask) refers to port.o(.text.vPortYield) for vPortYield
    intqueue.o(.text.prv2ndHigherPriorityNormallyFullTask) refers to intqueue.o(.text.prvQueueAccessLogError) for prvQueueAccessLogError
    intqueue.o(.text.prv2ndHigherPriorityNormallyFullTask) refers to intqueue.o(.bss.uxValueForNormallyFullQueue) for [Anonymous Symbol]
    intqueue.o(.text.prv2ndHigherPriorityNormallyFullTask) refers to intqueue.o(.bss.xNormallyFullQueue) for [Anonymous Symbol]
    intqueue.o(.text.prv2ndHigherPriorityNormallyFullTask) refers to intqueue.o(.bss.xWasSuspended) for [Anonymous Symbol]
    intqueue.o(.ARM.exidx.text.prv2ndHigherPriorityNormallyFullTask) refers to intqueue.o(.text.prv2ndHigherPriorityNormallyFullTask) for [Anonymous Symbol]
    intqueue.o(.text.prvLowerPriorityNormallyFullTask) refers to tasks.o(.text.vTaskResume) for vTaskResume
    intqueue.o(.text.prvLowerPriorityNormallyFullTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    intqueue.o(.text.prvLowerPriorityNormallyFullTask) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    intqueue.o(.text.prvLowerPriorityNormallyFullTask) refers to intqueue.o(.text.prvQueueAccessLogError) for prvQueueAccessLogError
    intqueue.o(.text.prvLowerPriorityNormallyFullTask) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    intqueue.o(.text.prvLowerPriorityNormallyFullTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    intqueue.o(.text.prvLowerPriorityNormallyFullTask) refers to intqueue.o(.text.prvRecordValue_NormallyFull) for prvRecordValue_NormallyFull
    intqueue.o(.text.prvLowerPriorityNormallyFullTask) refers to intqueue.o(.bss.xNormallyFullQueue) for [Anonymous Symbol]
    intqueue.o(.text.prvLowerPriorityNormallyFullTask) refers to intqueue.o(.bss.xHighPriorityNormallyFullTask1) for xHighPriorityNormallyFullTask1
    intqueue.o(.text.prvLowerPriorityNormallyFullTask) refers to intqueue.o(.bss.uxLowPriorityLoops2) for [Anonymous Symbol]
    intqueue.o(.ARM.exidx.text.prvLowerPriorityNormallyFullTask) refers to intqueue.o(.text.prvLowerPriorityNormallyFullTask) for [Anonymous Symbol]
    intqueue.o(.text.xFirstTimerHandler) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    intqueue.o(.text.xFirstTimerHandler) refers to intqueue.o(.text.prvRecordValue_NormallyFull) for prvRecordValue_NormallyFull
    intqueue.o(.text.xFirstTimerHandler) refers to queue.o(.text.xQueueIsQueueFullFromISR) for xQueueIsQueueFullFromISR
    intqueue.o(.text.xFirstTimerHandler) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    intqueue.o(.text.xFirstTimerHandler) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    intqueue.o(.text.xFirstTimerHandler) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    intqueue.o(.text.xFirstTimerHandler) refers to intqueue.o(.bss.xFirstTimerHandler.uxNextOperation) for [Anonymous Symbol]
    intqueue.o(.text.xFirstTimerHandler) refers to intqueue.o(.bss.xNormallyEmptyQueue) for [Anonymous Symbol]
    intqueue.o(.text.xFirstTimerHandler) refers to intqueue.o(.bss.uxValueForNormallyEmptyQueue) for [Anonymous Symbol]
    intqueue.o(.text.xFirstTimerHandler) refers to intqueue.o(.bss.xNormallyFullQueue) for [Anonymous Symbol]
    intqueue.o(.ARM.exidx.text.xFirstTimerHandler) refers to intqueue.o(.text.xFirstTimerHandler) for [Anonymous Symbol]
    intqueue.o(.text.prvRecordValue_NormallyFull) refers to intqueue.o(.text.prvQueueAccessLogError) for prvQueueAccessLogError
    intqueue.o(.text.prvRecordValue_NormallyFull) refers to intqueue.o(.bss.ucNormallyFullReceivedValues) for [Anonymous Symbol]
    intqueue.o(.ARM.exidx.text.prvRecordValue_NormallyFull) refers to intqueue.o(.text.prvRecordValue_NormallyFull) for [Anonymous Symbol]
    intqueue.o(.text.xSecondTimerHandler) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    intqueue.o(.text.xSecondTimerHandler) refers to intqueue.o(.text.prvRecordValue_NormallyFull) for prvRecordValue_NormallyFull
    intqueue.o(.text.xSecondTimerHandler) refers to queue.o(.text.xQueueIsQueueFullFromISR) for xQueueIsQueueFullFromISR
    intqueue.o(.text.xSecondTimerHandler) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    intqueue.o(.text.xSecondTimerHandler) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    intqueue.o(.text.xSecondTimerHandler) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    intqueue.o(.text.xSecondTimerHandler) refers to intqueue.o(.text.prvRecordValue_NormallyEmpty) for prvRecordValue_NormallyEmpty
    intqueue.o(.text.xSecondTimerHandler) refers to intqueue.o(.text.prvQueueAccessLogError) for prvQueueAccessLogError
    intqueue.o(.text.xSecondTimerHandler) refers to intqueue.o(.bss.xSecondTimerHandler.uxNextOperation) for [Anonymous Symbol]
    intqueue.o(.text.xSecondTimerHandler) refers to intqueue.o(.bss.xNormallyEmptyQueue) for [Anonymous Symbol]
    intqueue.o(.text.xSecondTimerHandler) refers to intqueue.o(.bss.uxValueForNormallyEmptyQueue) for [Anonymous Symbol]
    intqueue.o(.text.xSecondTimerHandler) refers to intqueue.o(.bss.xNormallyFullQueue) for [Anonymous Symbol]
    intqueue.o(.text.xSecondTimerHandler) refers to intqueue.o(.bss.uxValueForNormallyFullQueue) for [Anonymous Symbol]
    intqueue.o(.ARM.exidx.text.xSecondTimerHandler) refers to intqueue.o(.text.xSecondTimerHandler) for [Anonymous Symbol]
    intqueue.o(.text.prvQueueAccessLogError) refers to intqueue.o(.bss.xErrorStatus) for [Anonymous Symbol]
    intqueue.o(.text.prvQueueAccessLogError) refers to intqueue.o(.bss.xErrorLine) for [Anonymous Symbol]
    intqueue.o(.ARM.exidx.text.prvQueueAccessLogError) refers to intqueue.o(.text.prvQueueAccessLogError) for [Anonymous Symbol]
    intqueue.o(.text.prvRecordValue_NormallyEmpty) refers to intqueue.o(.text.prvQueueAccessLogError) for prvQueueAccessLogError
    intqueue.o(.text.prvRecordValue_NormallyEmpty) refers to intqueue.o(.bss.ucNormallyEmptyReceivedValues) for [Anonymous Symbol]
    intqueue.o(.ARM.exidx.text.prvRecordValue_NormallyEmpty) refers to intqueue.o(.text.prvRecordValue_NormallyEmpty) for [Anonymous Symbol]
    intqueue.o(.text.xAreIntQueueTasksStillRunning) refers to intqueue.o(.text.prvQueueAccessLogError) for prvQueueAccessLogError
    intqueue.o(.text.xAreIntQueueTasksStillRunning) refers to intqueue.o(.bss.uxHighPriorityLoops1) for [Anonymous Symbol]
    intqueue.o(.text.xAreIntQueueTasksStillRunning) refers to intqueue.o(.bss.xAreIntQueueTasksStillRunning.uxLastHighPriorityLoops1) for [Anonymous Symbol]
    intqueue.o(.text.xAreIntQueueTasksStillRunning) refers to intqueue.o(.bss.uxHighPriorityLoops2) for [Anonymous Symbol]
    intqueue.o(.text.xAreIntQueueTasksStillRunning) refers to intqueue.o(.bss.xAreIntQueueTasksStillRunning.uxLastHighPriorityLoops2) for [Anonymous Symbol]
    intqueue.o(.text.xAreIntQueueTasksStillRunning) refers to intqueue.o(.bss.uxLowPriorityLoops1) for [Anonymous Symbol]
    intqueue.o(.text.xAreIntQueueTasksStillRunning) refers to intqueue.o(.bss.xAreIntQueueTasksStillRunning.uxLastLowPriorityLoops1) for [Anonymous Symbol]
    intqueue.o(.text.xAreIntQueueTasksStillRunning) refers to intqueue.o(.bss.uxLowPriorityLoops2) for [Anonymous Symbol]
    intqueue.o(.text.xAreIntQueueTasksStillRunning) refers to intqueue.o(.bss.xAreIntQueueTasksStillRunning.uxLastLowPriorityLoops2) for [Anonymous Symbol]
    intqueue.o(.text.xAreIntQueueTasksStillRunning) refers to intqueue.o(.bss.xErrorStatus) for [Anonymous Symbol]
    intqueue.o(.ARM.exidx.text.xAreIntQueueTasksStillRunning) refers to intqueue.o(.text.xAreIntQueueTasksStillRunning) for [Anonymous Symbol]
    intsemtest.o(.text.vStartInterruptSemaphoreTasks) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    intsemtest.o(.text.vStartInterruptSemaphoreTasks) refers to queue.o(.text.xQueueCreateCountingSemaphore) for xQueueCreateCountingSemaphore
    intsemtest.o(.text.vStartInterruptSemaphoreTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    intsemtest.o(.text.vStartInterruptSemaphoreTasks) refers to intsemtest.o(.bss.xISRMutex) for [Anonymous Symbol]
    intsemtest.o(.text.vStartInterruptSemaphoreTasks) refers to intsemtest.o(.bss.xISRCountingSemaphore) for [Anonymous Symbol]
    intsemtest.o(.text.vStartInterruptSemaphoreTasks) refers to intsemtest.o(.bss.xMasterSlaveMutex) for [Anonymous Symbol]
    intsemtest.o(.text.vStartInterruptSemaphoreTasks) refers to intsemtest.o(.bss.xSlaveHandle) for [Anonymous Symbol]
    intsemtest.o(.text.vStartInterruptSemaphoreTasks) refers to intsemtest.o(.text.vInterruptMutexSlaveTask) for vInterruptMutexSlaveTask
    intsemtest.o(.text.vStartInterruptSemaphoreTasks) refers to intsemtest.o(.text.vInterruptMutexMasterTask) for vInterruptMutexMasterTask
    intsemtest.o(.text.vStartInterruptSemaphoreTasks) refers to intsemtest.o(.text.vInterruptCountingSemaphoreTask) for vInterruptCountingSemaphoreTask
    intsemtest.o(.ARM.exidx.text.vStartInterruptSemaphoreTasks) refers to intsemtest.o(.text.vStartInterruptSemaphoreTasks) for [Anonymous Symbol]
    intsemtest.o(.text.vInterruptMutexSlaveTask) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    intsemtest.o(.text.vInterruptMutexSlaveTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    intsemtest.o(.text.vInterruptMutexSlaveTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    intsemtest.o(.text.vInterruptMutexSlaveTask) refers to intsemtest.o(.bss.xMasterSlaveMutex) for [Anonymous Symbol]
    intsemtest.o(.text.vInterruptMutexSlaveTask) refers to intsemtest.o(.bss.xErrorDetected) for [Anonymous Symbol]
    intsemtest.o(.ARM.exidx.text.vInterruptMutexSlaveTask) refers to intsemtest.o(.text.vInterruptMutexSlaveTask) for [Anonymous Symbol]
    intsemtest.o(.text.vInterruptMutexMasterTask) refers to intsemtest.o(.text.prvTakeAndGiveInTheSameOrder) for prvTakeAndGiveInTheSameOrder
    intsemtest.o(.text.vInterruptMutexMasterTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    intsemtest.o(.text.vInterruptMutexMasterTask) refers to intsemtest.o(.text.prvTakeAndGiveInTheOppositeOrder) for prvTakeAndGiveInTheOppositeOrder
    intsemtest.o(.text.vInterruptMutexMasterTask) refers to intsemtest.o(.bss.ulMasterLoops) for [Anonymous Symbol]
    intsemtest.o(.ARM.exidx.text.vInterruptMutexMasterTask) refers to intsemtest.o(.text.vInterruptMutexMasterTask) for [Anonymous Symbol]
    intsemtest.o(.text.vInterruptCountingSemaphoreTask) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    intsemtest.o(.text.vInterruptCountingSemaphoreTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    intsemtest.o(.text.vInterruptCountingSemaphoreTask) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    intsemtest.o(.text.vInterruptCountingSemaphoreTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    intsemtest.o(.text.vInterruptCountingSemaphoreTask) refers to queue.o(.text.uxQueueSpacesAvailable) for uxQueueSpacesAvailable
    intsemtest.o(.text.vInterruptCountingSemaphoreTask) refers to intsemtest.o(.bss.xISRCountingSemaphore) for [Anonymous Symbol]
    intsemtest.o(.text.vInterruptCountingSemaphoreTask) refers to intsemtest.o(.bss.xErrorDetected) for [Anonymous Symbol]
    intsemtest.o(.text.vInterruptCountingSemaphoreTask) refers to intsemtest.o(.bss.xOkToGiveCountingSemaphore) for [Anonymous Symbol]
    intsemtest.o(.text.vInterruptCountingSemaphoreTask) refers to intsemtest.o(.bss.ulCountingSemaphoreLoops) for [Anonymous Symbol]
    intsemtest.o(.ARM.exidx.text.vInterruptCountingSemaphoreTask) refers to intsemtest.o(.text.vInterruptCountingSemaphoreTask) for [Anonymous Symbol]
    intsemtest.o(.text.vInterruptSemaphorePeriodicTest) refers to tasks.o(.text.xTaskGetTickCountFromISR) for xTaskGetTickCountFromISR
    intsemtest.o(.text.vInterruptSemaphorePeriodicTest) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    intsemtest.o(.text.vInterruptSemaphorePeriodicTest) refers to intsemtest.o(.bss.vInterruptSemaphorePeriodicTest.xLastGiveTime) for [Anonymous Symbol]
    intsemtest.o(.text.vInterruptSemaphorePeriodicTest) refers to intsemtest.o(.bss.xOkToGiveMutex) for [Anonymous Symbol]
    intsemtest.o(.text.vInterruptSemaphorePeriodicTest) refers to intsemtest.o(.bss.xISRMutex) for [Anonymous Symbol]
    intsemtest.o(.text.vInterruptSemaphorePeriodicTest) refers to intsemtest.o(.bss.xOkToGiveCountingSemaphore) for [Anonymous Symbol]
    intsemtest.o(.text.vInterruptSemaphorePeriodicTest) refers to intsemtest.o(.bss.xISRCountingSemaphore) for [Anonymous Symbol]
    intsemtest.o(.ARM.exidx.text.vInterruptSemaphorePeriodicTest) refers to intsemtest.o(.text.vInterruptSemaphorePeriodicTest) for [Anonymous Symbol]
    intsemtest.o(.text.xAreInterruptSemaphoreTasksStillRunning) refers to intsemtest.o(.bss.ulMasterLoops) for [Anonymous Symbol]
    intsemtest.o(.text.xAreInterruptSemaphoreTasksStillRunning) refers to intsemtest.o(.bss.xAreInterruptSemaphoreTasksStillRunning.ulLastMasterLoopCounter) for [Anonymous Symbol]
    intsemtest.o(.text.xAreInterruptSemaphoreTasksStillRunning) refers to intsemtest.o(.bss.xErrorDetected) for [Anonymous Symbol]
    intsemtest.o(.text.xAreInterruptSemaphoreTasksStillRunning) refers to intsemtest.o(.bss.xAreInterruptSemaphoreTasksStillRunning.ulLastCountingSemaphoreLoops) for [Anonymous Symbol]
    intsemtest.o(.text.xAreInterruptSemaphoreTasksStillRunning) refers to intsemtest.o(.bss.ulCountingSemaphoreLoops) for [Anonymous Symbol]
    intsemtest.o(.ARM.exidx.text.xAreInterruptSemaphoreTasksStillRunning) refers to intsemtest.o(.text.xAreInterruptSemaphoreTasksStillRunning) for [Anonymous Symbol]
    intsemtest.o(.text.prvTakeAndGiveInTheSameOrder) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    intsemtest.o(.text.prvTakeAndGiveInTheSameOrder) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    intsemtest.o(.text.prvTakeAndGiveInTheSameOrder) refers to tasks.o(.text.vTaskResume) for vTaskResume
    intsemtest.o(.text.prvTakeAndGiveInTheSameOrder) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    intsemtest.o(.text.prvTakeAndGiveInTheSameOrder) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    intsemtest.o(.text.prvTakeAndGiveInTheSameOrder) refers to intsemtest.o(.bss.xErrorDetected) for [Anonymous Symbol]
    intsemtest.o(.text.prvTakeAndGiveInTheSameOrder) refers to intsemtest.o(.bss.xMasterSlaveMutex) for [Anonymous Symbol]
    intsemtest.o(.text.prvTakeAndGiveInTheSameOrder) refers to intsemtest.o(.bss.xSlaveHandle) for [Anonymous Symbol]
    intsemtest.o(.text.prvTakeAndGiveInTheSameOrder) refers to intsemtest.o(.bss.xOkToGiveMutex) for [Anonymous Symbol]
    intsemtest.o(.text.prvTakeAndGiveInTheSameOrder) refers to intsemtest.o(.bss.xISRMutex) for [Anonymous Symbol]
    intsemtest.o(.ARM.exidx.text.prvTakeAndGiveInTheSameOrder) refers to intsemtest.o(.text.prvTakeAndGiveInTheSameOrder) for [Anonymous Symbol]
    intsemtest.o(.text.prvTakeAndGiveInTheOppositeOrder) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    intsemtest.o(.text.prvTakeAndGiveInTheOppositeOrder) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    intsemtest.o(.text.prvTakeAndGiveInTheOppositeOrder) refers to tasks.o(.text.vTaskResume) for vTaskResume
    intsemtest.o(.text.prvTakeAndGiveInTheOppositeOrder) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    intsemtest.o(.text.prvTakeAndGiveInTheOppositeOrder) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    intsemtest.o(.text.prvTakeAndGiveInTheOppositeOrder) refers to intsemtest.o(.bss.xErrorDetected) for [Anonymous Symbol]
    intsemtest.o(.text.prvTakeAndGiveInTheOppositeOrder) refers to intsemtest.o(.bss.xMasterSlaveMutex) for [Anonymous Symbol]
    intsemtest.o(.text.prvTakeAndGiveInTheOppositeOrder) refers to intsemtest.o(.bss.xSlaveHandle) for [Anonymous Symbol]
    intsemtest.o(.text.prvTakeAndGiveInTheOppositeOrder) refers to intsemtest.o(.bss.xOkToGiveMutex) for [Anonymous Symbol]
    intsemtest.o(.text.prvTakeAndGiveInTheOppositeOrder) refers to intsemtest.o(.bss.xISRMutex) for [Anonymous Symbol]
    intsemtest.o(.ARM.exidx.text.prvTakeAndGiveInTheOppositeOrder) refers to intsemtest.o(.text.prvTakeAndGiveInTheOppositeOrder) for [Anonymous Symbol]
    messagebufferamp.o(.text.vStartMessageBufferAMPTasks) refers to stream_buffer.o(.text.xStreamBufferGenericCreate) for xStreamBufferGenericCreate
    messagebufferamp.o(.text.vStartMessageBufferAMPTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    messagebufferamp.o(.text.vStartMessageBufferAMPTasks) refers to messagebufferamp.o(.bss.xControlMessageBuffer) for [Anonymous Symbol]
    messagebufferamp.o(.text.vStartMessageBufferAMPTasks) refers to messagebufferamp.o(.text.prvCoreATask) for prvCoreATask
    messagebufferamp.o(.text.vStartMessageBufferAMPTasks) refers to messagebufferamp.o(.bss.xCoreBMessageBuffers) for [Anonymous Symbol]
    messagebufferamp.o(.text.vStartMessageBufferAMPTasks) refers to messagebufferamp.o(.text.prvCoreBTasks) for prvCoreBTasks
    messagebufferamp.o(.ARM.exidx.text.vStartMessageBufferAMPTasks) refers to messagebufferamp.o(.text.vStartMessageBufferAMPTasks) for [Anonymous Symbol]
    messagebufferamp.o(.text.prvCoreATask) refers to printf8.o(i.__0sprintf$8) for __2sprintf
    messagebufferamp.o(.text.prvCoreATask) refers to strlen.o(.text) for strlen
    messagebufferamp.o(.text.prvCoreATask) refers to stream_buffer.o(.text.xStreamBufferSend) for xStreamBufferSend
    messagebufferamp.o(.text.prvCoreATask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    messagebufferamp.o(.text.prvCoreATask) refers to messagebufferamp.o(.rodata.str1.1) for [Anonymous Symbol]
    messagebufferamp.o(.text.prvCoreATask) refers to messagebufferamp.o(.bss.xCoreBMessageBuffers) for [Anonymous Symbol]
    messagebufferamp.o(.ARM.exidx.text.prvCoreATask) refers to messagebufferamp.o(.text.prvCoreATask) for [Anonymous Symbol]
    messagebufferamp.o(.text.prvCoreBTasks) refers to printf8.o(i.__0sprintf$8) for __2sprintf
    messagebufferamp.o(.text.prvCoreBTasks) refers to stream_buffer.o(.text.xStreamBufferReceive) for xStreamBufferReceive
    messagebufferamp.o(.text.prvCoreBTasks) refers to strcmp.o(.text) for strcmp
    messagebufferamp.o(.text.prvCoreBTasks) refers to messagebufferamp.o(.bss.ulCycleCounters) for [Anonymous Symbol]
    messagebufferamp.o(.text.prvCoreBTasks) refers to messagebufferamp.o(.bss.xCoreBMessageBuffers) for [Anonymous Symbol]
    messagebufferamp.o(.text.prvCoreBTasks) refers to messagebufferamp.o(.rodata.str1.1) for [Anonymous Symbol]
    messagebufferamp.o(.text.prvCoreBTasks) refers to messagebufferamp.o(.data.xDemoStatus) for xDemoStatus
    messagebufferamp.o(.ARM.exidx.text.prvCoreBTasks) refers to messagebufferamp.o(.text.prvCoreBTasks) for [Anonymous Symbol]
    messagebufferamp.o(.text.vGenerateCoreBInterrupt) refers to stream_buffer.o(.text.xStreamBufferSend) for xStreamBufferSend
    messagebufferamp.o(.text.vGenerateCoreBInterrupt) refers to messagebufferamp.o(.text.prvCoreBInterruptHandler) for prvCoreBInterruptHandler
    messagebufferamp.o(.text.vGenerateCoreBInterrupt) refers to messagebufferamp.o(.bss.xControlMessageBuffer) for [Anonymous Symbol]
    messagebufferamp.o(.ARM.exidx.text.vGenerateCoreBInterrupt) refers to messagebufferamp.o(.text.vGenerateCoreBInterrupt) for [Anonymous Symbol]
    messagebufferamp.o(.text.prvCoreBInterruptHandler) refers to stream_buffer.o(.text.xStreamBufferReceive) for xStreamBufferReceive
    messagebufferamp.o(.text.prvCoreBInterruptHandler) refers to stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) for xStreamBufferSendCompletedFromISR
    messagebufferamp.o(.text.prvCoreBInterruptHandler) refers to messagebufferamp.o(.bss.xControlMessageBuffer) for [Anonymous Symbol]
    messagebufferamp.o(.ARM.exidx.text.prvCoreBInterruptHandler) refers to messagebufferamp.o(.text.prvCoreBInterruptHandler) for [Anonymous Symbol]
    messagebufferamp.o(.text.xAreMessageBufferAMPTasksStillRunning) refers to messagebufferamp.o(.bss.ulCycleCounters) for [Anonymous Symbol]
    messagebufferamp.o(.text.xAreMessageBufferAMPTasksStillRunning) refers to messagebufferamp.o(.bss.xAreMessageBufferAMPTasksStillRunning.ulLastCycleCounters) for [Anonymous Symbol]
    messagebufferamp.o(.text.xAreMessageBufferAMPTasksStillRunning) refers to messagebufferamp.o(.data.xDemoStatus) for xDemoStatus
    messagebufferamp.o(.ARM.exidx.text.xAreMessageBufferAMPTasksStillRunning) refers to messagebufferamp.o(.text.xAreMessageBufferAMPTasksStillRunning) for [Anonymous Symbol]
    messagebufferdemo.o(.text.vStartMessageBufferTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    messagebufferdemo.o(.text.vStartMessageBufferTasks) refers to stream_buffer.o(.text.xStreamBufferGenericCreate) for xStreamBufferGenericCreate
    messagebufferdemo.o(.text.vStartMessageBufferTasks) refers to messagebufferdemo.o(.bss.xBlockingStackSize) for [Anonymous Symbol]
    messagebufferdemo.o(.text.vStartMessageBufferTasks) refers to messagebufferdemo.o(.text.prvEchoServer) for prvEchoServer
    messagebufferdemo.o(.text.vStartMessageBufferTasks) refers to messagebufferdemo.o(.text.prvNonBlockingReceiverTask) for prvNonBlockingReceiverTask
    messagebufferdemo.o(.text.vStartMessageBufferTasks) refers to messagebufferdemo.o(.text.prvNonBlockingSenderTask) for prvNonBlockingSenderTask
    messagebufferdemo.o(.ARM.exidx.text.vStartMessageBufferTasks) refers to messagebufferdemo.o(.text.vStartMessageBufferTasks) for [Anonymous Symbol]
    messagebufferdemo.o(.text.prvEchoServer) refers to stream_buffer.o(.text.xStreamBufferGenericCreate) for xStreamBufferGenericCreate
    messagebufferdemo.o(.text.prvEchoServer) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    messagebufferdemo.o(.text.prvEchoServer) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    messagebufferdemo.o(.text.prvEchoServer) refers to stream_buffer.o(.text.xStreamBufferReceive) for xStreamBufferReceive
    messagebufferdemo.o(.text.prvEchoServer) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    messagebufferdemo.o(.text.prvEchoServer) refers to messagebufferdemo.o(.text.prvSingleTaskTests) for prvSingleTaskTests
    messagebufferdemo.o(.text.prvEchoServer) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    messagebufferdemo.o(.text.prvEchoServer) refers to memseta.o(.text) for __aeabi_memclr
    messagebufferdemo.o(.text.prvEchoServer) refers to stream_buffer.o(.text.xStreamBufferSend) for xStreamBufferSend
    messagebufferdemo.o(.text.prvEchoServer) refers to stream_buffer.o(.text.vStreamBufferDelete) for vStreamBufferDelete
    messagebufferdemo.o(.text.prvEchoServer) refers to messagebufferdemo.o(.text.prvEchoClient) for prvEchoClient
    messagebufferdemo.o(.ARM.exidx.text.prvEchoServer) refers to messagebufferdemo.o(.text.prvEchoServer) for [Anonymous Symbol]
    messagebufferdemo.o(.text.prvNonBlockingReceiverTask) refers to printf8.o(i.__0sprintf$8) for __2sprintf
    messagebufferdemo.o(.text.prvNonBlockingReceiverTask) refers to strlen.o(.text) for strlen
    messagebufferdemo.o(.text.prvNonBlockingReceiverTask) refers to stream_buffer.o(.text.xStreamBufferReceive) for xStreamBufferReceive
    messagebufferdemo.o(.text.prvNonBlockingReceiverTask) refers to strcmp.o(.text) for strcmp
    messagebufferdemo.o(.text.prvNonBlockingReceiverTask) refers to messagebufferdemo.o(.rodata.str1.1) for [Anonymous Symbol]
    messagebufferdemo.o(.text.prvNonBlockingReceiverTask) refers to messagebufferdemo.o(.bss.ulNonBlockingRxCounter) for [Anonymous Symbol]
    messagebufferdemo.o(.ARM.exidx.text.prvNonBlockingReceiverTask) refers to messagebufferdemo.o(.text.prvNonBlockingReceiverTask) for [Anonymous Symbol]
    messagebufferdemo.o(.text.prvNonBlockingSenderTask) refers to printf8.o(i.__0sprintf$8) for __2sprintf
    messagebufferdemo.o(.text.prvNonBlockingSenderTask) refers to strlen.o(.text) for strlen
    messagebufferdemo.o(.text.prvNonBlockingSenderTask) refers to stream_buffer.o(.text.xStreamBufferSend) for xStreamBufferSend
    messagebufferdemo.o(.text.prvNonBlockingSenderTask) refers to messagebufferdemo.o(.rodata.str1.1) for [Anonymous Symbol]
    messagebufferdemo.o(.ARM.exidx.text.prvNonBlockingSenderTask) refers to messagebufferdemo.o(.text.prvNonBlockingSenderTask) for [Anonymous Symbol]
    messagebufferdemo.o(.text.xAreMessageBufferTasksStillRunning) refers to messagebufferdemo.o(.bss.ulEchoLoopCounters) for [Anonymous Symbol]
    messagebufferdemo.o(.text.xAreMessageBufferTasksStillRunning) refers to messagebufferdemo.o(.bss.xAreMessageBufferTasksStillRunning.ulLastEchoLoopCounters) for [Anonymous Symbol]
    messagebufferdemo.o(.text.xAreMessageBufferTasksStillRunning) refers to messagebufferdemo.o(.bss.ulNonBlockingRxCounter) for [Anonymous Symbol]
    messagebufferdemo.o(.text.xAreMessageBufferTasksStillRunning) refers to messagebufferdemo.o(.bss.xAreMessageBufferTasksStillRunning.ulLastNonBlockingRxCounter) for [Anonymous Symbol]
    messagebufferdemo.o(.ARM.exidx.text.xAreMessageBufferTasksStillRunning) refers to messagebufferdemo.o(.text.xAreMessageBufferTasksStillRunning) for [Anonymous Symbol]
    messagebufferdemo.o(.text.prvEchoClient) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    messagebufferdemo.o(.text.prvEchoClient) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    messagebufferdemo.o(.text.prvEchoClient) refers to memseta.o(.text) for __aeabi_memclr
    messagebufferdemo.o(.text.prvEchoClient) refers to stream_buffer.o(.text.xStreamBufferSend) for xStreamBufferSend
    messagebufferdemo.o(.text.prvEchoClient) refers to stream_buffer.o(.text.xStreamBufferReceive) for xStreamBufferReceive
    messagebufferdemo.o(.text.prvEchoClient) refers to messagebufferdemo.o(.bss.ulEchoLoopCounters) for [Anonymous Symbol]
    messagebufferdemo.o(.ARM.exidx.text.prvEchoClient) refers to messagebufferdemo.o(.text.prvEchoClient) for [Anonymous Symbol]
    messagebufferdemo.o(.text.prvSingleTaskTests) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    messagebufferdemo.o(.text.prvSingleTaskTests) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    messagebufferdemo.o(.text.prvSingleTaskTests) refers to stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) for xStreamBufferNextMessageLengthBytes
    messagebufferdemo.o(.text.prvSingleTaskTests) refers to stream_buffer.o(.text.xStreamBufferSendFromISR) for xStreamBufferSendFromISR
    messagebufferdemo.o(.text.prvSingleTaskTests) refers to stream_buffer.o(.text.xStreamBufferSend) for xStreamBufferSend
    messagebufferdemo.o(.text.prvSingleTaskTests) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    messagebufferdemo.o(.text.prvSingleTaskTests) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    messagebufferdemo.o(.text.prvSingleTaskTests) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    messagebufferdemo.o(.text.prvSingleTaskTests) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    messagebufferdemo.o(.text.prvSingleTaskTests) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    messagebufferdemo.o(.text.prvSingleTaskTests) refers to stream_buffer.o(.text.xStreamBufferReceive) for xStreamBufferReceive
    messagebufferdemo.o(.text.prvSingleTaskTests) refers to stream_buffer.o(.text.xStreamBufferReceiveFromISR) for xStreamBufferReceiveFromISR
    messagebufferdemo.o(.text.prvSingleTaskTests) refers to memseta.o(.text) for __aeabi_memset
    messagebufferdemo.o(.text.prvSingleTaskTests) refers to heap_4.o(.text.vPortFree) for vPortFree
    messagebufferdemo.o(.text.prvSingleTaskTests) refers to stream_buffer.o(.text.xStreamBufferReset) for xStreamBufferReset
    messagebufferdemo.o(.text.prvSingleTaskTests) refers to messagebufferdemo.o(.rodata.str1.1) for [Anonymous Symbol]
    messagebufferdemo.o(.ARM.exidx.text.prvSingleTaskTests) refers to messagebufferdemo.o(.text.prvSingleTaskTests) for [Anonymous Symbol]
    pollq.o(.text.vStartPolledQueueTasks) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    pollq.o(.text.vStartPolledQueueTasks) refers to queue.o(.text.vQueueAddToRegistry) for vQueueAddToRegistry
    pollq.o(.text.vStartPolledQueueTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    pollq.o(.text.vStartPolledQueueTasks) refers to pollq.o(.bss.vStartPolledQueueTasks.xPolledQueue) for [Anonymous Symbol]
    pollq.o(.text.vStartPolledQueueTasks) refers to pollq.o(.text.vPolledQueueConsumer) for vPolledQueueConsumer
    pollq.o(.text.vStartPolledQueueTasks) refers to pollq.o(.text.vPolledQueueProducer) for vPolledQueueProducer
    pollq.o(.ARM.exidx.text.vStartPolledQueueTasks) refers to pollq.o(.text.vStartPolledQueueTasks) for [Anonymous Symbol]
    pollq.o(.text.vPolledQueueConsumer) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    pollq.o(.text.vPolledQueueConsumer) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    pollq.o(.text.vPolledQueueConsumer) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    pollq.o(.text.vPolledQueueConsumer) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    pollq.o(.text.vPolledQueueConsumer) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    pollq.o(.text.vPolledQueueConsumer) refers to pollq.o(.bss.xPollingConsumerCount) for [Anonymous Symbol]
    pollq.o(.ARM.exidx.text.vPolledQueueConsumer) refers to pollq.o(.text.vPolledQueueConsumer) for [Anonymous Symbol]
    pollq.o(.text.vPolledQueueProducer) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    pollq.o(.text.vPolledQueueProducer) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    pollq.o(.text.vPolledQueueProducer) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    pollq.o(.text.vPolledQueueProducer) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    pollq.o(.text.vPolledQueueProducer) refers to pollq.o(.bss.xPollingProducerCount) for [Anonymous Symbol]
    pollq.o(.ARM.exidx.text.vPolledQueueProducer) refers to pollq.o(.text.vPolledQueueProducer) for [Anonymous Symbol]
    pollq.o(.text.xArePollingQueuesStillRunning) refers to pollq.o(.bss.xPollingConsumerCount) for [Anonymous Symbol]
    pollq.o(.text.xArePollingQueuesStillRunning) refers to pollq.o(.bss.xPollingProducerCount) for [Anonymous Symbol]
    pollq.o(.ARM.exidx.text.xArePollingQueuesStillRunning) refers to pollq.o(.text.xArePollingQueuesStillRunning) for [Anonymous Symbol]
    qpeek.o(.text.vStartQueuePeekTasks) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    qpeek.o(.text.vStartQueuePeekTasks) refers to queue.o(.text.vQueueAddToRegistry) for vQueueAddToRegistry
    qpeek.o(.text.vStartQueuePeekTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    qpeek.o(.text.vStartQueuePeekTasks) refers to qpeek.o(.text.prvLowPriorityPeekTask) for prvLowPriorityPeekTask
    qpeek.o(.text.vStartQueuePeekTasks) refers to qpeek.o(.bss.xMediumPriorityTask) for xMediumPriorityTask
    qpeek.o(.text.vStartQueuePeekTasks) refers to qpeek.o(.text.prvMediumPriorityPeekTask) for prvMediumPriorityPeekTask
    qpeek.o(.text.vStartQueuePeekTasks) refers to qpeek.o(.bss.xHighPriorityTask) for xHighPriorityTask
    qpeek.o(.text.vStartQueuePeekTasks) refers to qpeek.o(.text.prvHighPriorityPeekTask) for prvHighPriorityPeekTask
    qpeek.o(.text.vStartQueuePeekTasks) refers to qpeek.o(.bss.xHighestPriorityTask) for xHighestPriorityTask
    qpeek.o(.text.vStartQueuePeekTasks) refers to qpeek.o(.text.prvHighestPriorityPeekTask) for prvHighestPriorityPeekTask
    qpeek.o(.ARM.exidx.text.vStartQueuePeekTasks) refers to qpeek.o(.text.vStartQueuePeekTasks) for [Anonymous Symbol]
    qpeek.o(.text.prvLowPriorityPeekTask) refers to tasks.o(.text.vTaskResume) for vTaskResume
    qpeek.o(.text.prvLowPriorityPeekTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    qpeek.o(.text.prvLowPriorityPeekTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    qpeek.o(.text.prvLowPriorityPeekTask) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    qpeek.o(.text.prvLowPriorityPeekTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    qpeek.o(.text.prvLowPriorityPeekTask) refers to queue.o(.text.xQueuePeek) for xQueuePeek
    qpeek.o(.text.prvLowPriorityPeekTask) refers to qpeek.o(.bss.xErrorDetected) for [Anonymous Symbol]
    qpeek.o(.text.prvLowPriorityPeekTask) refers to qpeek.o(.bss.xMediumPriorityTask) for xMediumPriorityTask
    qpeek.o(.text.prvLowPriorityPeekTask) refers to qpeek.o(.bss.xHighPriorityTask) for xHighPriorityTask
    qpeek.o(.text.prvLowPriorityPeekTask) refers to qpeek.o(.bss.xHighestPriorityTask) for xHighestPriorityTask
    qpeek.o(.ARM.exidx.text.prvLowPriorityPeekTask) refers to qpeek.o(.text.prvLowPriorityPeekTask) for [Anonymous Symbol]
    qpeek.o(.text.prvMediumPriorityPeekTask) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    qpeek.o(.text.prvMediumPriorityPeekTask) refers to queue.o(.text.xQueuePeek) for xQueuePeek
    qpeek.o(.text.prvMediumPriorityPeekTask) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    qpeek.o(.text.prvMediumPriorityPeekTask) refers to qpeek.o(.bss.xErrorDetected) for [Anonymous Symbol]
    qpeek.o(.text.prvMediumPriorityPeekTask) refers to qpeek.o(.bss.ulLoopCounter) for [Anonymous Symbol]
    qpeek.o(.ARM.exidx.text.prvMediumPriorityPeekTask) refers to qpeek.o(.text.prvMediumPriorityPeekTask) for [Anonymous Symbol]
    qpeek.o(.text.prvHighPriorityPeekTask) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    qpeek.o(.text.prvHighPriorityPeekTask) refers to queue.o(.text.xQueuePeek) for xQueuePeek
    qpeek.o(.text.prvHighPriorityPeekTask) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    qpeek.o(.text.prvHighPriorityPeekTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    qpeek.o(.text.prvHighPriorityPeekTask) refers to qpeek.o(.bss.xErrorDetected) for [Anonymous Symbol]
    qpeek.o(.ARM.exidx.text.prvHighPriorityPeekTask) refers to qpeek.o(.text.prvHighPriorityPeekTask) for [Anonymous Symbol]
    qpeek.o(.text.prvHighestPriorityPeekTask) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    qpeek.o(.text.prvHighestPriorityPeekTask) refers to queue.o(.text.xQueuePeek) for xQueuePeek
    qpeek.o(.text.prvHighestPriorityPeekTask) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    qpeek.o(.text.prvHighestPriorityPeekTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    qpeek.o(.text.prvHighestPriorityPeekTask) refers to qpeek.o(.bss.xErrorDetected) for [Anonymous Symbol]
    qpeek.o(.ARM.exidx.text.prvHighestPriorityPeekTask) refers to qpeek.o(.text.prvHighestPriorityPeekTask) for [Anonymous Symbol]
    qpeek.o(.text.xAreQueuePeekTasksStillRunning) refers to qpeek.o(.bss.ulLoopCounter) for [Anonymous Symbol]
    qpeek.o(.text.xAreQueuePeekTasksStillRunning) refers to qpeek.o(.bss.xAreQueuePeekTasksStillRunning.ulLastLoopCounter) for [Anonymous Symbol]
    qpeek.o(.text.xAreQueuePeekTasksStillRunning) refers to qpeek.o(.bss.xErrorDetected) for [Anonymous Symbol]
    qpeek.o(.ARM.exidx.text.xAreQueuePeekTasksStillRunning) refers to qpeek.o(.text.xAreQueuePeekTasksStillRunning) for [Anonymous Symbol]
    queueoverwrite.o(.text.vStartQueueOverwriteTask) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queueoverwrite.o(.text.vStartQueueOverwriteTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    queueoverwrite.o(.text.vStartQueueOverwriteTask) refers to queueoverwrite.o(.bss.xISRQueue) for [Anonymous Symbol]
    queueoverwrite.o(.text.vStartQueueOverwriteTask) refers to queueoverwrite.o(.text.prvQueueOverwriteTask) for prvQueueOverwriteTask
    queueoverwrite.o(.ARM.exidx.text.vStartQueueOverwriteTask) refers to queueoverwrite.o(.text.vStartQueueOverwriteTask) for [Anonymous Symbol]
    queueoverwrite.o(.text.prvQueueOverwriteTask) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queueoverwrite.o(.text.prvQueueOverwriteTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queueoverwrite.o(.text.prvQueueOverwriteTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queueoverwrite.o(.text.prvQueueOverwriteTask) refers to queue.o(.text.xQueuePeek) for xQueuePeek
    queueoverwrite.o(.text.prvQueueOverwriteTask) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    queueoverwrite.o(.text.prvQueueOverwriteTask) refers to queueoverwrite.o(.bss.ulLoopCounter) for [Anonymous Symbol]
    queueoverwrite.o(.ARM.exidx.text.prvQueueOverwriteTask) refers to queueoverwrite.o(.text.prvQueueOverwriteTask) for [Anonymous Symbol]
    queueoverwrite.o(.text.xIsQueueOverwriteTaskStillRunning) refers to queueoverwrite.o(.bss.ulLoopCounter) for [Anonymous Symbol]
    queueoverwrite.o(.text.xIsQueueOverwriteTaskStillRunning) refers to queueoverwrite.o(.bss.xISRTestStatus) for [Anonymous Symbol]
    queueoverwrite.o(.ARM.exidx.text.xIsQueueOverwriteTaskStillRunning) refers to queueoverwrite.o(.text.xIsQueueOverwriteTaskStillRunning) for [Anonymous Symbol]
    queueoverwrite.o(.text.vQueueOverwritePeriodicISRDemo) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    queueoverwrite.o(.text.vQueueOverwritePeriodicISRDemo) refers to queue.o(.text.xQueuePeekFromISR) for xQueuePeekFromISR
    queueoverwrite.o(.text.vQueueOverwritePeriodicISRDemo) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queueoverwrite.o(.text.vQueueOverwritePeriodicISRDemo) refers to queueoverwrite.o(.bss.vQueueOverwritePeriodicISRDemo.ulCallCount) for [Anonymous Symbol]
    queueoverwrite.o(.text.vQueueOverwritePeriodicISRDemo) refers to queueoverwrite.o(.bss.xISRQueue) for [Anonymous Symbol]
    queueoverwrite.o(.text.vQueueOverwritePeriodicISRDemo) refers to queueoverwrite.o(.bss.xISRTestStatus) for [Anonymous Symbol]
    queueoverwrite.o(.ARM.exidx.text.vQueueOverwritePeriodicISRDemo) refers to queueoverwrite.o(.text.vQueueOverwritePeriodicISRDemo) for [Anonymous Symbol]
    queueset.o(.text.vStartQueueSetTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    queueset.o(.text.vStartQueueSetTasks) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    queueset.o(.text.vStartQueueSetTasks) refers to queueset.o(.bss.xQueueSetSendingTask) for xQueueSetSendingTask
    queueset.o(.text.vStartQueueSetTasks) refers to queueset.o(.text.prvQueueSetSendingTask) for prvQueueSetSendingTask
    queueset.o(.text.vStartQueueSetTasks) refers to queueset.o(.bss.xQueueSetReceivingTask) for xQueueSetReceivingTask
    queueset.o(.text.vStartQueueSetTasks) refers to queueset.o(.text.prvQueueSetReceivingTask) for prvQueueSetReceivingTask
    queueset.o(.ARM.exidx.text.vStartQueueSetTasks) refers to queueset.o(.text.vStartQueueSetTasks) for [Anonymous Symbol]
    queueset.o(.text.prvQueueSetSendingTask) refers to queueset.o(.text.prvSRand) for prvSRand
    queueset.o(.text.prvQueueSetSendingTask) refers to queueset.o(.text.prvChangeRelativePriorities) for prvChangeRelativePriorities
    queueset.o(.text.prvQueueSetSendingTask) refers to queueset.o(.text.prvRand) for prvRand
    queueset.o(.text.prvQueueSetSendingTask) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    queueset.o(.text.prvQueueSetSendingTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queueset.o(.text.prvQueueSetSendingTask) refers to queueset.o(.bss.ulQueueUsedCounter) for [Anonymous Symbol]
    queueset.o(.text.prvQueueSetSendingTask) refers to queueset.o(.bss.xQueues) for [Anonymous Symbol]
    queueset.o(.text.prvQueueSetSendingTask) refers to queueset.o(.data.xQueueSetTasksStatus) for [Anonymous Symbol]
    queueset.o(.ARM.exidx.text.prvQueueSetSendingTask) refers to queueset.o(.text.prvQueueSetSendingTask) for [Anonymous Symbol]
    queueset.o(.text.prvQueueSetReceivingTask) refers to queueset.o(.text.prvSetupTest) for prvSetupTest
    queueset.o(.text.prvQueueSetReceivingTask) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    queueset.o(.text.prvQueueSetReceivingTask) refers to queue.o(.text.xQueueSelectFromSet) for xQueueSelectFromSet
    queueset.o(.text.prvQueueSetReceivingTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queueset.o(.text.prvQueueSetReceivingTask) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queueset.o(.text.prvQueueSetReceivingTask) refers to queueset.o(.text.prvCheckReceivedValue) for prvCheckReceivedValue
    queueset.o(.text.prvQueueSetReceivingTask) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queueset.o(.text.prvQueueSetReceivingTask) refers to queueset.o(.bss.xQueueSet) for [Anonymous Symbol]
    queueset.o(.text.prvQueueSetReceivingTask) refers to queueset.o(.data.xQueueSetTasksStatus) for [Anonymous Symbol]
    queueset.o(.text.prvQueueSetReceivingTask) refers to queueset.o(.bss.ulCycleCounter) for [Anonymous Symbol]
    queueset.o(.ARM.exidx.text.prvQueueSetReceivingTask) refers to queueset.o(.text.prvQueueSetReceivingTask) for [Anonymous Symbol]
    queueset.o(.text.xAreQueueSetTasksStillRunning) refers to queueset.o(.bss.ulCycleCounter) for [Anonymous Symbol]
    queueset.o(.text.xAreQueueSetTasksStillRunning) refers to queueset.o(.bss.xAreQueueSetTasksStillRunning.ulLastCycleCounter) for [Anonymous Symbol]
    queueset.o(.text.xAreQueueSetTasksStillRunning) refers to queueset.o(.bss.xAreQueueSetTasksStillRunning.ulLastQueueUsedCounter) for [Anonymous Symbol]
    queueset.o(.text.xAreQueueSetTasksStillRunning) refers to queueset.o(.bss.ulQueueUsedCounter) for [Anonymous Symbol]
    queueset.o(.text.xAreQueueSetTasksStillRunning) refers to queueset.o(.data.xQueueSetTasksStatus) for [Anonymous Symbol]
    queueset.o(.text.xAreQueueSetTasksStillRunning) refers to queueset.o(.data.ulISRTxValue) for [Anonymous Symbol]
    queueset.o(.text.xAreQueueSetTasksStillRunning) refers to queueset.o(.bss.xAreQueueSetTasksStillRunning.ulLastISRTxValue) for [Anonymous Symbol]
    queueset.o(.ARM.exidx.text.xAreQueueSetTasksStillRunning) refers to queueset.o(.text.xAreQueueSetTasksStillRunning) for [Anonymous Symbol]
    queueset.o(.text.vQueueSetAccessQueueSetFromISR) refers to queueset.o(.text.prvReceiveFromQueueInSetFromISR) for prvReceiveFromQueueInSetFromISR
    queueset.o(.text.vQueueSetAccessQueueSetFromISR) refers to queueset.o(.text.prvSendToQueueInSetFromISR) for prvSendToQueueInSetFromISR
    queueset.o(.text.vQueueSetAccessQueueSetFromISR) refers to queueset.o(.bss.xSetupComplete) for [Anonymous Symbol]
    queueset.o(.text.vQueueSetAccessQueueSetFromISR) refers to queueset.o(.bss.vQueueSetAccessQueueSetFromISR.ulCallCount) for [Anonymous Symbol]
    queueset.o(.ARM.exidx.text.vQueueSetAccessQueueSetFromISR) refers to queueset.o(.text.vQueueSetAccessQueueSetFromISR) for [Anonymous Symbol]
    queueset.o(.text.prvReceiveFromQueueInSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for xQueueSelectFromSetFromISR
    queueset.o(.text.prvReceiveFromQueueInSetFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queueset.o(.text.prvReceiveFromQueueInSetFromISR) refers to queueset.o(.text.prvCheckReceivedValue) for prvCheckReceivedValue
    queueset.o(.text.prvReceiveFromQueueInSetFromISR) refers to queueset.o(.bss.xQueueSet) for [Anonymous Symbol]
    queueset.o(.text.prvReceiveFromQueueInSetFromISR) refers to queueset.o(.data.xQueueSetTasksStatus) for [Anonymous Symbol]
    queueset.o(.ARM.exidx.text.prvReceiveFromQueueInSetFromISR) refers to queueset.o(.text.prvReceiveFromQueueInSetFromISR) for [Anonymous Symbol]
    queueset.o(.text.prvSendToQueueInSetFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    queueset.o(.text.prvSendToQueueInSetFromISR) refers to queueset.o(.data.ulISRTxValue) for [Anonymous Symbol]
    queueset.o(.text.prvSendToQueueInSetFromISR) refers to queueset.o(.bss.prvSendToQueueInSetFromISR.xQueueToWriteTo) for [Anonymous Symbol]
    queueset.o(.text.prvSendToQueueInSetFromISR) refers to queueset.o(.bss.xQueues) for [Anonymous Symbol]
    queueset.o(.ARM.exidx.text.prvSendToQueueInSetFromISR) refers to queueset.o(.text.prvSendToQueueInSetFromISR) for [Anonymous Symbol]
    queueset.o(.text.prvSRand) refers to queueset.o(.bss.uxNextRand) for [Anonymous Symbol]
    queueset.o(.ARM.exidx.text.prvSRand) refers to queueset.o(.text.prvSRand) for [Anonymous Symbol]
    queueset.o(.text.prvRand) refers to queueset.o(.bss.uxNextRand) for [Anonymous Symbol]
    queueset.o(.ARM.exidx.text.prvRand) refers to queueset.o(.text.prvRand) for [Anonymous Symbol]
    queueset.o(.text.prvChangeRelativePriorities) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    queueset.o(.text.prvChangeRelativePriorities) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    queueset.o(.text.prvChangeRelativePriorities) refers to queueset.o(.bss.prvChangeRelativePriorities.ulLoops) for [Anonymous Symbol]
    queueset.o(.text.prvChangeRelativePriorities) refers to queueset.o(.bss.prvChangeRelativePriorities.ePriorities) for [Anonymous Symbol]
    queueset.o(.text.prvChangeRelativePriorities) refers to queueset.o(.bss.xQueueSetSendingTask) for xQueueSetSendingTask
    queueset.o(.text.prvChangeRelativePriorities) refers to queueset.o(.bss.xQueueSetReceivingTask) for xQueueSetReceivingTask
    queueset.o(.ARM.exidx.text.prvChangeRelativePriorities) refers to queueset.o(.text.prvChangeRelativePriorities) for [Anonymous Symbol]
    queueset.o(.text.prvSetupTest) refers to queue.o(.text.xQueueCreateSet) for xQueueCreateSet
    queueset.o(.text.prvSetupTest) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queueset.o(.text.prvSetupTest) refers to queue.o(.text.xQueueAddToSet) for xQueueAddToSet
    queueset.o(.text.prvSetupTest) refers to queue.o(.text.xQueueRemoveFromSet) for xQueueRemoveFromSet
    queueset.o(.text.prvSetupTest) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queueset.o(.text.prvSetupTest) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queueset.o(.text.prvSetupTest) refers to queue.o(.text.xQueueSelectFromSet) for xQueueSelectFromSet
    queueset.o(.text.prvSetupTest) refers to queueset.o(.text.prvTestQueueOverwriteWithQueueSet) for prvTestQueueOverwriteWithQueueSet
    queueset.o(.text.prvSetupTest) refers to queueset.o(.text.prvTestQueueOverwriteOnTwoQueusInQueueSet) for prvTestQueueOverwriteOnTwoQueusInQueueSet
    queueset.o(.text.prvSetupTest) refers to queueset.o(.text.prvTestQueueOverwriteFromISROnTwoQueusInQueueSet) for prvTestQueueOverwriteFromISROnTwoQueusInQueueSet
    queueset.o(.text.prvSetupTest) refers to tasks.o(.text.vTaskResume) for vTaskResume
    queueset.o(.text.prvSetupTest) refers to queueset.o(.bss.xQueueSet) for [Anonymous Symbol]
    queueset.o(.text.prvSetupTest) refers to queueset.o(.bss.xQueues) for [Anonymous Symbol]
    queueset.o(.text.prvSetupTest) refers to queueset.o(.data.xQueueSetTasksStatus) for [Anonymous Symbol]
    queueset.o(.text.prvSetupTest) refers to queueset.o(.bss.xQueueSetSendingTask) for xQueueSetSendingTask
    queueset.o(.text.prvSetupTest) refers to queueset.o(.bss.xSetupComplete) for [Anonymous Symbol]
    queueset.o(.ARM.exidx.text.prvSetupTest) refers to queueset.o(.text.prvSetupTest) for [Anonymous Symbol]
    queueset.o(.text.prvCheckReceivedValue) refers to queueset.o(.text.prvCheckReceivedValueWithinExpectedRange) for prvCheckReceivedValueWithinExpectedRange
    queueset.o(.text.prvCheckReceivedValue) refers to queueset.o(.bss.prvCheckReceivedValue.ulExpectedReceivedFromTask) for [Anonymous Symbol]
    queueset.o(.text.prvCheckReceivedValue) refers to queueset.o(.data.xQueueSetTasksStatus) for [Anonymous Symbol]
    queueset.o(.text.prvCheckReceivedValue) refers to queueset.o(.data.prvCheckReceivedValue.ulExpectedReceivedFromISR) for [Anonymous Symbol]
    queueset.o(.ARM.exidx.text.prvCheckReceivedValue) refers to queueset.o(.text.prvCheckReceivedValue) for [Anonymous Symbol]
    queueset.o(.text.prvTestQueueOverwriteWithQueueSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queueset.o(.text.prvTestQueueOverwriteWithQueueSet) refers to queue.o(.text.xQueueAddToSet) for xQueueAddToSet
    queueset.o(.text.prvTestQueueOverwriteWithQueueSet) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queueset.o(.text.prvTestQueueOverwriteWithQueueSet) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    queueset.o(.text.prvTestQueueOverwriteWithQueueSet) refers to queue.o(.text.xQueuePeek) for xQueuePeek
    queueset.o(.text.prvTestQueueOverwriteWithQueueSet) refers to queue.o(.text.xQueueSelectFromSet) for xQueueSelectFromSet
    queueset.o(.text.prvTestQueueOverwriteWithQueueSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queueset.o(.text.prvTestQueueOverwriteWithQueueSet) refers to queue.o(.text.xQueueRemoveFromSet) for xQueueRemoveFromSet
    queueset.o(.text.prvTestQueueOverwriteWithQueueSet) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    queueset.o(.text.prvTestQueueOverwriteWithQueueSet) refers to queueset.o(.bss.xQueueSet) for [Anonymous Symbol]
    queueset.o(.text.prvTestQueueOverwriteWithQueueSet) refers to queueset.o(.data.xQueueSetTasksStatus) for [Anonymous Symbol]
    queueset.o(.ARM.exidx.text.prvTestQueueOverwriteWithQueueSet) refers to queueset.o(.text.prvTestQueueOverwriteWithQueueSet) for [Anonymous Symbol]
    queueset.o(.text.prvTestQueueOverwriteOnTwoQueusInQueueSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queueset.o(.text.prvTestQueueOverwriteOnTwoQueusInQueueSet) refers to queue.o(.text.xQueueAddToSet) for xQueueAddToSet
    queueset.o(.text.prvTestQueueOverwriteOnTwoQueusInQueueSet) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queueset.o(.text.prvTestQueueOverwriteOnTwoQueusInQueueSet) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    queueset.o(.text.prvTestQueueOverwriteOnTwoQueusInQueueSet) refers to queue.o(.text.xQueuePeek) for xQueuePeek
    queueset.o(.text.prvTestQueueOverwriteOnTwoQueusInQueueSet) refers to queue.o(.text.xQueueSelectFromSet) for xQueueSelectFromSet
    queueset.o(.text.prvTestQueueOverwriteOnTwoQueusInQueueSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queueset.o(.text.prvTestQueueOverwriteOnTwoQueusInQueueSet) refers to queue.o(.text.xQueueRemoveFromSet) for xQueueRemoveFromSet
    queueset.o(.text.prvTestQueueOverwriteOnTwoQueusInQueueSet) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    queueset.o(.text.prvTestQueueOverwriteOnTwoQueusInQueueSet) refers to queueset.o(.bss.xQueueSet) for [Anonymous Symbol]
    queueset.o(.text.prvTestQueueOverwriteOnTwoQueusInQueueSet) refers to queueset.o(.data.xQueueSetTasksStatus) for [Anonymous Symbol]
    queueset.o(.ARM.exidx.text.prvTestQueueOverwriteOnTwoQueusInQueueSet) refers to queueset.o(.text.prvTestQueueOverwriteOnTwoQueusInQueueSet) for [Anonymous Symbol]
    queueset.o(.text.prvTestQueueOverwriteFromISROnTwoQueusInQueueSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queueset.o(.text.prvTestQueueOverwriteFromISROnTwoQueusInQueueSet) refers to queue.o(.text.xQueueAddToSet) for xQueueAddToSet
    queueset.o(.text.prvTestQueueOverwriteFromISROnTwoQueusInQueueSet) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    queueset.o(.text.prvTestQueueOverwriteFromISROnTwoQueusInQueueSet) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    queueset.o(.text.prvTestQueueOverwriteFromISROnTwoQueusInQueueSet) refers to queue.o(.text.xQueuePeek) for xQueuePeek
    queueset.o(.text.prvTestQueueOverwriteFromISROnTwoQueusInQueueSet) refers to queue.o(.text.xQueueSelectFromSet) for xQueueSelectFromSet
    queueset.o(.text.prvTestQueueOverwriteFromISROnTwoQueusInQueueSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queueset.o(.text.prvTestQueueOverwriteFromISROnTwoQueusInQueueSet) refers to queue.o(.text.xQueueRemoveFromSet) for xQueueRemoveFromSet
    queueset.o(.text.prvTestQueueOverwriteFromISROnTwoQueusInQueueSet) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    queueset.o(.text.prvTestQueueOverwriteFromISROnTwoQueusInQueueSet) refers to queueset.o(.bss.xQueueSet) for [Anonymous Symbol]
    queueset.o(.text.prvTestQueueOverwriteFromISROnTwoQueusInQueueSet) refers to queueset.o(.data.xQueueSetTasksStatus) for [Anonymous Symbol]
    queueset.o(.ARM.exidx.text.prvTestQueueOverwriteFromISROnTwoQueusInQueueSet) refers to queueset.o(.text.prvTestQueueOverwriteFromISROnTwoQueusInQueueSet) for [Anonymous Symbol]
    queueset.o(.ARM.exidx.text.prvCheckReceivedValueWithinExpectedRange) refers to queueset.o(.text.prvCheckReceivedValueWithinExpectedRange) for [Anonymous Symbol]
    queuesetpolling.o(.text.vStartQueueSetPollingTask) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queuesetpolling.o(.text.vStartQueueSetPollingTask) refers to queue.o(.text.xQueueCreateSet) for xQueueCreateSet
    queuesetpolling.o(.text.vStartQueueSetPollingTask) refers to queue.o(.text.xQueueAddToSet) for xQueueAddToSet
    queuesetpolling.o(.text.vStartQueueSetPollingTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    queuesetpolling.o(.text.vStartQueueSetPollingTask) refers to queuesetpolling.o(.bss.xQueue) for [Anonymous Symbol]
    queuesetpolling.o(.text.vStartQueueSetPollingTask) refers to queuesetpolling.o(.bss.xQueueSet) for [Anonymous Symbol]
    queuesetpolling.o(.text.vStartQueueSetPollingTask) refers to queuesetpolling.o(.text.prvQueueSetReceivingTask) for prvQueueSetReceivingTask
    queuesetpolling.o(.ARM.exidx.text.vStartQueueSetPollingTask) refers to queuesetpolling.o(.text.vStartQueueSetPollingTask) for [Anonymous Symbol]
    queuesetpolling.o(.text.prvQueueSetReceivingTask) refers to queue.o(.text.xQueueSelectFromSet) for xQueueSelectFromSet
    queuesetpolling.o(.text.prvQueueSetReceivingTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queuesetpolling.o(.text.prvQueueSetReceivingTask) refers to queuesetpolling.o(.bss.xQueueSet) for [Anonymous Symbol]
    queuesetpolling.o(.text.prvQueueSetReceivingTask) refers to queuesetpolling.o(.data.xQueueSetPollStatus) for [Anonymous Symbol]
    queuesetpolling.o(.text.prvQueueSetReceivingTask) refers to queuesetpolling.o(.bss.ulCycleCounter) for [Anonymous Symbol]
    queuesetpolling.o(.ARM.exidx.text.prvQueueSetReceivingTask) refers to queuesetpolling.o(.text.prvQueueSetReceivingTask) for [Anonymous Symbol]
    queuesetpolling.o(.text.vQueueSetPollingInterruptAccess) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    queuesetpolling.o(.text.vQueueSetPollingInterruptAccess) refers to queuesetpolling.o(.bss.vQueueSetPollingInterruptAccess.ulCallCount) for [Anonymous Symbol]
    queuesetpolling.o(.text.vQueueSetPollingInterruptAccess) refers to queuesetpolling.o(.bss.xQueue) for [Anonymous Symbol]
    queuesetpolling.o(.text.vQueueSetPollingInterruptAccess) refers to queuesetpolling.o(.bss.vQueueSetPollingInterruptAccess.ulValueToSend) for [Anonymous Symbol]
    queuesetpolling.o(.ARM.exidx.text.vQueueSetPollingInterruptAccess) refers to queuesetpolling.o(.text.vQueueSetPollingInterruptAccess) for [Anonymous Symbol]
    queuesetpolling.o(.text.xAreQueueSetPollTasksStillRunning) refers to queuesetpolling.o(.bss.ulCycleCounter) for [Anonymous Symbol]
    queuesetpolling.o(.text.xAreQueueSetPollTasksStillRunning) refers to queuesetpolling.o(.bss.xAreQueueSetPollTasksStillRunning.ulLastCycleCounter) for [Anonymous Symbol]
    queuesetpolling.o(.text.xAreQueueSetPollTasksStillRunning) refers to queuesetpolling.o(.data.xQueueSetPollStatus) for [Anonymous Symbol]
    queuesetpolling.o(.ARM.exidx.text.xAreQueueSetPollTasksStillRunning) refers to queuesetpolling.o(.text.xAreQueueSetPollTasksStillRunning) for [Anonymous Symbol]
    recmutex.o(.text.vStartRecursiveMutexTasks) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    recmutex.o(.text.vStartRecursiveMutexTasks) refers to queue.o(.text.vQueueAddToRegistry) for vQueueAddToRegistry
    recmutex.o(.text.vStartRecursiveMutexTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    recmutex.o(.text.vStartRecursiveMutexTasks) refers to recmutex.o(.bss.xMutex) for [Anonymous Symbol]
    recmutex.o(.text.vStartRecursiveMutexTasks) refers to recmutex.o(.bss.xControllingTaskHandle) for [Anonymous Symbol]
    recmutex.o(.text.vStartRecursiveMutexTasks) refers to recmutex.o(.text.prvRecursiveMutexControllingTask) for prvRecursiveMutexControllingTask
    recmutex.o(.text.vStartRecursiveMutexTasks) refers to recmutex.o(.bss.xBlockingTaskHandle) for [Anonymous Symbol]
    recmutex.o(.text.vStartRecursiveMutexTasks) refers to recmutex.o(.text.prvRecursiveMutexBlockingTask) for prvRecursiveMutexBlockingTask
    recmutex.o(.text.vStartRecursiveMutexTasks) refers to recmutex.o(.text.prvRecursiveMutexPollingTask) for prvRecursiveMutexPollingTask
    recmutex.o(.ARM.exidx.text.vStartRecursiveMutexTasks) refers to recmutex.o(.text.vStartRecursiveMutexTasks) for [Anonymous Symbol]
    recmutex.o(.text.prvRecursiveMutexControllingTask) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    recmutex.o(.text.prvRecursiveMutexControllingTask) refers to queue.o(.text.xQueueGiveMutexRecursive) for xQueueGiveMutexRecursive
    recmutex.o(.text.prvRecursiveMutexControllingTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    recmutex.o(.text.prvRecursiveMutexControllingTask) refers to queue.o(.text.xQueueTakeMutexRecursive) for xQueueTakeMutexRecursive
    recmutex.o(.text.prvRecursiveMutexControllingTask) refers to recmutex.o(.bss.xMutex) for [Anonymous Symbol]
    recmutex.o(.text.prvRecursiveMutexControllingTask) refers to recmutex.o(.bss.xErrorOccurred) for [Anonymous Symbol]
    recmutex.o(.text.prvRecursiveMutexControllingTask) refers to recmutex.o(.bss.uxControllingCycles) for [Anonymous Symbol]
    recmutex.o(.text.prvRecursiveMutexControllingTask) refers to recmutex.o(.bss.xControllingIsSuspended) for [Anonymous Symbol]
    recmutex.o(.ARM.exidx.text.prvRecursiveMutexControllingTask) refers to recmutex.o(.text.prvRecursiveMutexControllingTask) for [Anonymous Symbol]
    recmutex.o(.text.prvRecursiveMutexBlockingTask) refers to queue.o(.text.xQueueTakeMutexRecursive) for xQueueTakeMutexRecursive
    recmutex.o(.text.prvRecursiveMutexBlockingTask) refers to queue.o(.text.xQueueGiveMutexRecursive) for xQueueGiveMutexRecursive
    recmutex.o(.text.prvRecursiveMutexBlockingTask) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    recmutex.o(.text.prvRecursiveMutexBlockingTask) refers to recmutex.o(.bss.xMutex) for [Anonymous Symbol]
    recmutex.o(.text.prvRecursiveMutexBlockingTask) refers to recmutex.o(.bss.xErrorOccurred) for [Anonymous Symbol]
    recmutex.o(.text.prvRecursiveMutexBlockingTask) refers to recmutex.o(.bss.xControllingIsSuspended) for [Anonymous Symbol]
    recmutex.o(.text.prvRecursiveMutexBlockingTask) refers to recmutex.o(.bss.xBlockingIsSuspended) for [Anonymous Symbol]
    recmutex.o(.text.prvRecursiveMutexBlockingTask) refers to recmutex.o(.bss.uxControllingCycles) for [Anonymous Symbol]
    recmutex.o(.text.prvRecursiveMutexBlockingTask) refers to recmutex.o(.bss.uxBlockingCycles) for [Anonymous Symbol]
    recmutex.o(.ARM.exidx.text.prvRecursiveMutexBlockingTask) refers to recmutex.o(.text.prvRecursiveMutexBlockingTask) for [Anonymous Symbol]
    recmutex.o(.text.prvRecursiveMutexPollingTask) refers to queue.o(.text.xQueueTakeMutexRecursive) for xQueueTakeMutexRecursive
    recmutex.o(.text.prvRecursiveMutexPollingTask) refers to tasks.o(.text.vTaskResume) for vTaskResume
    recmutex.o(.text.prvRecursiveMutexPollingTask) refers to queue.o(.text.xQueueGiveMutexRecursive) for xQueueGiveMutexRecursive
    recmutex.o(.text.prvRecursiveMutexPollingTask) refers to recmutex.o(.bss.xMutex) for [Anonymous Symbol]
    recmutex.o(.text.prvRecursiveMutexPollingTask) refers to recmutex.o(.bss.xBlockingIsSuspended) for [Anonymous Symbol]
    recmutex.o(.text.prvRecursiveMutexPollingTask) refers to recmutex.o(.bss.xControllingIsSuspended) for [Anonymous Symbol]
    recmutex.o(.text.prvRecursiveMutexPollingTask) refers to recmutex.o(.bss.xErrorOccurred) for [Anonymous Symbol]
    recmutex.o(.text.prvRecursiveMutexPollingTask) refers to recmutex.o(.bss.uxPollingCycles) for [Anonymous Symbol]
    recmutex.o(.text.prvRecursiveMutexPollingTask) refers to recmutex.o(.bss.xBlockingTaskHandle) for [Anonymous Symbol]
    recmutex.o(.text.prvRecursiveMutexPollingTask) refers to recmutex.o(.bss.xControllingTaskHandle) for [Anonymous Symbol]
    recmutex.o(.ARM.exidx.text.prvRecursiveMutexPollingTask) refers to recmutex.o(.text.prvRecursiveMutexPollingTask) for [Anonymous Symbol]
    recmutex.o(.text.xAreRecursiveMutexTasksStillRunning) refers to recmutex.o(.bss.uxControllingCycles) for [Anonymous Symbol]
    recmutex.o(.text.xAreRecursiveMutexTasksStillRunning) refers to recmutex.o(.bss.xAreRecursiveMutexTasksStillRunning.uxLastControllingCycles) for [Anonymous Symbol]
    recmutex.o(.text.xAreRecursiveMutexTasksStillRunning) refers to recmutex.o(.bss.xErrorOccurred) for [Anonymous Symbol]
    recmutex.o(.text.xAreRecursiveMutexTasksStillRunning) refers to recmutex.o(.bss.uxBlockingCycles) for [Anonymous Symbol]
    recmutex.o(.text.xAreRecursiveMutexTasksStillRunning) refers to recmutex.o(.bss.xAreRecursiveMutexTasksStillRunning.uxLastBlockingCycles) for [Anonymous Symbol]
    recmutex.o(.text.xAreRecursiveMutexTasksStillRunning) refers to recmutex.o(.bss.uxPollingCycles) for [Anonymous Symbol]
    recmutex.o(.text.xAreRecursiveMutexTasksStillRunning) refers to recmutex.o(.bss.xAreRecursiveMutexTasksStillRunning.uxLastPollingCycles) for [Anonymous Symbol]
    recmutex.o(.ARM.exidx.text.xAreRecursiveMutexTasksStillRunning) refers to recmutex.o(.text.xAreRecursiveMutexTasksStillRunning) for [Anonymous Symbol]
    semtest.o(.text.vStartSemaphoreTasks) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    semtest.o(.text.vStartSemaphoreTasks) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    semtest.o(.text.vStartSemaphoreTasks) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    semtest.o(.text.vStartSemaphoreTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    semtest.o(.text.vStartSemaphoreTasks) refers to queue.o(.text.vQueueAddToRegistry) for vQueueAddToRegistry
    semtest.o(.text.vStartSemaphoreTasks) refers to semtest.o(.text.prvSemaphoreTest) for prvSemaphoreTest
    semtest.o(.ARM.exidx.text.vStartSemaphoreTasks) refers to semtest.o(.text.vStartSemaphoreTasks) for [Anonymous Symbol]
    semtest.o(.text.prvSemaphoreTest) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    semtest.o(.text.prvSemaphoreTest) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    semtest.o(.text.prvSemaphoreTest) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    semtest.o(.text.prvSemaphoreTest) refers to port.o(.text.vPortYield) for vPortYield
    semtest.o(.text.prvSemaphoreTest) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    semtest.o(.text.prvSemaphoreTest) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    semtest.o(.text.prvSemaphoreTest) refers to semtest.o(.bss.sNextCheckVariable) for [Anonymous Symbol]
    semtest.o(.text.prvSemaphoreTest) refers to semtest.o(.bss.sCheckVariables) for [Anonymous Symbol]
    semtest.o(.ARM.exidx.text.prvSemaphoreTest) refers to semtest.o(.text.prvSemaphoreTest) for [Anonymous Symbol]
    semtest.o(.text.xAreSemaphoreTasksStillRunning) refers to semtest.o(.bss.sCheckVariables) for [Anonymous Symbol]
    semtest.o(.text.xAreSemaphoreTasksStillRunning) refers to semtest.o(.bss.xAreSemaphoreTasksStillRunning.sLastCheckVariables) for [Anonymous Symbol]
    semtest.o(.ARM.exidx.text.xAreSemaphoreTasksStillRunning) refers to semtest.o(.text.xAreSemaphoreTasksStillRunning) for [Anonymous Symbol]
    streambufferdemo.o(.text.vStartStreamBufferTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    streambufferdemo.o(.text.vStartStreamBufferTasks) refers to stream_buffer.o(.text.xStreamBufferGenericCreate) for xStreamBufferGenericCreate
    streambufferdemo.o(.text.vStartStreamBufferTasks) refers to streambufferdemo.o(.text.prvEchoServer) for prvEchoServer
    streambufferdemo.o(.text.vStartStreamBufferTasks) refers to streambufferdemo.o(.text.prvNonBlockingReceiverTask) for prvNonBlockingReceiverTask
    streambufferdemo.o(.text.vStartStreamBufferTasks) refers to streambufferdemo.o(.text.prvNonBlockingSenderTask) for prvNonBlockingSenderTask
    streambufferdemo.o(.text.vStartStreamBufferTasks) refers to streambufferdemo.o(.text.prvInterruptTriggerLevelTest) for prvInterruptTriggerLevelTest
    streambufferdemo.o(.ARM.exidx.text.vStartStreamBufferTasks) refers to streambufferdemo.o(.text.vStartStreamBufferTasks) for [Anonymous Symbol]
    streambufferdemo.o(.text.prvEchoServer) refers to stream_buffer.o(.text.xStreamBufferGenericCreate) for xStreamBufferGenericCreate
    streambufferdemo.o(.text.prvEchoServer) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    streambufferdemo.o(.text.prvEchoServer) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    streambufferdemo.o(.text.prvEchoServer) refers to stream_buffer.o(.text.xStreamBufferReceive) for xStreamBufferReceive
    streambufferdemo.o(.text.prvEchoServer) refers to streambufferdemo.o(.text.prvCheckExpectedState) for prvCheckExpectedState
    streambufferdemo.o(.text.prvEchoServer) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    streambufferdemo.o(.text.prvEchoServer) refers to streambufferdemo.o(.text.prvSingleTaskTests) for prvSingleTaskTests
    streambufferdemo.o(.text.prvEchoServer) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    streambufferdemo.o(.text.prvEchoServer) refers to memseta.o(.text) for __aeabi_memclr
    streambufferdemo.o(.text.prvEchoServer) refers to stream_buffer.o(.text.xStreamBufferSend) for xStreamBufferSend
    streambufferdemo.o(.text.prvEchoServer) refers to streambufferdemo.o(.text.prvEchoClient) for prvEchoClient
    streambufferdemo.o(.ARM.exidx.text.prvEchoServer) refers to streambufferdemo.o(.text.prvEchoServer) for [Anonymous Symbol]
    streambufferdemo.o(.text.prvNonBlockingReceiverTask) refers to stream_buffer.o(.text.xStreamBufferReceive) for xStreamBufferReceive
    streambufferdemo.o(.text.prvNonBlockingReceiverTask) refers to memcmp.o(.text) for memcmp
    streambufferdemo.o(.text.prvNonBlockingReceiverTask) refers to streambufferdemo.o(.rodata.str1.1) for [Anonymous Symbol]
    streambufferdemo.o(.text.prvNonBlockingReceiverTask) refers to streambufferdemo.o(.bss.ulNonBlockingRxCounter) for [Anonymous Symbol]
    streambufferdemo.o(.ARM.exidx.text.prvNonBlockingReceiverTask) refers to streambufferdemo.o(.text.prvNonBlockingReceiverTask) for [Anonymous Symbol]
    streambufferdemo.o(.text.prvNonBlockingSenderTask) refers to stream_buffer.o(.text.xStreamBufferSend) for xStreamBufferSend
    streambufferdemo.o(.text.prvNonBlockingSenderTask) refers to streambufferdemo.o(.text.prvCheckExpectedState) for prvCheckExpectedState
    streambufferdemo.o(.text.prvNonBlockingSenderTask) refers to streambufferdemo.o(.rodata.str1.1) for [Anonymous Symbol]
    streambufferdemo.o(.ARM.exidx.text.prvNonBlockingSenderTask) refers to streambufferdemo.o(.text.prvNonBlockingSenderTask) for [Anonymous Symbol]
    streambufferdemo.o(.text.prvInterruptTriggerLevelTest) refers to stream_buffer.o(.text.vStreamBufferDelete) for vStreamBufferDelete
    streambufferdemo.o(.text.prvInterruptTriggerLevelTest) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    streambufferdemo.o(.text.prvInterruptTriggerLevelTest) refers to stream_buffer.o(.text.xStreamBufferGenericCreate) for xStreamBufferGenericCreate
    streambufferdemo.o(.text.prvInterruptTriggerLevelTest) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    streambufferdemo.o(.text.prvInterruptTriggerLevelTest) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    streambufferdemo.o(.text.prvInterruptTriggerLevelTest) refers to stream_buffer.o(.text.xStreamBufferReceive) for xStreamBufferReceive
    streambufferdemo.o(.text.prvInterruptTriggerLevelTest) refers to memcmp.o(.text) for memcmp
    streambufferdemo.o(.text.prvInterruptTriggerLevelTest) refers to streambufferdemo.o(.bss.xInterruptStreamBuffer) for [Anonymous Symbol]
    streambufferdemo.o(.text.prvInterruptTriggerLevelTest) refers to streambufferdemo.o(.rodata.str1.1) for [Anonymous Symbol]
    streambufferdemo.o(.text.prvInterruptTriggerLevelTest) refers to streambufferdemo.o(.bss.ulInterruptTriggerCounter) for [Anonymous Symbol]
    streambufferdemo.o(.ARM.exidx.text.prvInterruptTriggerLevelTest) refers to streambufferdemo.o(.text.prvInterruptTriggerLevelTest) for [Anonymous Symbol]
    streambufferdemo.o(.text.vPeriodicStreamBufferProcessing) refers to stream_buffer.o(.text.xStreamBufferSendFromISR) for xStreamBufferSendFromISR
    streambufferdemo.o(.text.vPeriodicStreamBufferProcessing) refers to streambufferdemo.o(.bss.xInterruptStreamBuffer) for [Anonymous Symbol]
    streambufferdemo.o(.text.vPeriodicStreamBufferProcessing) refers to streambufferdemo.o(.bss.vPeriodicStreamBufferProcessing.xNextChar) for [Anonymous Symbol]
    streambufferdemo.o(.text.vPeriodicStreamBufferProcessing) refers to streambufferdemo.o(.rodata.str1.1) for [Anonymous Symbol]
    streambufferdemo.o(.ARM.exidx.text.vPeriodicStreamBufferProcessing) refers to streambufferdemo.o(.text.vPeriodicStreamBufferProcessing) for [Anonymous Symbol]
    streambufferdemo.o(.text.xAreStreamBufferTasksStillRunning) refers to streambufferdemo.o(.bss.ulEchoLoopCounters) for [Anonymous Symbol]
    streambufferdemo.o(.text.xAreStreamBufferTasksStillRunning) refers to streambufferdemo.o(.bss.xAreStreamBufferTasksStillRunning.ulLastEchoLoopCounters) for [Anonymous Symbol]
    streambufferdemo.o(.text.xAreStreamBufferTasksStillRunning) refers to streambufferdemo.o(.bss.xErrorStatus) for [Anonymous Symbol]
    streambufferdemo.o(.text.xAreStreamBufferTasksStillRunning) refers to streambufferdemo.o(.bss.xAreStreamBufferTasksStillRunning.ulLastNonBlockingRxCounter) for [Anonymous Symbol]
    streambufferdemo.o(.text.xAreStreamBufferTasksStillRunning) refers to streambufferdemo.o(.bss.ulNonBlockingRxCounter) for [Anonymous Symbol]
    streambufferdemo.o(.text.xAreStreamBufferTasksStillRunning) refers to streambufferdemo.o(.bss.ulInterruptTriggerCounter) for [Anonymous Symbol]
    streambufferdemo.o(.text.xAreStreamBufferTasksStillRunning) refers to streambufferdemo.o(.bss.xAreStreamBufferTasksStillRunning.ulLastInterruptTriggerCounter) for [Anonymous Symbol]
    streambufferdemo.o(.ARM.exidx.text.xAreStreamBufferTasksStillRunning) refers to streambufferdemo.o(.text.xAreStreamBufferTasksStillRunning) for [Anonymous Symbol]
    streambufferdemo.o(.text.prvCheckExpectedState) refers to streambufferdemo.o(.bss.xErrorStatus) for [Anonymous Symbol]
    streambufferdemo.o(.ARM.exidx.text.prvCheckExpectedState) refers to streambufferdemo.o(.text.prvCheckExpectedState) for [Anonymous Symbol]
    streambufferdemo.o(.text.prvEchoClient) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    streambufferdemo.o(.text.prvEchoClient) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    streambufferdemo.o(.text.prvEchoClient) refers to memseta.o(.text) for __aeabi_memclr
    streambufferdemo.o(.text.prvEchoClient) refers to stream_buffer.o(.text.xStreamBufferSend) for xStreamBufferSend
    streambufferdemo.o(.text.prvEchoClient) refers to stream_buffer.o(.text.xStreamBufferReceive) for xStreamBufferReceive
    streambufferdemo.o(.text.prvEchoClient) refers to strcmp.o(.text) for strcmp
    streambufferdemo.o(.text.prvEchoClient) refers to streambufferdemo.o(.text.prvCheckExpectedState) for prvCheckExpectedState
    streambufferdemo.o(.text.prvEchoClient) refers to stream_buffer.o(.text.xStreamBufferGenericCreate) for xStreamBufferGenericCreate
    streambufferdemo.o(.text.prvEchoClient) refers to stream_buffer.o(.text.vStreamBufferDelete) for vStreamBufferDelete
    streambufferdemo.o(.text.prvEchoClient) refers to streambufferdemo.o(.bss.ulEchoLoopCounters) for [Anonymous Symbol]
    streambufferdemo.o(.ARM.exidx.text.prvEchoClient) refers to streambufferdemo.o(.text.prvEchoClient) for [Anonymous Symbol]
    streambufferdemo.o(.text.prvSingleTaskTests) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    streambufferdemo.o(.text.prvSingleTaskTests) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    streambufferdemo.o(.text.prvSingleTaskTests) refers to streambufferdemo.o(.text.prvCheckExpectedState) for prvCheckExpectedState
    streambufferdemo.o(.text.prvSingleTaskTests) refers to stream_buffer.o(.text.xStreamBufferBytesAvailable) for xStreamBufferBytesAvailable
    streambufferdemo.o(.text.prvSingleTaskTests) refers to stream_buffer.o(.text.xStreamBufferIsEmpty) for xStreamBufferIsEmpty
    streambufferdemo.o(.text.prvSingleTaskTests) refers to stream_buffer.o(.text.xStreamBufferIsFull) for xStreamBufferIsFull
    streambufferdemo.o(.text.prvSingleTaskTests) refers to stream_buffer.o(.text.xStreamBufferSend) for xStreamBufferSend
    streambufferdemo.o(.text.prvSingleTaskTests) refers to stream_buffer.o(.text.xStreamBufferReceive) for xStreamBufferReceive
    streambufferdemo.o(.text.prvSingleTaskTests) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    streambufferdemo.o(.text.prvSingleTaskTests) refers to stream_buffer.o(.text.xStreamBufferSendFromISR) for xStreamBufferSendFromISR
    streambufferdemo.o(.text.prvSingleTaskTests) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    streambufferdemo.o(.text.prvSingleTaskTests) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    streambufferdemo.o(.text.prvSingleTaskTests) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    streambufferdemo.o(.text.prvSingleTaskTests) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    streambufferdemo.o(.text.prvSingleTaskTests) refers to stream_buffer.o(.text.xStreamBufferReceiveFromISR) for xStreamBufferReceiveFromISR
    streambufferdemo.o(.text.prvSingleTaskTests) refers to memcmp.o(.text) for memcmp
    streambufferdemo.o(.text.prvSingleTaskTests) refers to memseta.o(.text) for __aeabi_memset
    streambufferdemo.o(.text.prvSingleTaskTests) refers to heap_4.o(.text.vPortFree) for vPortFree
    streambufferdemo.o(.text.prvSingleTaskTests) refers to stream_buffer.o(.text.xStreamBufferReset) for xStreamBufferReset
    streambufferdemo.o(.text.prvSingleTaskTests) refers to streambufferdemo.o(.rodata.str1.1) for [Anonymous Symbol]
    streambufferdemo.o(.ARM.exidx.text.prvSingleTaskTests) refers to streambufferdemo.o(.text.prvSingleTaskTests) for [Anonymous Symbol]
    streambufferinterrupt.o(.text.vStartStreamBufferInterruptDemo) refers to stream_buffer.o(.text.xStreamBufferGenericCreate) for xStreamBufferGenericCreate
    streambufferinterrupt.o(.text.vStartStreamBufferInterruptDemo) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    streambufferinterrupt.o(.text.vStartStreamBufferInterruptDemo) refers to streambufferinterrupt.o(.bss.xStreamBuffer) for [Anonymous Symbol]
    streambufferinterrupt.o(.text.vStartStreamBufferInterruptDemo) refers to streambufferinterrupt.o(.text.prvReceivingTask) for prvReceivingTask
    streambufferinterrupt.o(.ARM.exidx.text.vStartStreamBufferInterruptDemo) refers to streambufferinterrupt.o(.text.vStartStreamBufferInterruptDemo) for [Anonymous Symbol]
    streambufferinterrupt.o(.text.prvReceivingTask) refers to stream_buffer.o(.text.xStreamBufferReceive) for xStreamBufferReceive
    streambufferinterrupt.o(.text.prvReceivingTask) refers to memcmp.o(.text) for memcmp
    streambufferinterrupt.o(.text.prvReceivingTask) refers to streambufferinterrupt.o(.bss.xStreamBuffer) for [Anonymous Symbol]
    streambufferinterrupt.o(.text.prvReceivingTask) refers to streambufferinterrupt.o(.bss.xDemoStatus) for [Anonymous Symbol]
    streambufferinterrupt.o(.text.prvReceivingTask) refers to streambufferinterrupt.o(.bss.ulCycleCount) for [Anonymous Symbol]
    streambufferinterrupt.o(.ARM.exidx.text.prvReceivingTask) refers to streambufferinterrupt.o(.text.prvReceivingTask) for [Anonymous Symbol]
    streambufferinterrupt.o(.text.vBasicStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSendFromISR) for xStreamBufferSendFromISR
    streambufferinterrupt.o(.text.vBasicStreamBufferSendFromISR) refers to streambufferinterrupt.o(.bss.vBasicStreamBufferSendFromISR.xCallCount) for [Anonymous Symbol]
    streambufferinterrupt.o(.text.vBasicStreamBufferSendFromISR) refers to streambufferinterrupt.o(.bss.vBasicStreamBufferSendFromISR.xNextByteToSend) for [Anonymous Symbol]
    streambufferinterrupt.o(.text.vBasicStreamBufferSendFromISR) refers to streambufferinterrupt.o(.bss.xStreamBuffer) for [Anonymous Symbol]
    streambufferinterrupt.o(.ARM.exidx.text.vBasicStreamBufferSendFromISR) refers to streambufferinterrupt.o(.text.vBasicStreamBufferSendFromISR) for [Anonymous Symbol]
    streambufferinterrupt.o(.text.xIsInterruptStreamBufferDemoStillRunning) refers to streambufferinterrupt.o(.bss.ulCycleCount) for [Anonymous Symbol]
    streambufferinterrupt.o(.text.xIsInterruptStreamBufferDemoStillRunning) refers to streambufferinterrupt.o(.bss.xDemoStatus) for [Anonymous Symbol]
    streambufferinterrupt.o(.ARM.exidx.text.xIsInterruptStreamBufferDemoStillRunning) refers to streambufferinterrupt.o(.text.xIsInterruptStreamBufferDemoStillRunning) for [Anonymous Symbol]
    tasknotify.o(.text.vStartTaskNotifyTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasknotify.o(.text.vStartTaskNotifyTask) refers to tasknotify.o(.bss.xTaskToNotify) for [Anonymous Symbol]
    tasknotify.o(.text.vStartTaskNotifyTask) refers to tasknotify.o(.text.prvNotifiedTask) for prvNotifiedTask
    tasknotify.o(.text.vStartTaskNotifyTask) refers to tasknotify.o(.bss.uxNextRand) for [Anonymous Symbol]
    tasknotify.o(.text.vStartTaskNotifyTask) refers to tasknotify.o(.text.prvRand) for prvRand
    tasknotify.o(.ARM.exidx.text.vStartTaskNotifyTask) refers to tasknotify.o(.text.vStartTaskNotifyTask) for [Anonymous Symbol]
    tasknotify.o(.text.prvNotifiedTask) refers to tasknotify.o(.text.prvSingleTaskTests) for prvSingleTaskTests
    tasknotify.o(.text.prvNotifiedTask) refers to timers.o(.text.xTimerCreate) for xTimerCreate
    tasknotify.o(.text.prvNotifiedTask) refers to tasks.o(.text.ulTaskGenericNotifyTake) for ulTaskGenericNotifyTake
    tasknotify.o(.text.prvNotifiedTask) refers to tasknotify.o(.text.prvRand) for prvRand
    tasknotify.o(.text.prvNotifiedTask) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    tasknotify.o(.text.prvNotifiedTask) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    tasknotify.o(.text.prvNotifiedTask) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    tasknotify.o(.text.prvNotifiedTask) refers to tasknotify.o(.text.prvNotifyingTimer) for prvNotifyingTimer
    tasknotify.o(.text.prvNotifiedTask) refers to tasknotify.o(.bss.xTimer) for [Anonymous Symbol]
    tasknotify.o(.text.prvNotifiedTask) refers to tasknotify.o(.bss.ulTimerNotificationsReceived) for [Anonymous Symbol]
    tasknotify.o(.text.prvNotifiedTask) refers to tasknotify.o(.bss.ulNotifyCycleCount) for [Anonymous Symbol]
    tasknotify.o(.text.prvNotifiedTask) refers to tasknotify.o(.bss.xTaskToNotify) for [Anonymous Symbol]
    tasknotify.o(.ARM.exidx.text.prvNotifiedTask) refers to tasknotify.o(.text.prvNotifiedTask) for [Anonymous Symbol]
    tasknotify.o(.text.prvRand) refers to tasknotify.o(.bss.uxNextRand) for [Anonymous Symbol]
    tasknotify.o(.ARM.exidx.text.prvRand) refers to tasknotify.o(.text.prvRand) for [Anonymous Symbol]
    tasknotify.o(.text.xNotifyTaskFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for vTaskGenericNotifyGiveFromISR
    tasknotify.o(.text.xNotifyTaskFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    tasknotify.o(.text.xNotifyTaskFromISR) refers to tasknotify.o(.bss.xTimer) for [Anonymous Symbol]
    tasknotify.o(.text.xNotifyTaskFromISR) refers to tasknotify.o(.bss.xNotifyTaskFromISR.xCallCount) for [Anonymous Symbol]
    tasknotify.o(.text.xNotifyTaskFromISR) refers to tasknotify.o(.bss.xNotifyTaskFromISR.xAPIToUse) for [Anonymous Symbol]
    tasknotify.o(.text.xNotifyTaskFromISR) refers to tasknotify.o(.bss.xTaskToNotify) for [Anonymous Symbol]
    tasknotify.o(.text.xNotifyTaskFromISR) refers to tasknotify.o(.bss.ulTimerNotificationsSent) for [Anonymous Symbol]
    tasknotify.o(.ARM.exidx.text.xNotifyTaskFromISR) refers to tasknotify.o(.text.xNotifyTaskFromISR) for [Anonymous Symbol]
    tasknotify.o(.text.xAreTaskNotificationTasksStillRunning) refers to tasknotify.o(.bss.ulNotifyCycleCount) for [Anonymous Symbol]
    tasknotify.o(.text.xAreTaskNotificationTasksStillRunning) refers to tasknotify.o(.bss.xAreTaskNotificationTasksStillRunning.ulLastNotifyCycleCount) for [Anonymous Symbol]
    tasknotify.o(.text.xAreTaskNotificationTasksStillRunning) refers to tasknotify.o(.bss.xErrorStatus) for [Anonymous Symbol]
    tasknotify.o(.text.xAreTaskNotificationTasksStillRunning) refers to tasknotify.o(.bss.ulTimerNotificationsReceived) for [Anonymous Symbol]
    tasknotify.o(.text.xAreTaskNotificationTasksStillRunning) refers to tasknotify.o(.bss.ulTimerNotificationsSent) for [Anonymous Symbol]
    tasknotify.o(.ARM.exidx.text.xAreTaskNotificationTasksStillRunning) refers to tasknotify.o(.text.xAreTaskNotificationTasksStillRunning) for [Anonymous Symbol]
    tasknotify.o(.text.prvSingleTaskTests) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    tasknotify.o(.text.prvSingleTaskTests) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    tasknotify.o(.text.prvSingleTaskTests) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    tasknotify.o(.text.prvSingleTaskTests) refers to timers.o(.text.xTimerCreate) for xTimerCreate
    tasknotify.o(.text.prvSingleTaskTests) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    tasknotify.o(.text.prvSingleTaskTests) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    tasknotify.o(.text.prvSingleTaskTests) refers to tasknotify.o(.bss.xErrorStatus) for [Anonymous Symbol]
    tasknotify.o(.text.prvSingleTaskTests) refers to tasknotify.o(.bss.xTaskToNotify) for [Anonymous Symbol]
    tasknotify.o(.text.prvSingleTaskTests) refers to tasknotify.o(.bss.ulNotifyCycleCount) for [Anonymous Symbol]
    tasknotify.o(.text.prvSingleTaskTests) refers to tasknotify.o(.text.prvSuspendedTaskTimerTestCallback) for prvSuspendedTaskTimerTestCallback
    tasknotify.o(.ARM.exidx.text.prvSingleTaskTests) refers to tasknotify.o(.text.prvSingleTaskTests) for [Anonymous Symbol]
    tasknotify.o(.text.prvNotifyingTimer) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    tasknotify.o(.text.prvNotifyingTimer) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasknotify.o(.text.prvNotifyingTimer) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasknotify.o(.text.prvNotifyingTimer) refers to tasknotify.o(.bss.xTaskToNotify) for [Anonymous Symbol]
    tasknotify.o(.text.prvNotifyingTimer) refers to tasknotify.o(.bss.ulTimerNotificationsSent) for [Anonymous Symbol]
    tasknotify.o(.ARM.exidx.text.prvNotifyingTimer) refers to tasknotify.o(.text.prvNotifyingTimer) for [Anonymous Symbol]
    tasknotify.o(.text.prvSuspendedTaskTimerTestCallback) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    tasknotify.o(.text.prvSuspendedTaskTimerTestCallback) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    tasknotify.o(.text.prvSuspendedTaskTimerTestCallback) refers to tasks.o(.text.vTaskResume) for vTaskResume
    tasknotify.o(.text.prvSuspendedTaskTimerTestCallback) refers to tasknotify.o(.bss.prvSuspendedTaskTimerTestCallback.ulCallCount) for [Anonymous Symbol]
    tasknotify.o(.text.prvSuspendedTaskTimerTestCallback) refers to tasknotify.o(.bss.xTaskToNotify) for [Anonymous Symbol]
    tasknotify.o(.ARM.exidx.text.prvSuspendedTaskTimerTestCallback) refers to tasknotify.o(.text.prvSuspendedTaskTimerTestCallback) for [Anonymous Symbol]
    tasknotifyarray.o(.text.vStartTaskNotifyArrayTask) refers to timers.o(.text.xTimerCreate) for xTimerCreate
    tasknotifyarray.o(.text.vStartTaskNotifyArrayTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasknotifyarray.o(.text.vStartTaskNotifyArrayTask) refers to tasknotifyarray.o(.text.prvSuspendedTaskTimerTestCallback) for prvSuspendedTaskTimerTestCallback
    tasknotifyarray.o(.text.vStartTaskNotifyArrayTask) refers to tasknotifyarray.o(.bss.xNotifyWhileSuspendedTimer) for [Anonymous Symbol]
    tasknotifyarray.o(.text.vStartTaskNotifyArrayTask) refers to tasknotifyarray.o(.text.prvNotifyingTimerCallback) for prvNotifyingTimerCallback
    tasknotifyarray.o(.text.vStartTaskNotifyArrayTask) refers to tasknotifyarray.o(.bss.xIncrementingIndexTimer) for [Anonymous Symbol]
    tasknotifyarray.o(.text.vStartTaskNotifyArrayTask) refers to tasknotifyarray.o(.bss.xTaskToNotify) for [Anonymous Symbol]
    tasknotifyarray.o(.text.vStartTaskNotifyArrayTask) refers to tasknotifyarray.o(.text.prvNotifiedTask) for prvNotifiedTask
    tasknotifyarray.o(.text.vStartTaskNotifyArrayTask) refers to tasknotifyarray.o(.bss.uxNextRand) for [Anonymous Symbol]
    tasknotifyarray.o(.text.vStartTaskNotifyArrayTask) refers to tasknotifyarray.o(.text.prvRand) for prvRand
    tasknotifyarray.o(.ARM.exidx.text.vStartTaskNotifyArrayTask) refers to tasknotifyarray.o(.text.vStartTaskNotifyArrayTask) for [Anonymous Symbol]
    tasknotifyarray.o(.text.prvSuspendedTaskTimerTestCallback) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    tasknotifyarray.o(.text.prvSuspendedTaskTimerTestCallback) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    tasknotifyarray.o(.text.prvSuspendedTaskTimerTestCallback) refers to tasks.o(.text.vTaskResume) for vTaskResume
    tasknotifyarray.o(.text.prvSuspendedTaskTimerTestCallback) refers to tasknotifyarray.o(.bss.prvSuspendedTaskTimerTestCallback.ulCallCount) for [Anonymous Symbol]
    tasknotifyarray.o(.text.prvSuspendedTaskTimerTestCallback) refers to tasknotifyarray.o(.bss.xTaskToNotify) for [Anonymous Symbol]
    tasknotifyarray.o(.text.prvSuspendedTaskTimerTestCallback) refers to tasknotifyarray.o(.bss.prvSuspendedTaskTimerTestCallback.uxIndexToNotify) for [Anonymous Symbol]
    tasknotifyarray.o(.ARM.exidx.text.prvSuspendedTaskTimerTestCallback) refers to tasknotifyarray.o(.text.prvSuspendedTaskTimerTestCallback) for [Anonymous Symbol]
    tasknotifyarray.o(.text.prvNotifyingTimerCallback) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    tasknotifyarray.o(.text.prvNotifyingTimerCallback) refers to tasknotifyarray.o(.bss.prvNotifyingTimerCallback.uxIndexToNotify) for [Anonymous Symbol]
    tasknotifyarray.o(.text.prvNotifyingTimerCallback) refers to tasknotifyarray.o(.bss.xTaskToNotify) for [Anonymous Symbol]
    tasknotifyarray.o(.ARM.exidx.text.prvNotifyingTimerCallback) refers to tasknotifyarray.o(.text.prvNotifyingTimerCallback) for [Anonymous Symbol]
    tasknotifyarray.o(.text.prvNotifiedTask) refers to tasknotifyarray.o(.text.prvSingleTaskTests) for prvSingleTaskTests
    tasknotifyarray.o(.text.prvNotifiedTask) refers to tasknotifyarray.o(.text.prvTestNotifyTaskWhileSuspended) for prvTestNotifyTaskWhileSuspended
    tasknotifyarray.o(.text.prvNotifiedTask) refers to tasknotifyarray.o(.text.prvBlockOnTheNotifiedIndexed) for prvBlockOnTheNotifiedIndexed
    tasknotifyarray.o(.text.prvNotifiedTask) refers to tasknotifyarray.o(.text.prvBlockOnANonNotifiedIndexed) for prvBlockOnANonNotifiedIndexed
    tasknotifyarray.o(.text.prvNotifiedTask) refers to tasknotifyarray.o(.text.prvBlockOnNotificationsComingFromInterrupts) for prvBlockOnNotificationsComingFromInterrupts
    tasknotifyarray.o(.text.prvNotifiedTask) refers to tasknotifyarray.o(.bss.ulCourseCycleCounter) for [Anonymous Symbol]
    tasknotifyarray.o(.ARM.exidx.text.prvNotifiedTask) refers to tasknotifyarray.o(.text.prvNotifiedTask) for [Anonymous Symbol]
    tasknotifyarray.o(.text.prvRand) refers to tasknotifyarray.o(.bss.uxNextRand) for [Anonymous Symbol]
    tasknotifyarray.o(.ARM.exidx.text.prvRand) refers to tasknotifyarray.o(.text.prvRand) for [Anonymous Symbol]
    tasknotifyarray.o(.text.xNotifyArrayTaskFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for vTaskGenericNotifyGiveFromISR
    tasknotifyarray.o(.text.xNotifyArrayTaskFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    tasknotifyarray.o(.text.xNotifyArrayTaskFromISR) refers to tasknotifyarray.o(.bss.xSendNotificationFromISR) for [Anonymous Symbol]
    tasknotifyarray.o(.text.xNotifyArrayTaskFromISR) refers to tasknotifyarray.o(.bss.xNotifyArrayTaskFromISR.xAPIToUse) for [Anonymous Symbol]
    tasknotifyarray.o(.text.xNotifyArrayTaskFromISR) refers to tasknotifyarray.o(.bss.xTaskToNotify) for [Anonymous Symbol]
    tasknotifyarray.o(.text.xNotifyArrayTaskFromISR) refers to tasknotifyarray.o(.bss.xNotifyArrayTaskFromISR.uxIndexToNotify) for [Anonymous Symbol]
    tasknotifyarray.o(.ARM.exidx.text.xNotifyArrayTaskFromISR) refers to tasknotifyarray.o(.text.xNotifyArrayTaskFromISR) for [Anonymous Symbol]
    tasknotifyarray.o(.text.xAreTaskNotificationArrayTasksStillRunning) refers to tasknotifyarray.o(.bss.ulFineCycleCount) for [Anonymous Symbol]
    tasknotifyarray.o(.text.xAreTaskNotificationArrayTasksStillRunning) refers to tasknotifyarray.o(.bss.xAreTaskNotificationArrayTasksStillRunning.ulLastFineCycleCount) for [Anonymous Symbol]
    tasknotifyarray.o(.text.xAreTaskNotificationArrayTasksStillRunning) refers to tasknotifyarray.o(.bss.xAreTaskNotificationArrayTasksStillRunning.xErrorStatus) for [Anonymous Symbol]
    tasknotifyarray.o(.text.xAreTaskNotificationArrayTasksStillRunning) refers to tasknotifyarray.o(.bss.xAreTaskNotificationArrayTasksStillRunning.ulCallCount) for [Anonymous Symbol]
    tasknotifyarray.o(.text.xAreTaskNotificationArrayTasksStillRunning) refers to tasknotifyarray.o(.bss.xAreTaskNotificationArrayTasksStillRunning.ulLastCourseCycleCount) for [Anonymous Symbol]
    tasknotifyarray.o(.text.xAreTaskNotificationArrayTasksStillRunning) refers to tasknotifyarray.o(.bss.ulCourseCycleCounter) for [Anonymous Symbol]
    tasknotifyarray.o(.ARM.exidx.text.xAreTaskNotificationArrayTasksStillRunning) refers to tasknotifyarray.o(.text.xAreTaskNotificationArrayTasksStillRunning) for [Anonymous Symbol]
    tasknotifyarray.o(.text.prvSingleTaskTests) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    tasknotifyarray.o(.text.prvSingleTaskTests) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    tasknotifyarray.o(.text.prvSingleTaskTests) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    tasknotifyarray.o(.text.prvSingleTaskTests) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    tasknotifyarray.o(.text.prvSingleTaskTests) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for ulTaskGenericNotifyValueClear
    tasknotifyarray.o(.text.prvSingleTaskTests) refers to tasknotifyarray.o(.bss.xTaskToNotify) for [Anonymous Symbol]
    tasknotifyarray.o(.text.prvSingleTaskTests) refers to tasknotifyarray.o(.bss.ulFineCycleCount) for [Anonymous Symbol]
    tasknotifyarray.o(.ARM.exidx.text.prvSingleTaskTests) refers to tasknotifyarray.o(.text.prvSingleTaskTests) for [Anonymous Symbol]
    tasknotifyarray.o(.text.prvTestNotifyTaskWhileSuspended) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    tasknotifyarray.o(.text.prvTestNotifyTaskWhileSuspended) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    tasknotifyarray.o(.text.prvTestNotifyTaskWhileSuspended) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    tasknotifyarray.o(.text.prvTestNotifyTaskWhileSuspended) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    tasknotifyarray.o(.text.prvTestNotifyTaskWhileSuspended) refers to tasknotifyarray.o(.bss.xNotifyWhileSuspendedTimer) for [Anonymous Symbol]
    tasknotifyarray.o(.text.prvTestNotifyTaskWhileSuspended) refers to tasknotifyarray.o(.bss.ulFineCycleCount) for [Anonymous Symbol]
    tasknotifyarray.o(.ARM.exidx.text.prvTestNotifyTaskWhileSuspended) refers to tasknotifyarray.o(.text.prvTestNotifyTaskWhileSuspended) for [Anonymous Symbol]
    tasknotifyarray.o(.text.prvBlockOnTheNotifiedIndexed) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    tasknotifyarray.o(.text.prvBlockOnTheNotifiedIndexed) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    tasknotifyarray.o(.text.prvBlockOnTheNotifiedIndexed) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    tasknotifyarray.o(.text.prvBlockOnTheNotifiedIndexed) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    tasknotifyarray.o(.text.prvBlockOnTheNotifiedIndexed) refers to tasks.o(.text.ulTaskGenericNotifyTake) for ulTaskGenericNotifyTake
    tasknotifyarray.o(.text.prvBlockOnTheNotifiedIndexed) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    tasknotifyarray.o(.text.prvBlockOnTheNotifiedIndexed) refers to tasknotifyarray.o(.bss.xTaskToNotify) for [Anonymous Symbol]
    tasknotifyarray.o(.text.prvBlockOnTheNotifiedIndexed) refers to tasknotifyarray.o(.bss.xIncrementingIndexTimer) for [Anonymous Symbol]
    tasknotifyarray.o(.text.prvBlockOnTheNotifiedIndexed) refers to tasknotifyarray.o(.bss.ulFineCycleCount) for [Anonymous Symbol]
    tasknotifyarray.o(.ARM.exidx.text.prvBlockOnTheNotifiedIndexed) refers to tasknotifyarray.o(.text.prvBlockOnTheNotifiedIndexed) for [Anonymous Symbol]
    tasknotifyarray.o(.text.prvBlockOnANonNotifiedIndexed) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for ulTaskGenericNotifyValueClear
    tasknotifyarray.o(.text.prvBlockOnANonNotifiedIndexed) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    tasknotifyarray.o(.text.prvBlockOnANonNotifiedIndexed) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    tasknotifyarray.o(.text.prvBlockOnANonNotifiedIndexed) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    tasknotifyarray.o(.text.prvBlockOnANonNotifiedIndexed) refers to tasknotifyarray.o(.bss.xTaskToNotify) for [Anonymous Symbol]
    tasknotifyarray.o(.text.prvBlockOnANonNotifiedIndexed) refers to tasknotifyarray.o(.bss.xIncrementingIndexTimer) for [Anonymous Symbol]
    tasknotifyarray.o(.text.prvBlockOnANonNotifiedIndexed) refers to tasknotifyarray.o(.bss.ulFineCycleCount) for [Anonymous Symbol]
    tasknotifyarray.o(.ARM.exidx.text.prvBlockOnANonNotifiedIndexed) refers to tasknotifyarray.o(.text.prvBlockOnANonNotifiedIndexed) for [Anonymous Symbol]
    tasknotifyarray.o(.text.prvBlockOnNotificationsComingFromInterrupts) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    tasknotifyarray.o(.text.prvBlockOnNotificationsComingFromInterrupts) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    tasknotifyarray.o(.text.prvBlockOnNotificationsComingFromInterrupts) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasknotifyarray.o(.text.prvBlockOnNotificationsComingFromInterrupts) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasknotifyarray.o(.text.prvBlockOnNotificationsComingFromInterrupts) refers to tasks.o(.text.ulTaskGenericNotifyTake) for ulTaskGenericNotifyTake
    tasknotifyarray.o(.text.prvBlockOnNotificationsComingFromInterrupts) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    tasknotifyarray.o(.text.prvBlockOnNotificationsComingFromInterrupts) refers to tasknotifyarray.o(.bss.xTaskToNotify) for [Anonymous Symbol]
    tasknotifyarray.o(.text.prvBlockOnNotificationsComingFromInterrupts) refers to tasknotifyarray.o(.bss.xSendNotificationFromISR) for [Anonymous Symbol]
    tasknotifyarray.o(.text.prvBlockOnNotificationsComingFromInterrupts) refers to tasknotifyarray.o(.bss.ulFineCycleCount) for [Anonymous Symbol]
    tasknotifyarray.o(.ARM.exidx.text.prvBlockOnNotificationsComingFromInterrupts) refers to tasknotifyarray.o(.text.prvBlockOnNotificationsComingFromInterrupts) for [Anonymous Symbol]
    timerdemo.o(.text.vStartTimerDemoTask) refers to timerdemo.o(.text.prvTest1_CreateTimersWithoutSchedulerRunning) for prvTest1_CreateTimersWithoutSchedulerRunning
    timerdemo.o(.text.vStartTimerDemoTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timerdemo.o(.text.vStartTimerDemoTask) refers to timerdemo.o(.bss.ucAutoReloadTimerCounters) for [Anonymous Symbol]
    timerdemo.o(.text.vStartTimerDemoTask) refers to timerdemo.o(.bss.xAutoReloadTimers) for [Anonymous Symbol]
    timerdemo.o(.text.vStartTimerDemoTask) refers to timerdemo.o(.bss.xBasePeriod) for [Anonymous Symbol]
    timerdemo.o(.text.vStartTimerDemoTask) refers to timerdemo.o(.data.xTestStatus) for [Anonymous Symbol]
    timerdemo.o(.text.vStartTimerDemoTask) refers to timerdemo.o(.text.prvTimerTestTask) for prvTimerTestTask
    timerdemo.o(.ARM.exidx.text.vStartTimerDemoTask) refers to timerdemo.o(.text.vStartTimerDemoTask) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest1_CreateTimersWithoutSchedulerRunning) refers to timers.o(.text.xTimerCreate) for xTimerCreate
    timerdemo.o(.text.prvTest1_CreateTimersWithoutSchedulerRunning) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timerdemo.o(.text.prvTest1_CreateTimersWithoutSchedulerRunning) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timerdemo.o(.text.prvTest1_CreateTimersWithoutSchedulerRunning) refers to timerdemo.o(.bss.xAutoReloadTimers) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest1_CreateTimersWithoutSchedulerRunning) refers to timerdemo.o(.bss.xBasePeriod) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest1_CreateTimersWithoutSchedulerRunning) refers to timerdemo.o(.text.prvAutoReloadTimerCallback) for prvAutoReloadTimerCallback
    timerdemo.o(.text.prvTest1_CreateTimersWithoutSchedulerRunning) refers to timerdemo.o(.rodata.str1.1) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest1_CreateTimersWithoutSchedulerRunning) refers to timerdemo.o(.data.xTestStatus) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest1_CreateTimersWithoutSchedulerRunning) refers to timerdemo.o(.text.prvISRAutoReloadTimerCallback) for prvISRAutoReloadTimerCallback
    timerdemo.o(.text.prvTest1_CreateTimersWithoutSchedulerRunning) refers to timerdemo.o(.bss.xISRAutoReloadTimer) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest1_CreateTimersWithoutSchedulerRunning) refers to timerdemo.o(.text.prvISROneShotTimerCallback) for prvISROneShotTimerCallback
    timerdemo.o(.text.prvTest1_CreateTimersWithoutSchedulerRunning) refers to timerdemo.o(.bss.xISROneShotTimer) for [Anonymous Symbol]
    timerdemo.o(.ARM.exidx.text.prvTest1_CreateTimersWithoutSchedulerRunning) refers to timerdemo.o(.text.prvTest1_CreateTimersWithoutSchedulerRunning) for [Anonymous Symbol]
    timerdemo.o(.text.prvTimerTestTask) refers to timers.o(.text.xTimerCreate) for xTimerCreate
    timerdemo.o(.text.prvTimerTestTask) refers to timers.o(.text.vTimerSetReloadMode) for vTimerSetReloadMode
    timerdemo.o(.text.prvTimerTestTask) refers to timerdemo.o(.text.prvTest2_CheckTaskAndTimersInitialState) for prvTest2_CheckTaskAndTimersInitialState
    timerdemo.o(.text.prvTimerTestTask) refers to timerdemo.o(.text.prvResetStartConditionsForNextIteration) for prvResetStartConditionsForNextIteration
    timerdemo.o(.text.prvTimerTestTask) refers to timerdemo.o(.text.prvTest3_CheckAutoReloadExpireRates) for prvTest3_CheckAutoReloadExpireRates
    timerdemo.o(.text.prvTimerTestTask) refers to timerdemo.o(.text.prvTest4_CheckAutoReloadTimersCanBeStopped) for prvTest4_CheckAutoReloadTimersCanBeStopped
    timerdemo.o(.text.prvTimerTestTask) refers to timerdemo.o(.text.prvTest5_CheckBasicOneShotTimerBehaviour) for prvTest5_CheckBasicOneShotTimerBehaviour
    timerdemo.o(.text.prvTimerTestTask) refers to timerdemo.o(.text.prvTest6_CheckAutoReloadResetBehaviour) for prvTest6_CheckAutoReloadResetBehaviour
    timerdemo.o(.text.prvTimerTestTask) refers to timerdemo.o(.text.prvTest7_CheckBacklogBehaviour) for prvTest7_CheckBacklogBehaviour
    timerdemo.o(.text.prvTimerTestTask) refers to timerdemo.o(.bss.xBasePeriod) for [Anonymous Symbol]
    timerdemo.o(.text.prvTimerTestTask) refers to timerdemo.o(.text.prvOneShotTimerCallback) for prvOneShotTimerCallback
    timerdemo.o(.text.prvTimerTestTask) refers to timerdemo.o(.bss.xOneShotTimer) for [Anonymous Symbol]
    timerdemo.o(.text.prvTimerTestTask) refers to timerdemo.o(.data.xTestStatus) for [Anonymous Symbol]
    timerdemo.o(.text.prvTimerTestTask) refers to timerdemo.o(.bss.ucIsBacklogDemoEnabled) for [Anonymous Symbol]
    timerdemo.o(.ARM.exidx.text.prvTimerTestTask) refers to timerdemo.o(.text.prvTimerTestTask) for [Anonymous Symbol]
    timerdemo.o(.text.vTimerDemoIncludeBacklogTests) refers to timerdemo.o(.bss.ucIsBacklogDemoEnabled) for [Anonymous Symbol]
    timerdemo.o(.ARM.exidx.text.vTimerDemoIncludeBacklogTests) refers to timerdemo.o(.text.vTimerDemoIncludeBacklogTests) for [Anonymous Symbol]
    timerdemo.o(.text.xAreTimerDemoTasksStillRunning) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    timerdemo.o(.text.xAreTimerDemoTasksStillRunning) refers to timerdemo.o(.bss.xAreTimerDemoTasksStillRunning.xLastCycleFrequency) for [Anonymous Symbol]
    timerdemo.o(.text.xAreTimerDemoTasksStillRunning) refers to timerdemo.o(.bss.xAreTimerDemoTasksStillRunning.xIterationsWithoutCounterIncrement) for [Anonymous Symbol]
    timerdemo.o(.text.xAreTimerDemoTasksStillRunning) refers to timerdemo.o(.bss.xBasePeriod) for [Anonymous Symbol]
    timerdemo.o(.text.xAreTimerDemoTasksStillRunning) refers to timerdemo.o(.bss.xAreTimerDemoTasksStillRunning.ulLastLoopCounter) for [Anonymous Symbol]
    timerdemo.o(.text.xAreTimerDemoTasksStillRunning) refers to timerdemo.o(.bss.ulLoopCounter) for [Anonymous Symbol]
    timerdemo.o(.text.xAreTimerDemoTasksStillRunning) refers to timerdemo.o(.data.xTestStatus) for [Anonymous Symbol]
    timerdemo.o(.ARM.exidx.text.xAreTimerDemoTasksStillRunning) refers to timerdemo.o(.text.xAreTimerDemoTasksStillRunning) for [Anonymous Symbol]
    timerdemo.o(.text.vTimerPeriodicISRTests) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timerdemo.o(.text.vTimerPeriodicISRTests) refers to tasks.o(.text.xTaskGetTickCountFromISR) for xTaskGetTickCountFromISR
    timerdemo.o(.text.vTimerPeriodicISRTests) refers to timerdemo.o(.data.vTimerPeriodicISRTests.uxTick) for [Anonymous Symbol]
    timerdemo.o(.text.vTimerPeriodicISRTests) refers to timerdemo.o(.bss.xBasePeriod) for [Anonymous Symbol]
    timerdemo.o(.text.vTimerPeriodicISRTests) refers to timerdemo.o(.bss.ucISRAutoReloadTimerCounter) for [Anonymous Symbol]
    timerdemo.o(.text.vTimerPeriodicISRTests) refers to timerdemo.o(.data.xTestStatus) for [Anonymous Symbol]
    timerdemo.o(.text.vTimerPeriodicISRTests) refers to timerdemo.o(.bss.ucISROneShotTimerCounter) for [Anonymous Symbol]
    timerdemo.o(.text.vTimerPeriodicISRTests) refers to timerdemo.o(.bss.xISROneShotTimer) for [Anonymous Symbol]
    timerdemo.o(.text.vTimerPeriodicISRTests) refers to timerdemo.o(.bss.xISRAutoReloadTimer) for [Anonymous Symbol]
    timerdemo.o(.ARM.exidx.text.vTimerPeriodicISRTests) refers to timerdemo.o(.text.vTimerPeriodicISRTests) for [Anonymous Symbol]
    timerdemo.o(.text.prvOneShotTimerCallback) refers to timers.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    timerdemo.o(.text.prvOneShotTimerCallback) refers to timers.o(.text.vTimerSetTimerID) for vTimerSetTimerID
    timerdemo.o(.text.prvOneShotTimerCallback) refers to timerdemo.o(.bss.prvOneShotTimerCallback.uxCallCount) for [Anonymous Symbol]
    timerdemo.o(.text.prvOneShotTimerCallback) refers to timerdemo.o(.bss.ucOneShotTimerCounter) for [Anonymous Symbol]
    timerdemo.o(.ARM.exidx.text.prvOneShotTimerCallback) refers to timerdemo.o(.text.prvOneShotTimerCallback) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest2_CheckTaskAndTimersInitialState) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    timerdemo.o(.text.prvTest2_CheckTaskAndTimersInitialState) refers to timerdemo.o(.bss.xAutoReloadTimers) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest2_CheckTaskAndTimersInitialState) refers to timerdemo.o(.data.xTestStatus) for [Anonymous Symbol]
    timerdemo.o(.ARM.exidx.text.prvTest2_CheckTaskAndTimersInitialState) refers to timerdemo.o(.text.prvTest2_CheckTaskAndTimersInitialState) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest3_CheckAutoReloadExpireRates) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    timerdemo.o(.text.prvTest3_CheckAutoReloadExpireRates) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    timerdemo.o(.text.prvTest3_CheckAutoReloadExpireRates) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    timerdemo.o(.text.prvTest3_CheckAutoReloadExpireRates) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    timerdemo.o(.text.prvTest3_CheckAutoReloadExpireRates) refers to timerdemo.o(.bss.xBasePeriod) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest3_CheckAutoReloadExpireRates) refers to timerdemo.o(.bss.ucAutoReloadTimerCounters) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest3_CheckAutoReloadExpireRates) refers to timerdemo.o(.data.xTestStatus) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest3_CheckAutoReloadExpireRates) refers to timerdemo.o(.bss.ulLoopCounter) for [Anonymous Symbol]
    timerdemo.o(.ARM.exidx.text.prvTest3_CheckAutoReloadExpireRates) refers to timerdemo.o(.text.prvTest3_CheckAutoReloadExpireRates) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest4_CheckAutoReloadTimersCanBeStopped) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    timerdemo.o(.text.prvTest4_CheckAutoReloadTimersCanBeStopped) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timerdemo.o(.text.prvTest4_CheckAutoReloadTimersCanBeStopped) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timerdemo.o(.text.prvTest4_CheckAutoReloadTimersCanBeStopped) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timerdemo.o(.text.prvTest4_CheckAutoReloadTimersCanBeStopped) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    timerdemo.o(.text.prvTest4_CheckAutoReloadTimersCanBeStopped) refers to timerdemo.o(.bss.xAutoReloadTimers) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest4_CheckAutoReloadTimersCanBeStopped) refers to timerdemo.o(.data.xTestStatus) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest4_CheckAutoReloadTimersCanBeStopped) refers to timerdemo.o(.bss.ucAutoReloadTimerCounters) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest4_CheckAutoReloadTimersCanBeStopped) refers to timerdemo.o(.bss.xBasePeriod) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest4_CheckAutoReloadTimersCanBeStopped) refers to timerdemo.o(.bss.ulLoopCounter) for [Anonymous Symbol]
    timerdemo.o(.ARM.exidx.text.prvTest4_CheckAutoReloadTimersCanBeStopped) refers to timerdemo.o(.text.prvTest4_CheckAutoReloadTimersCanBeStopped) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest5_CheckBasicOneShotTimerBehaviour) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    timerdemo.o(.text.prvTest5_CheckBasicOneShotTimerBehaviour) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timerdemo.o(.text.prvTest5_CheckBasicOneShotTimerBehaviour) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timerdemo.o(.text.prvTest5_CheckBasicOneShotTimerBehaviour) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    timerdemo.o(.text.prvTest5_CheckBasicOneShotTimerBehaviour) refers to timerdemo.o(.bss.xOneShotTimer) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest5_CheckBasicOneShotTimerBehaviour) refers to timerdemo.o(.data.xTestStatus) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest5_CheckBasicOneShotTimerBehaviour) refers to timerdemo.o(.bss.ucOneShotTimerCounter) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest5_CheckBasicOneShotTimerBehaviour) refers to timerdemo.o(.bss.xBasePeriod) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest5_CheckBasicOneShotTimerBehaviour) refers to timerdemo.o(.bss.ulLoopCounter) for [Anonymous Symbol]
    timerdemo.o(.ARM.exidx.text.prvTest5_CheckBasicOneShotTimerBehaviour) refers to timerdemo.o(.text.prvTest5_CheckBasicOneShotTimerBehaviour) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest6_CheckAutoReloadResetBehaviour) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timerdemo.o(.text.prvTest6_CheckAutoReloadResetBehaviour) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timerdemo.o(.text.prvTest6_CheckAutoReloadResetBehaviour) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    timerdemo.o(.text.prvTest6_CheckAutoReloadResetBehaviour) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    timerdemo.o(.text.prvTest6_CheckAutoReloadResetBehaviour) refers to timerdemo.o(.bss.xOneShotTimer) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest6_CheckAutoReloadResetBehaviour) refers to timerdemo.o(.data.xTestStatus) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest6_CheckAutoReloadResetBehaviour) refers to timerdemo.o(.bss.xAutoReloadTimers) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest6_CheckAutoReloadResetBehaviour) refers to timerdemo.o(.bss.xBasePeriod) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest6_CheckAutoReloadResetBehaviour) refers to timerdemo.o(.bss.ucOneShotTimerCounter) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest6_CheckAutoReloadResetBehaviour) refers to timerdemo.o(.bss.ucAutoReloadTimerCounters) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest6_CheckAutoReloadResetBehaviour) refers to timerdemo.o(.bss.ulLoopCounter) for [Anonymous Symbol]
    timerdemo.o(.ARM.exidx.text.prvTest6_CheckAutoReloadResetBehaviour) refers to timerdemo.o(.text.prvTest6_CheckAutoReloadResetBehaviour) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest7_CheckBacklogBehaviour) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    timerdemo.o(.text.prvTest7_CheckBacklogBehaviour) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timerdemo.o(.text.prvTest7_CheckBacklogBehaviour) refers to tasks.o(.text.xTaskCatchUpTicks) for xTaskCatchUpTicks
    timerdemo.o(.text.prvTest7_CheckBacklogBehaviour) refers to timerdemo.o(.bss.xAutoReloadTimers) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest7_CheckBacklogBehaviour) refers to timerdemo.o(.data.xTestStatus) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest7_CheckBacklogBehaviour) refers to timerdemo.o(.bss.ucIsStopNeededInTimerZeroCallback) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest7_CheckBacklogBehaviour) refers to timerdemo.o(.bss.xBasePeriod) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest7_CheckBacklogBehaviour) refers to timerdemo.o(.bss.ucAutoReloadTimerCounters) for [Anonymous Symbol]
    timerdemo.o(.text.prvTest7_CheckBacklogBehaviour) refers to timerdemo.o(.bss.ulLoopCounter) for [Anonymous Symbol]
    timerdemo.o(.ARM.exidx.text.prvTest7_CheckBacklogBehaviour) refers to timerdemo.o(.text.prvTest7_CheckBacklogBehaviour) for [Anonymous Symbol]
    timerdemo.o(.text.prvResetStartConditionsForNextIteration) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    timerdemo.o(.text.prvResetStartConditionsForNextIteration) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timerdemo.o(.text.prvResetStartConditionsForNextIteration) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timerdemo.o(.text.prvResetStartConditionsForNextIteration) refers to timerdemo.o(.bss.xAutoReloadTimers) for [Anonymous Symbol]
    timerdemo.o(.text.prvResetStartConditionsForNextIteration) refers to timerdemo.o(.data.xTestStatus) for [Anonymous Symbol]
    timerdemo.o(.text.prvResetStartConditionsForNextIteration) refers to timerdemo.o(.bss.ulLoopCounter) for [Anonymous Symbol]
    timerdemo.o(.ARM.exidx.text.prvResetStartConditionsForNextIteration) refers to timerdemo.o(.text.prvResetStartConditionsForNextIteration) for [Anonymous Symbol]
    timerdemo.o(.text.prvAutoReloadTimerCallback) refers to timers.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    timerdemo.o(.text.prvAutoReloadTimerCallback) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timerdemo.o(.text.prvAutoReloadTimerCallback) refers to timerdemo.o(.data.xTestStatus) for [Anonymous Symbol]
    timerdemo.o(.text.prvAutoReloadTimerCallback) refers to timerdemo.o(.bss.ucAutoReloadTimerCounters) for [Anonymous Symbol]
    timerdemo.o(.text.prvAutoReloadTimerCallback) refers to timerdemo.o(.bss.ucIsStopNeededInTimerZeroCallback) for [Anonymous Symbol]
    timerdemo.o(.ARM.exidx.text.prvAutoReloadTimerCallback) refers to timerdemo.o(.text.prvAutoReloadTimerCallback) for [Anonymous Symbol]
    timerdemo.o(.text.prvISRAutoReloadTimerCallback) refers to timerdemo.o(.bss.ucISRAutoReloadTimerCounter) for [Anonymous Symbol]
    timerdemo.o(.ARM.exidx.text.prvISRAutoReloadTimerCallback) refers to timerdemo.o(.text.prvISRAutoReloadTimerCallback) for [Anonymous Symbol]
    timerdemo.o(.text.prvISROneShotTimerCallback) refers to timerdemo.o(.bss.ucISROneShotTimerCounter) for [Anonymous Symbol]
    timerdemo.o(.ARM.exidx.text.prvISROneShotTimerCallback) refers to timerdemo.o(.text.prvISROneShotTimerCallback) for [Anonymous Symbol]
    highprotask.o(.text.CreateHighProTask) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    highprotask.o(.text.CreateHighProTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    highprotask.o(.text.CreateHighProTask) refers to highprotask.o(.bss.xHighProTaskQueue) for xHighProTaskQueue
    highprotask.o(.text.CreateHighProTask) refers to highprotask.o(.text.HighProTask) for HighProTask
    highprotask.o(.ARM.exidx.text.CreateHighProTask) refers to highprotask.o(.text.CreateHighProTask) for [Anonymous Symbol]
    highprotask.o(.text.HighProTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    highprotask.o(.text.HighProTask) refers to board.o(.text.Key_Scan) for Key_Scan
    highprotask.o(.text.HighProTask) refers to taskmanager.o(.text.SendMessage) for SendMessage
    highprotask.o(.text.HighProTask) refers to ft32f0xx_usart.o(.text.USART_SendData) for USART_SendData
    highprotask.o(.text.HighProTask) refers to ft32f0xx_usart.o(.text.USART_GetFlagStatus) for USART_GetFlagStatus
    highprotask.o(.text.HighProTask) refers to highprotask.o(.bss.xHighProTaskQueue) for xHighProTaskQueue
    highprotask.o(.text.HighProTask) refers to peripheral.o(.bss.usart_rx_buff) for usart_rx_buff
    highprotask.o(.text.HighProTask) refers to lowprotask.o(.bss.xLowProTaskQueue) for xLowProTaskQueue
    highprotask.o(.ARM.exidx.text.HighProTask) refers to highprotask.o(.text.HighProTask) for [Anonymous Symbol]
    idletask.o(.ARM.exidx.text.vApplicationIdleHook) refers to idletask.o(.text.vApplicationIdleHook) for [Anonymous Symbol]
    idletask.o(.ARM.exidx.text.Sleep) refers to idletask.o(.text.Sleep) for [Anonymous Symbol]
    inittask.o(.text.CreateInitTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    inittask.o(.text.CreateInitTask) refers to inittask.o(.bss.pInitTaskHandle) for [Anonymous Symbol]
    inittask.o(.text.CreateInitTask) refers to inittask.o(.text.InitTask) for InitTask
    inittask.o(.ARM.exidx.text.CreateInitTask) refers to inittask.o(.text.CreateInitTask) for [Anonymous Symbol]
    inittask.o(.text.InitTask) refers to inittask.o(.text.SystemApplicationDeviceInit) for SystemApplicationDeviceInit
    inittask.o(.text.InitTask) refers to highprotask.o(.text.CreateHighProTask) for CreateHighProTask
    inittask.o(.text.InitTask) refers to lowprotask.o(.text.CreateLowProTask) for CreateLowProTask
    inittask.o(.text.InitTask) refers to inittask.o(.text.DeleteInitTask) for DeleteInitTask
    inittask.o(.ARM.exidx.text.InitTask) refers to inittask.o(.text.InitTask) for [Anonymous Symbol]
    inittask.o(.text.SystemApplicationDeviceInit) refers to board.o(.text.Led_Init) for Led_Init
    inittask.o(.text.SystemApplicationDeviceInit) refers to board.o(.text.Key_Init) for Key_Init
    inittask.o(.text.SystemApplicationDeviceInit) refers to peripheral.o(.text.Usart_Init) for Usart_Init
    inittask.o(.text.SystemApplicationDeviceInit) refers to peripheral.o(.text.ADC_Config) for ADC_Config
    inittask.o(.text.SystemApplicationDeviceInit) refers to peripheral.o(.text.TIM_PWM_Init) for TIM_PWM_Init
    inittask.o(.ARM.exidx.text.SystemApplicationDeviceInit) refers to inittask.o(.text.SystemApplicationDeviceInit) for [Anonymous Symbol]
    inittask.o(.text.DeleteInitTask) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    inittask.o(.text.DeleteInitTask) refers to inittask.o(.bss.pInitTaskHandle) for [Anonymous Symbol]
    inittask.o(.ARM.exidx.text.DeleteInitTask) refers to inittask.o(.text.DeleteInitTask) for [Anonymous Symbol]
    lowprotask.o(.text.CreateLowProTask) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    lowprotask.o(.text.CreateLowProTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    lowprotask.o(.text.CreateLowProTask) refers to lowprotask.o(.bss.xLowProTaskQueue) for xLowProTaskQueue
    lowprotask.o(.text.CreateLowProTask) refers to lowprotask.o(.text.LowProTask) for LowProTask
    lowprotask.o(.ARM.exidx.text.CreateLowProTask) refers to lowprotask.o(.text.CreateLowProTask) for [Anonymous Symbol]
    lowprotask.o(.text.LowProTask) refers to peripheral.o(.text.Key_Pro) for Key_Pro
    lowprotask.o(.text.LowProTask) refers to ft32f0xx_iwdg.o(.text.IWDG_ReloadCounter) for IWDG_ReloadCounter
    lowprotask.o(.text.LowProTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    lowprotask.o(.text.LowProTask) refers to peripheral.o(.text.LED_Flash) for LED_Flash
    lowprotask.o(.text.LowProTask) refers to peripheral.o(.text.ADC_Measure) for ADC_Measure
    lowprotask.o(.text.LowProTask) refers to lowprotask.o(.bss.xLowProTaskQueue) for xLowProTaskQueue
    lowprotask.o(.ARM.exidx.text.LowProTask) refers to lowprotask.o(.text.LowProTask) for [Anonymous Symbol]
    taskmanager.o(.text.SendMessage) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    taskmanager.o(.ARM.exidx.text.SendMessage) refers to taskmanager.o(.text.SendMessage) for [Anonymous Symbol]
    taskmanager.o(.text.SendShortMessageFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    taskmanager.o(.ARM.exidx.text.SendShortMessageFromISR) refers to taskmanager.o(.text.SendShortMessageFromISR) for [Anonymous Symbol]
    taskmanager.o(.text.SendMessageFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    taskmanager.o(.ARM.exidx.text.SendMessageFromISR) refers to taskmanager.o(.text.SendMessageFromISR) for [Anonymous Symbol]
    taskmanager.o(.ARM.exidx.text.vApplicationMallocFailedHook) refers to taskmanager.o(.text.vApplicationMallocFailedHook) for [Anonymous Symbol]
    taskmanager.o(.ARM.exidx.text.vApplicationStackOverflowHook) refers to taskmanager.o(.text.vApplicationStackOverflowHook) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    idiv.o(.text) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to peripheral.o(.text.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to peripheral.o(.text.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to peripheral.o(.text.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to peripheral.o(.text.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to peripheral.o(.text.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to peripheral.o(.text.fputc) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to peripheral.o(.text.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to peripheral.o(.text.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to peripheral.o(.text.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to peripheral.o(.text.fputc) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to peripheral.o(.text.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to peripheral.o(.text.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to peripheral.o(.text.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to peripheral.o(.text.fputc) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to peripheral.o(.text.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to peripheral.o(.text.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to peripheral.o(.text.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to peripheral.o(.text.fputc) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to peripheral.o(.text.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to peripheral.o(.text.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to peripheral.o(.text.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to peripheral.o(.text.fputc) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to peripheral.o(.text.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to peripheral.o(.text.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to peripheral.o(.text.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to peripheral.o(.text.fputc) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to peripheral.o(.text.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to peripheral.o(.text.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to peripheral.o(.text.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to peripheral.o(.text.fputc) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to peripheral.o(.text.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to peripheral.o(.text.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf6.o(i._printf_core) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to peripheral.o(.text.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to peripheral.o(.text.fputc) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to peripheral.o(.text.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to peripheral.o(.text.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to peripheral.o(.text.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to peripheral.o(.text.fputc) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to peripheral.o(.text.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to peripheral.o(.text.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to peripheral.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to peripheral.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to peripheral.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to peripheral.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dcmpgt.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfltui.o(.text) refers to depilogue.o(.text) for _double_epilogue
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_ft32f072xb.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_ft32f072xb.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    idiv_div0.o(.text) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(i.__ARM_clz) refers (Special) to iusefp.o(.text) for __I$use$fp


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing startup_ft32f072xb.o(HEAP), (1024 bytes).
    Removing main-standardtest.o(.text), (0 bytes).
    Removing main-standardtest.o(.ARM.exidx.text.main_standartest), (8 bytes).
    Removing main-demo.o(.text), (0 bytes).
    Removing main-demo.o(.text.main_demo), (14 bytes).
    Removing main-demo.o(.ARM.exidx.text.main_demo), (8 bytes).
    Removing ft32f0xx_it.o(.text), (0 bytes).
    Removing ft32f0xx_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing ft32f0xx_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing ft32f0xx_it.o(.ARM.exidx.text.USART1_IRQHandler), (8 bytes).
    Removing ft32f0xx_it.o(.ARM.exidx.text.TIM1_BRK_UP_TRG_COM_IRQHandler), (8 bytes).
    Removing ft32f0xx_it.o(.ARM.exidx.text.TIM16_IRQHandler), (8 bytes).
    Removing board.o(.text), (0 bytes).
    Removing board.o(.text.Led_Init), (76 bytes).
    Removing board.o(.ARM.exidx.text.Led_Init), (8 bytes).
    Removing board.o(.text.LED_Toggle), (26 bytes).
    Removing board.o(.ARM.exidx.text.LED_Toggle), (8 bytes).
    Removing board.o(.text.Key_Init), (60 bytes).
    Removing board.o(.ARM.exidx.text.Key_Init), (8 bytes).
    Removing board.o(.text.Key_Scan), (144 bytes).
    Removing board.o(.ARM.exidx.text.Key_Scan), (8 bytes).
    Removing board.o(.text.SysTick_Configuration), (48 bytes).
    Removing board.o(.ARM.exidx.text.SysTick_Configuration), (8 bytes).
    Removing board.o(.text.SysTick_Config), (36 bytes).
    Removing board.o(.ARM.exidx.text.SysTick_Config), (8 bytes).
    Removing board.o(.text.NVIC_SetPriority), (24 bytes).
    Removing board.o(.ARM.exidx.text.NVIC_SetPriority), (8 bytes).
    Removing board.o(.text.TimingDelay_Decrement), (20 bytes).
    Removing board.o(.ARM.exidx.text.TimingDelay_Decrement), (8 bytes).
    Removing board.o(.text.SysTick_Delay_Ms), (32 bytes).
    Removing board.o(.ARM.exidx.text.SysTick_Delay_Ms), (8 bytes).
    Removing board.o(.text.SysCLK48M), (156 bytes).
    Removing board.o(.ARM.exidx.text.SysCLK48M), (8 bytes).
    Removing board.o(.bss.Key_Scan.key_up), (1 bytes).
    Removing board.o(.bss.Key_Scan.key_time), (1 bytes).
    Removing board.o(.bss.TimingDelay), (4 bytes).
    Removing peripheral.o(.text), (0 bytes).
    Removing peripheral.o(.ARM.exidx.text.Usart_Init), (8 bytes).
    Removing peripheral.o(.ARM.exidx.text.DMA_USART_RX_Config), (8 bytes).
    Removing peripheral.o(.text.ADC_Config), (136 bytes).
    Removing peripheral.o(.ARM.exidx.text.ADC_Config), (8 bytes).
    Removing peripheral.o(.text.ADC_Measure), (168 bytes).
    Removing peripheral.o(.ARM.exidx.text.ADC_Measure), (8 bytes).
    Removing peripheral.o(.text.TIM_PWM_Init), (248 bytes).
    Removing peripheral.o(.ARM.exidx.text.TIM_PWM_Init), (8 bytes).
    Removing peripheral.o(.text.Iwdg_Init), (88 bytes).
    Removing peripheral.o(.ARM.exidx.text.Iwdg_Init), (8 bytes).
    Removing peripheral.o(.text.LED_Flash), (16 bytes).
    Removing peripheral.o(.ARM.exidx.text.LED_Flash), (8 bytes).
    Removing peripheral.o(.text.Key_Pro), (108 bytes).
    Removing peripheral.o(.ARM.exidx.text.Key_Pro), (8 bytes).
    Removing peripheral.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing peripheral.o(.rodata.TICK_RATE_HZ), (2 bytes).
    Removing peripheral.o(.bss.ADC1ConvertedValue), (2 bytes).
    Removing peripheral.o(.bss.ADC1ConvertedVoltage), (2 bytes).
    Removing peripheral.o(.bss.TimerPeriod), (2 bytes).
    Removing peripheral.o(.bss.Channel1Pulse), (2 bytes).
    Removing peripheral.o(.rodata.str1.1), (96 bytes).
    Removing peripheral.o(.bss.CaptureNumber), (4 bytes).
    Removing peripheral.o(.bss.PeriodValue), (4 bytes).
    Removing peripheral.o(.bss.Timecount), (4 bytes).
    Removing croutine.o(.text), (0 bytes).
    Removing event_groups.o(.text), (0 bytes).
    Removing event_groups.o(.text.xEventGroupCreate), (28 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSync), (134 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBits), (136 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupWaitBits), (176 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups.o(.text.prvTestWaitCondition), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.prvTestWaitCondition), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBits), (26 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBitsFromISR), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetBitsFromISR), (18 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupDelete), (42 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBitsFromISR), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.uxEventGroupGetNumber), (12 bytes).
    Removing event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetNumber), (4 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetNumber), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.text.vListInsertEnd), (24 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (22 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.prvInitialiseMutex), (24 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (28 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (14 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (52 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueGenericSend), (256 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (42 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueSemaphoreTake), (314 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (36 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer), (8 bytes).
    Removing queue.o(.text.prvIsQueueFull), (26 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (116 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.text.prvGetDisinheritPriorityAfterTimeout), (20 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (252 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (50 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (18 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (22 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (16 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.vQueueUnregisterQueue), (36 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueUnregisterQueue), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (6 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueAddToRegistry), (8 bytes).
    Removing queue.o(.text.pcQueueGetName), (32 bytes).
    Removing queue.o(.ARM.exidx.text.pcQueueGetName), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing queue.o(.text.xQueueCreateSet), (12 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.text.xQueueAddToSet), (36 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueAddToSet), (8 bytes).
    Removing queue.o(.text.xQueueRemoveFromSet), (36 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueRemoveFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSet), (22 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSetFromISR), (20 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR), (8 bytes).
    Removing stream_buffer.o(.text), (0 bytes).
    Removing stream_buffer.o(.text.xStreamBufferGenericCreate), (78 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate), (8 bytes).
    Removing stream_buffer.o(.text.prvInitialiseNewStreamBuffer), (32 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferDelete), (22 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReset), (56 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReset), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSetTriggerLevel), (22 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSpacesAvailable), (30 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferBytesAvailable), (8 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.prvBytesInBuffer), (18 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvBytesInBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSend), (220 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSend), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteMessageToBuffer), (78 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendFromISR), (106 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceive), (152 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive), (8 bytes).
    Removing stream_buffer.o(.text.prvReadMessageFromBuffer), (78 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes), (44 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes), (8 bytes).
    Removing stream_buffer.o(.text.prvReadBytesFromBuffer), (70 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadBytesFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveFromISR), (96 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsEmpty), (12 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsFull), (24 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendCompletedFromISR), (58 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR), (58 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber), (4 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber), (4 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.ucStreamBufferGetStreamBufferType), (8 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteBytesToBuffer), (66 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteBytesToBuffer), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (148 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.text.vTaskDelay), (36 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (128 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (180 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (156 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (112 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (152 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.xTaskGetHandle), (144 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetHandle), (8 bytes).
    Removing tasks.o(.text.prvSearchForNameWithinSingleList), (120 bytes).
    Removing tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (180 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (96 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.text.xTaskAbortDelay), (144 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskAbortDelay), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (72 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (148 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (36 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (128 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.text.xTaskGetSchedulerState), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityInherit), (148 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.text.vTaskPriorityDisinheritAfterTimeout), (120 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.text.pvTaskIncrementMutexHeldCount), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (116 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (144 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (220 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (204 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (40 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (54 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (54 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (84 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (12 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (4 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (32 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (24 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (4 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (4 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (24 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (18 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (18 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (40 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (36 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvReloadTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (136 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (2 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortYield), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.ulSetInterruptMaskFromISR), (8 bytes).
    Removing port.o(.ARM.exidx.text.vClearInterruptMaskFromISR), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing ft32f0xx_adc.o(.text), (0 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_DeInit), (36 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_DeInit), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_Init), (40 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_Init), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_StructInit), (16 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_StructInit), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_Cmd), (18 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_Cmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_ClockModeConfig), (4 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_ClockModeConfig), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_JitterCmd), (20 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_JitterCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_AutoPowerOffCmd), (20 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_AutoPowerOffCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_WaitModeCmd), (20 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_WaitModeCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_AnalogWatchdogCmd), (20 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_AnalogWatchdogThresholdsConfig), (8 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogThresholdsConfig), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_AnalogWatchdogSingleChannelConfig), (14 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelConfig), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_AnalogWatchdogSingleChannelCmd), (20 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_TempSensorCmd), (28 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_TempSensorCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_VrefintCmd), (28 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_VrefintCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_VbatCmd), (28 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_VbatCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_ChannelConfig), (10 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_ChannelConfig), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_ContinuousModeCmd), (20 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_ContinuousModeCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_DiscModeCmd), (20 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_DiscModeCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_OverrunModeCmd), (20 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_OverrunModeCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_GetCalibrationFactor), (44 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_GetCalibrationFactor), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_StopOfConversion), (10 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_StopOfConversion), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_StartOfConversion), (10 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_StartOfConversion), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_GetConversionValue), (6 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_GetConversionValue), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_DMACmd), (16 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_DMACmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_DMARequestModeConfig), (16 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_DMARequestModeConfig), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_ITConfig), (20 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_ITConfig), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_GetFlagStatus), (24 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_ClearFlag), (4 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_ClearFlag), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_GetITStatus), (20 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_GetITStatus), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_ClearITPendingBit), (4 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_ClearITPendingBit), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_VrefselConfig), (12 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_VrefselConfig), (8 bytes).
    Removing ft32f0xx_comp.o(.text), (0 bytes).
    Removing ft32f0xx_comp.o(.text.COMP_DeInit), (12 bytes).
    Removing ft32f0xx_comp.o(.ARM.exidx.text.COMP_DeInit), (8 bytes).
    Removing ft32f0xx_comp.o(.text.COMP_Init), (36 bytes).
    Removing ft32f0xx_comp.o(.ARM.exidx.text.COMP_Init), (8 bytes).
    Removing ft32f0xx_comp.o(.text.COMP_StructInit), (20 bytes).
    Removing ft32f0xx_comp.o(.ARM.exidx.text.COMP_StructInit), (8 bytes).
    Removing ft32f0xx_comp.o(.text.COMP_Cmd), (32 bytes).
    Removing ft32f0xx_comp.o(.ARM.exidx.text.COMP_Cmd), (8 bytes).
    Removing ft32f0xx_comp.o(.text.COMP_GetOutputLevel), (20 bytes).
    Removing ft32f0xx_comp.o(.ARM.exidx.text.COMP_GetOutputLevel), (8 bytes).
    Removing ft32f0xx_comp.o(.text.COMP_WindowCmd), (28 bytes).
    Removing ft32f0xx_comp.o(.ARM.exidx.text.COMP_WindowCmd), (8 bytes).
    Removing ft32f0xx_comp.o(.text.COMP_LockConfig), (20 bytes).
    Removing ft32f0xx_comp.o(.ARM.exidx.text.COMP_LockConfig), (8 bytes).
    Removing ft32f0xx_crc.o(.text), (0 bytes).
    Removing ft32f0xx_crc.o(.text.CRC_DeInit), (24 bytes).
    Removing ft32f0xx_crc.o(.ARM.exidx.text.CRC_DeInit), (8 bytes).
    Removing ft32f0xx_crc.o(.text.CRC_ResetDR), (16 bytes).
    Removing ft32f0xx_crc.o(.ARM.exidx.text.CRC_ResetDR), (8 bytes).
    Removing ft32f0xx_crc.o(.text.CRC_ReverseInputDataSelect), (20 bytes).
    Removing ft32f0xx_crc.o(.ARM.exidx.text.CRC_ReverseInputDataSelect), (8 bytes).
    Removing ft32f0xx_crc.o(.text.CRC_ReverseOutputDataCmd), (24 bytes).
    Removing ft32f0xx_crc.o(.ARM.exidx.text.CRC_ReverseOutputDataCmd), (8 bytes).
    Removing ft32f0xx_crc.o(.text.CRC_SetInitRegister), (12 bytes).
    Removing ft32f0xx_crc.o(.ARM.exidx.text.CRC_SetInitRegister), (8 bytes).
    Removing ft32f0xx_crc.o(.text.CRC_SetPolynomial), (2 bytes).
    Removing ft32f0xx_crc.o(.ARM.exidx.text.CRC_SetPolynomial), (8 bytes).
    Removing ft32f0xx_crc.o(.text.CRC_CalcCRC), (12 bytes).
    Removing ft32f0xx_crc.o(.ARM.exidx.text.CRC_CalcCRC), (8 bytes).
    Removing ft32f0xx_crc.o(.text.CRC_CalcCRC16bits), (12 bytes).
    Removing ft32f0xx_crc.o(.ARM.exidx.text.CRC_CalcCRC16bits), (8 bytes).
    Removing ft32f0xx_crc.o(.text.CRC_CalcCRC8bits), (12 bytes).
    Removing ft32f0xx_crc.o(.ARM.exidx.text.CRC_CalcCRC8bits), (8 bytes).
    Removing ft32f0xx_crc.o(.text.CRC_CalcBlockCRC), (24 bytes).
    Removing ft32f0xx_crc.o(.ARM.exidx.text.CRC_CalcBlockCRC), (8 bytes).
    Removing ft32f0xx_crc.o(.text.CRC_GetCRC), (12 bytes).
    Removing ft32f0xx_crc.o(.ARM.exidx.text.CRC_GetCRC), (8 bytes).
    Removing ft32f0xx_crc.o(.text.CRC_SetIDRegister), (12 bytes).
    Removing ft32f0xx_crc.o(.ARM.exidx.text.CRC_SetIDRegister), (8 bytes).
    Removing ft32f0xx_crc.o(.text.CRC_GetIDRegister), (12 bytes).
    Removing ft32f0xx_crc.o(.ARM.exidx.text.CRC_GetIDRegister), (8 bytes).
    Removing ft32f0xx_crs.o(.text), (0 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_DeInit), (22 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_DeInit), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_AdjustHSI48CalibrationValue), (28 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_AdjustHSI48CalibrationValue), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_FrequencyErrorCounterCmd), (24 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_FrequencyErrorCounterCmd), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_AutomaticCalibrationCmd), (24 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_AutomaticCalibrationCmd), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_SoftwareSynchronizationGenerate), (16 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_SoftwareSynchronizationGenerate), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_FrequencyErrorCounterReload), (28 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_FrequencyErrorCounterReload), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_FrequencyErrorLimitConfig), (28 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_FrequencyErrorLimitConfig), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_SynchronizationPrescalerConfig), (24 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_SynchronizationPrescalerConfig), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_SynchronizationSourceConfig), (24 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_SynchronizationSourceConfig), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_SynchronizationPolarityConfig), (24 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_SynchronizationPolarityConfig), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_GetReloadValue), (12 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_GetReloadValue), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_GetHSI48CalibrationValue), (16 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_GetHSI48CalibrationValue), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_GetFrequencyErrorValue), (20 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_GetFrequencyErrorValue), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_GetFrequencyErrorDirection), (16 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_GetFrequencyErrorDirection), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_ITConfig), (28 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_ITConfig), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_GetFlagStatus), (16 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_ClearFlag), (24 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_ClearFlag), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_GetITStatus), (16 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_GetITStatus), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_ClearITPendingBit), (24 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_ClearITPendingBit), (8 bytes).
    Removing ft32f0xx_dac.o(.text), (0 bytes).
    Removing ft32f0xx_dac.o(.text.DAC_Ref_Config), (24 bytes).
    Removing ft32f0xx_dac.o(.ARM.exidx.text.DAC_Ref_Config), (8 bytes).
    Removing ft32f0xx_dac.o(.text.DAC_Cmd), (24 bytes).
    Removing ft32f0xx_dac.o(.ARM.exidx.text.DAC_Cmd), (8 bytes).
    Removing ft32f0xx_dac.o(.text.DAC_SetChannel1Data), (12 bytes).
    Removing ft32f0xx_dac.o(.ARM.exidx.text.DAC_SetChannel1Data), (8 bytes).
    Removing ft32f0xx_dac.o(.text.DAC_SetChannel2Data), (12 bytes).
    Removing ft32f0xx_dac.o(.ARM.exidx.text.DAC_SetChannel2Data), (8 bytes).
    Removing ft32f0xx_dac.o(.text.DAC_Read_Reg), (32 bytes).
    Removing ft32f0xx_dac.o(.ARM.exidx.text.DAC_Read_Reg), (8 bytes).
    Removing ft32f0xx_debug.o(.text), (0 bytes).
    Removing ft32f0xx_debug.o(.text.DBGMCU_GetREVID), (12 bytes).
    Removing ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_GetREVID), (8 bytes).
    Removing ft32f0xx_debug.o(.text.DBGMCU_GetDEVID), (20 bytes).
    Removing ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_GetDEVID), (8 bytes).
    Removing ft32f0xx_debug.o(.text.DBGMCU_Config), (28 bytes).
    Removing ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_Config), (8 bytes).
    Removing ft32f0xx_debug.o(.text.DBGMCU_APB1PeriphConfig), (28 bytes).
    Removing ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_APB1PeriphConfig), (8 bytes).
    Removing ft32f0xx_debug.o(.text.DBGMCU_APB2PeriphConfig), (28 bytes).
    Removing ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_APB2PeriphConfig), (8 bytes).
    Removing ft32f0xx_dma.o(.text), (0 bytes).
    Removing ft32f0xx_dma.o(.text.DMA_DeInit), (120 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_DeInit), (8 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_Init), (8 bytes).
    Removing ft32f0xx_dma.o(.text.DMA_StructInit), (10 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_StructInit), (8 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_Cmd), (8 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_SetCurrDataCounter), (8 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_GetCurrDataCounter), (8 bytes).
    Removing ft32f0xx_dma.o(.text.DMA_ITConfig), (20 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_ITConfig), (8 bytes).
    Removing ft32f0xx_dma.o(.text.DMA_GetFlagStatus), (28 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_ClearFlag), (8 bytes).
    Removing ft32f0xx_dma.o(.text.DMA_GetITStatus), (28 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_GetITStatus), (8 bytes).
    Removing ft32f0xx_dma.o(.text.DMA_ClearITPendingBit), (16 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_ClearITPendingBit), (8 bytes).
    Removing ft32f0xx_exti.o(.text), (0 bytes).
    Removing ft32f0xx_exti.o(.text.EXTI_DeInit), (32 bytes).
    Removing ft32f0xx_exti.o(.ARM.exidx.text.EXTI_DeInit), (8 bytes).
    Removing ft32f0xx_exti.o(.text.EXTI_Init), (96 bytes).
    Removing ft32f0xx_exti.o(.ARM.exidx.text.EXTI_Init), (8 bytes).
    Removing ft32f0xx_exti.o(.text.EXTI_StructInit), (14 bytes).
    Removing ft32f0xx_exti.o(.ARM.exidx.text.EXTI_StructInit), (8 bytes).
    Removing ft32f0xx_exti.o(.text.EXTI_GenerateSWInterrupt), (16 bytes).
    Removing ft32f0xx_exti.o(.ARM.exidx.text.EXTI_GenerateSWInterrupt), (8 bytes).
    Removing ft32f0xx_exti.o(.text.EXTI_GetFlagStatus), (20 bytes).
    Removing ft32f0xx_exti.o(.ARM.exidx.text.EXTI_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_exti.o(.text.EXTI_ClearFlag), (12 bytes).
    Removing ft32f0xx_exti.o(.ARM.exidx.text.EXTI_ClearFlag), (8 bytes).
    Removing ft32f0xx_exti.o(.text.EXTI_GetITStatus), (20 bytes).
    Removing ft32f0xx_exti.o(.ARM.exidx.text.EXTI_GetITStatus), (8 bytes).
    Removing ft32f0xx_exti.o(.text.EXTI_ClearITPendingBit), (12 bytes).
    Removing ft32f0xx_exti.o(.ARM.exidx.text.EXTI_ClearITPendingBit), (8 bytes).
    Removing ft32f0xx_flash.o(.text), (0 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_SetLatency), (20 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_SetLatency), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_PrefetchBufferCmd), (24 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_PrefetchBufferCmd), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_GetPrefetchBufferStatus), (16 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_GetPrefetchBufferStatus), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_Unlock), (32 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_Unlock), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_Lock), (16 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_Lock), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_ErasePage), (84 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_ErasePage), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation), (52 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_EraseAllPages), (80 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_EraseAllPages), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_ProgramWord), (84 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_ProgramWord), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_Unlock), (32 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_Unlock), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_Lock), (20 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_Lock), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_Launch), (20 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_Launch), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_Erase), (132 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_Erase), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_GetRDP), (20 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_GetRDP), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_EnableWRP), (164 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_EnableWRP), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_RDPConfig), (136 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_RDPConfig), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_UserConfig), (140 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_UserConfig), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_BOOTConfig), (128 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_BOOTConfig), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_VDDAConfig), (128 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_VDDAConfig), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_SRAMParityConfig), (132 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_SRAMParityConfig), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_WriteUser), (120 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_WriteUser), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_ProgramData), (60 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_ProgramData), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_GetUser), (16 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_GetUser), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_GetWRP), (12 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_GetWRP), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_ITConfig), (28 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_ITConfig), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_GetFlagStatus), (20 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_ClearFlag), (12 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_ClearFlag), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_GetStatus), (40 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_GetStatus), (8 bytes).
    Removing ft32f0xx_gpio.o(.text), (0 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_DeInit), (76 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_DeInit), (8 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_Init), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_StructInit), (16 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_StructInit), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_PinLockConfig), (36 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_PinLockConfig), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_ReadInputDataBit), (10 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_ReadInputData), (4 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ReadInputData), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_ReadOutputDataBit), (10 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_ReadOutputData), (4 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_SetBits), (4 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_SetBits), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_ResetBits), (4 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ResetBits), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_WriteBit), (12 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_WriteBit), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_Write), (4 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_Write), (8 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_PinAFConfig), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_LedmConfig), (8 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_LedmConfig), (8 bytes).
    Removing ft32f0xx_i2c.o(.text), (0 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_DeInit), (36 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_DeInit), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_Init), (96 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_Init), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_StructInit), (22 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_StructInit), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_Cmd), (16 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_Cmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_SoftwareResetCmd), (18 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_SoftwareResetCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_ITConfig), (20 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ITConfig), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_StretchClockCmd), (20 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_StretchClockCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_DualAddressCmd), (20 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_DualAddressCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_OwnAddress2Config), (28 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_OwnAddress2Config), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_GeneralCallCmd), (20 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GeneralCallCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_SlaveByteControlCmd), (20 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_SlaveByteControlCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_SlaveAddressConfig), (24 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_SlaveAddressConfig), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_10BitAddressingModeCmd), (20 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_10BitAddressingModeCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_AutoEndCmd), (20 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_AutoEndCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_ReloadCmd), (20 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ReloadCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_NumberOfBytesConfig), (16 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_NumberOfBytesConfig), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_MasterRequestConfig), (20 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_MasterRequestConfig), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_GenerateSTART), (20 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GenerateSTART), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_GenerateSTOP), (20 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GenerateSTOP), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_10BitAddressHeaderCmd), (20 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_10BitAddressHeaderCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_AcknowledgeConfig), (20 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_AcknowledgeConfig), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_GetAddressMatched), (10 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GetAddressMatched), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_GetTransferDirection), (12 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GetTransferDirection), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_TransferHandling), (36 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_TransferHandling), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_SMBusAlertCmd), (20 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_SMBusAlertCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_ClockTimeoutCmd), (20 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ClockTimeoutCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_ExtendedClockTimeoutCmd), (24 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ExtendedClockTimeoutCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_IdleClockTimeoutCmd), (20 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_IdleClockTimeoutCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_TimeoutAConfig), (24 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_TimeoutAConfig), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_TimeoutBConfig), (20 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_TimeoutBConfig), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_CalculatePEC), (20 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_CalculatePEC), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_PECRequestCmd), (20 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_PECRequestCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_GetPEC), (6 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GetPEC), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_ReadRegister), (22 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ReadRegister), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_SendData), (4 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_SendData), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_ReceiveData), (6 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ReceiveData), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_DMACmd), (20 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_DMACmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_GetFlagStatus), (10 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_ClearFlag), (4 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ClearFlag), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_GetITStatus), (48 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GetITStatus), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_ClearITPendingBit), (4 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ClearITPendingBit), (8 bytes).
    Removing ft32f0xx_iwdg.o(.text), (0 bytes).
    Removing ft32f0xx_iwdg.o(.text.IWDG_WriteAccessCmd), (12 bytes).
    Removing ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_WriteAccessCmd), (8 bytes).
    Removing ft32f0xx_iwdg.o(.text.IWDG_SetPrescaler), (12 bytes).
    Removing ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_SetPrescaler), (8 bytes).
    Removing ft32f0xx_iwdg.o(.text.IWDG_SetReload), (12 bytes).
    Removing ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_SetReload), (8 bytes).
    Removing ft32f0xx_iwdg.o(.text.IWDG_ReloadCounter), (16 bytes).
    Removing ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_ReloadCounter), (8 bytes).
    Removing ft32f0xx_iwdg.o(.text.IWDG_SetWindowValue), (12 bytes).
    Removing ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_SetWindowValue), (8 bytes).
    Removing ft32f0xx_iwdg.o(.text.IWDG_Enable), (16 bytes).
    Removing ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_Enable), (8 bytes).
    Removing ft32f0xx_iwdg.o(.text.IWDG_GetFlagStatus), (20 bytes).
    Removing ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_misc.o(.text), (0 bytes).
    Removing ft32f0xx_misc.o(.ARM.exidx.text.NVIC_Init), (8 bytes).
    Removing ft32f0xx_misc.o(.text.NVIC_SystemLPConfig), (28 bytes).
    Removing ft32f0xx_misc.o(.ARM.exidx.text.NVIC_SystemLPConfig), (8 bytes).
    Removing ft32f0xx_misc.o(.text.SysTick_CLKSourceConfig), (28 bytes).
    Removing ft32f0xx_misc.o(.ARM.exidx.text.SysTick_CLKSourceConfig), (8 bytes).
    Removing ft32f0xx_opa.o(.text), (0 bytes).
    Removing ft32f0xx_opa.o(.text.OPA_DeInit), (12 bytes).
    Removing ft32f0xx_opa.o(.ARM.exidx.text.OPA_DeInit), (8 bytes).
    Removing ft32f0xx_opa.o(.text.OPA_Init), (40 bytes).
    Removing ft32f0xx_opa.o(.ARM.exidx.text.OPA_Init), (8 bytes).
    Removing ft32f0xx_opa.o(.text.OPA_StructInit), (24 bytes).
    Removing ft32f0xx_opa.o(.ARM.exidx.text.OPA_StructInit), (8 bytes).
    Removing ft32f0xx_opa.o(.text.OPA_Cmd), (24 bytes).
    Removing ft32f0xx_opa.o(.ARM.exidx.text.OPA_Cmd), (8 bytes).
    Removing ft32f0xx_opa.o(.text.OPA_GetOutputLevel), (16 bytes).
    Removing ft32f0xx_opa.o(.ARM.exidx.text.OPA_GetOutputLevel), (8 bytes).
    Removing ft32f0xx_opa.o(.text.OPA_Cali), (180 bytes).
    Removing ft32f0xx_opa.o(.ARM.exidx.text.OPA_Cali), (8 bytes).
    Removing ft32f0xx_pwr.o(.text), (0 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_DeInit), (22 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_DeInit), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_BackupAccessCmd), (28 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_BackupAccessCmd), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_PVDLevelConfig), (20 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_PVDLevelConfig), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_PVDCmd), (24 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_PVDCmd), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_WakeUpPinCmd), (28 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_WakeUpPinCmd), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_EnterSleepMode), (32 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_EnterSleepMode), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_EnterSTOPMode), (64 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_EnterSTOPMode), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_EnterSTANDBYMode), (32 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_EnterSTANDBYMode), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_GetFlagStatus), (20 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_ClearFlag), (16 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_ClearFlag), (8 bytes).
    Removing ft32f0xx_rcc.o(.text), (0 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_DeInit), (88 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_DeInit), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_HSEConfig), (16 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSEConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_WaitForHSEStartUp), (48 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_WaitForHSEStartUp), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_GetFlagStatus), (44 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_AdjustHSICalibrationValue), (20 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_AdjustHSICalibrationValue), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_HSICmd), (24 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSICmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_AdjustHSI14CalibrationValue), (20 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_AdjustHSI14CalibrationValue), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_HSI14Cmd), (24 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSI14Cmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_HSI14ADCRequestCmd), (24 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSI14ADCRequestCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_LSEConfig), (32 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_LSEConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_LSEDriveConfig), (24 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_LSEDriveConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_LSICmd), (24 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_LSICmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_PLLConfig), (28 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_PLLConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_PLLCmd), (28 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_PLLCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_HSI48Cmd), (28 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSI48Cmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_PREDIV1Config), (20 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_PREDIV1Config), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_ClockSecuritySystemCmd), (28 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ClockSecuritySystemCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_MCOConfig), (28 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_MCOConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_SYSCLKConfig), (20 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_GetSYSCLKSource), (16 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_HCLKConfig), (20 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HCLKConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_PCLKConfig), (20 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_PCLKConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_ADCCLKConfig), (44 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ADCCLKConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_I2CCLKConfig), (24 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_I2CCLKConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_USARTCLKConfig), (28 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_USARTCLKConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_USBCLKConfig), (24 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_USBCLKConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_RTCCLKConfig), (16 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_RTCCLKConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_RTCCLKCmd), (28 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_RTCCLKCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_BackupResetCmd), (28 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_BackupResetCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_AHBPeriphClockCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_APB1PeriphClockCmd), (28 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_AHBPeriphResetCmd), (28 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_AHBPeriphResetCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_APB2PeriphResetCmd), (28 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_APB2PeriphResetCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_APB1PeriphResetCmd), (28 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_APB1PeriphResetCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_ITConfig), (28 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ITConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_ClearFlag), (20 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ClearFlag), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_GetITStatus), (20 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_GetITStatus), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_ClearITPendingBit), (12 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ClearITPendingBit), (8 bytes).
    Removing ft32f0xx_rtc.o(.text), (0 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_DeInit), (104 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_DeInit), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_EnterInitMode), (60 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_EnterInitMode), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_WaitForSynchro), (80 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_WaitForSynchro), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_Init), (72 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_Init), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_ExitInitMode), (24 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ExitInitMode), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_StructInit), (14 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_StructInit), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_WriteProtectionCmd), (28 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_WriteProtectionCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_RefClockCmd), (64 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_RefClockCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_BypassShadowCmd), (44 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_BypassShadowCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_SetTime), (160 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SetTime), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_Bcd2ToByte), (16 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_Bcd2ToByte), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_ByteToBcd2), (40 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ByteToBcd2), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TimeStructInit), (12 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TimeStructInit), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetTime), (72 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetTime), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetSubSecond), (12 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetSubSecond), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_SetDate), (148 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SetDate), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_DateStructInit), (14 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_DateStructInit), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetDate), (68 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetDate), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_SetAlarm), (132 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SetAlarm), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_AlarmStructInit), (14 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_AlarmStructInit), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetAlarm), (108 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetAlarm), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_AlarmCmd), (80 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_AlarmCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_AlarmSubSecondConfig), (28 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_AlarmSubSecondConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetAlarmSubSecond), (20 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetAlarmSubSecond), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_DayLightSavingConfig), (40 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_DayLightSavingConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetStoreOperation), (16 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetStoreOperation), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_OutputConfig), (40 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_OutputConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_CalibOutputCmd), (44 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_CalibOutputCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_CalibOutputConfig), (36 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_CalibOutputConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_SmoothCalibConfig), (76 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SmoothCalibConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TimeStampCmd), (52 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TimeStampCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetTimeStamp), (120 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetTimeStamp), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetTimeStampSubSecond), (12 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetTimeStampSubSecond), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TamperTriggerConfig), (28 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperTriggerConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TamperCmd), (28 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TamperFilterConfig), (24 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperFilterConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TamperSamplingFreqConfig), (24 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperSamplingFreqConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TamperPinsPrechargeDuration), (24 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperPinsPrechargeDuration), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TimeStampOnTamperDetectionCmd), (24 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TimeStampOnTamperDetectionCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TamperPullUpCmd), (28 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperPullUpCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_OutputTypeConfig), (24 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_OutputTypeConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_SynchroShiftConfig), (80 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SynchroShiftConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_ITConfig), (64 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ITConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetFlagStatus), (24 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_ClearFlag), (32 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ClearFlag), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetITStatus), (52 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetITStatus), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_ClearITPendingBit), (32 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ClearITPendingBit), (8 bytes).
    Removing ft32f0xx_spi.o(.text), (0 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_I2S_DeInit), (64 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_DeInit), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_StructInit), (26 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_StructInit), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_Init), (68 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_Init), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_Cmd), (18 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_Cmd), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_TIModeCmd), (18 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_TIModeCmd), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_DataSizeConfig), (16 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_DataSizeConfig), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_RxFIFOThresholdConfig), (20 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_RxFIFOThresholdConfig), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_BiDirectionalLineConfig), (32 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_BiDirectionalLineConfig), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_NSSInternalSoftwareConfig), (24 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_NSSInternalSoftwareConfig), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_SSOutputCmd), (18 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_SSOutputCmd), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_NSSPulseModeCmd), (18 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_NSSPulseModeCmd), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_SendData8), (4 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_SendData8), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_I2S_SendData16), (4 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_SendData16), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_ReceiveData8), (4 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_ReceiveData8), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_I2S_ReceiveData16), (4 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_ReceiveData16), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_CRCLengthConfig), (20 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_CRCLengthConfig), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_CalculateCRC), (24 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_CalculateCRC), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_TransmitCRC), (12 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_TransmitCRC), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_GetCRC), (16 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_GetCRC), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_GetCRCPolynomial), (4 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_GetCRCPolynomial), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_I2S_DMACmd), (20 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_DMACmd), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_LastDMATransferCmd), (20 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_LastDMATransferCmd), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_I2S_ITConfig), (26 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_ITConfig), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_GetTransmissionFIFOStatus), (10 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_GetTransmissionFIFOStatus), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_GetReceptionFIFOStatus), (10 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_GetReceptionFIFOStatus), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_I2S_GetFlagStatus), (10 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_I2S_ClearFlag), (6 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_ClearFlag), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_I2S_GetITStatus), (30 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_GetITStatus), (8 bytes).
    Removing ft32f0xx_syscfg.o(.text), (0 bytes).
    Removing ft32f0xx_syscfg.o(.text.SYSCFG_DeInit), (32 bytes).
    Removing ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_DeInit), (8 bytes).
    Removing ft32f0xx_syscfg.o(.text.SYSCFG_MemoryRemapConfig), (20 bytes).
    Removing ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_MemoryRemapConfig), (8 bytes).
    Removing ft32f0xx_syscfg.o(.text.SYSCFG_DMAChannelRemapConfig), (28 bytes).
    Removing ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_DMAChannelRemapConfig), (8 bytes).
    Removing ft32f0xx_syscfg.o(.text.SYSCFG_I2CFastModePlusConfig), (28 bytes).
    Removing ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_I2CFastModePlusConfig), (8 bytes).
    Removing ft32f0xx_syscfg.o(.text.SYSCFG_IRDAEnvSelection), (24 bytes).
    Removing ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_IRDAEnvSelection), (8 bytes).
    Removing ft32f0xx_syscfg.o(.text.SYSCFG_EXTILineConfig), (36 bytes).
    Removing ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_EXTILineConfig), (8 bytes).
    Removing ft32f0xx_syscfg.o(.text.SYSCFG_BreakConfig), (16 bytes).
    Removing ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_BreakConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text), (0 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_DeInit), (176 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_DeInit), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_TimeBaseInit), (112 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_TimeBaseInit), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_TimeBaseStructInit), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_TimeBaseStructInit), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_PrescalerConfig), (6 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_PrescalerConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_CounterModeConfig), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_CounterModeConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetCounter), (4 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCounter), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetAutoreload), (4 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetAutoreload), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_GetCounter), (4 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCounter), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_GetPrescaler), (4 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetPrescaler), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_UpdateDisableConfig), (18 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_UpdateDisableConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_UpdateRequestConfig), (18 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_UpdateRequestConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ARRPreloadConfig), (18 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ARRPreloadConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectOnePulseMode), (16 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectOnePulseMode), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetClockDivision), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetClockDivision), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_Cmd), (16 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_Cmd), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_BDTRConfig), (32 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_BDTRConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_BDTRStructInit), (18 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_BDTRStructInit), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_CtrlPWMOutputs), (28 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_CtrlPWMOutputs), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC1Init), (104 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1Init), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC2Init), (136 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2Init), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC3Init), (116 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3Init), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC4Init), (104 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC4Init), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OCStructInit), (14 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OCStructInit), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectOCxM), (66 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectOCxM), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetCompare1), (4 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCompare1), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetCompare2), (4 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCompare2), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetCompare3), (4 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCompare3), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetCompare4), (4 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCompare4), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ForcedOC1Config), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ForcedOC1Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ForcedOC2Config), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ForcedOC2Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ForcedOC3Config), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ForcedOC3Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ForcedOC4Config), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ForcedOC4Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_CCPreloadControl), (16 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_CCPreloadControl), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC1PreloadConfig), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1PreloadConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC2PreloadConfig), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2PreloadConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC3PreloadConfig), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3PreloadConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC4PreloadConfig), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC4PreloadConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC1FastConfig), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1FastConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC2FastConfig), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2FastConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC3FastConfig), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3FastConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC4FastConfig), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC4FastConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ClearOC1Ref), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearOC1Ref), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ClearOC2Ref), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearOC2Ref), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ClearOC3Ref), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearOC3Ref), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ClearOC4Ref), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearOC4Ref), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC1PolarityConfig), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1PolarityConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC1NPolarityConfig), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1NPolarityConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC2PolarityConfig), (14 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2PolarityConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC2NPolarityConfig), (14 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2NPolarityConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC3PolarityConfig), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3PolarityConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC3NPolarityConfig), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3NPolarityConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC4PolarityConfig), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC4PolarityConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectOCREFClear), (16 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectOCREFClear), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_CCxCmd), (22 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_CCxCmd), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_CCxNCmd), (22 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_CCxNCmd), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectCOM), (18 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectCOM), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ICInit), (108 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ICInit), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TI1_Config), (38 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TI1_Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetIC1Prescaler), (16 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetIC1Prescaler), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TI2_Config), (48 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TI2_Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetIC2Prescaler), (24 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetIC2Prescaler), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TI3_Config), (52 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TI3_Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetIC3Prescaler), (16 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetIC3Prescaler), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TI4_Config), (60 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TI4_Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetIC4Prescaler), (24 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetIC4Prescaler), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ICStructInit), (16 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ICStructInit), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_PWMIConfig), (112 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_PWMIConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_GetCapture1), (4 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCapture1), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_GetCapture2), (4 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCapture2), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_GetCapture3), (4 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCapture3), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_GetCapture4), (4 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCapture4), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ITConfig), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ITConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_GenerateEvent), (4 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GenerateEvent), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_GetFlagStatus), (10 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ClearFlag), (6 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearFlag), (8 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetITStatus), (8 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearITPendingBit), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_DMAConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_DMAConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_DMACmd), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_DMACmd), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectCCDMA), (18 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectCCDMA), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_InternalClockConfig), (10 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_InternalClockConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ITRxExternalClockConfig), (18 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ITRxExternalClockConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectInputTrigger), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectInputTrigger), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_TIxExternalClockConfig), (46 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_TIxExternalClockConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ETRClockMode1Config), (18 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ETRClockMode1Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ETRConfig), (16 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ETRConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ETRClockMode2Config), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ETRClockMode2Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectOutputTrigger), (16 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectOutputTrigger), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectSlaveMode), (16 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectSlaveMode), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectMasterSlaveMode), (16 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectMasterSlaveMode), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_EncoderInterfaceConfig), (48 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_EncoderInterfaceConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectHallSensor), (18 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectHallSensor), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_RemapConfig), (6 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_RemapConfig), (8 bytes).
    Removing ft32f0xx_usart.o(.text), (0 bytes).
    Removing ft32f0xx_usart.o(.text.USART_DeInit), (64 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_DeInit), (8 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_Init), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_StructInit), (22 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_StructInit), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_ClockInit), (26 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_ClockInit), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_ClockStructInit), (12 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_ClockStructInit), (8 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_Cmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_DirectionModeCmd), (20 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_DirectionModeCmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_OverSampling8Cmd), (20 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_OverSampling8Cmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_OneBitMethodCmd), (20 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_OneBitMethodCmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_MSBFirstCmd), (20 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_MSBFirstCmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_DataInvCmd), (20 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_DataInvCmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_InvPinCmd), (20 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_InvPinCmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_SWAPPinCmd), (20 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_SWAPPinCmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_ReceiverTimeOutCmd), (20 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_ReceiverTimeOutCmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_SetReceiverTimeOut), (18 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_SetReceiverTimeOut), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_AutoBaudRateCmd), (20 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_AutoBaudRateCmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_AutoBaudRateConfig), (18 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_AutoBaudRateConfig), (8 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_SendData), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_ReceiveData), (12 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_ReceiveData), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_SetAddress), (20 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_SetAddress), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_MuteModeCmd), (20 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_MuteModeCmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_MuteModeWakeUpConfig), (18 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_MuteModeWakeUpConfig), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_AddressDetectionConfig), (16 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_AddressDetectionConfig), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_HalfDuplexCmd), (18 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_HalfDuplexCmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_DECmd), (20 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_DECmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_DEPolarityConfig), (18 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_DEPolarityConfig), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_SetDEAssertionTime), (20 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_SetDEAssertionTime), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_SetDEDeassertionTime), (20 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_SetDEDeassertionTime), (8 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_DMACmd), (8 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_DMAReceptionErrorConfig), (8 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_ITConfig), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_RequestCmd), (18 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_RequestCmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_OverrunDetectionConfig), (18 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_OverrunDetectionConfig), (8 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_ClearFlag), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_GetITStatus), (44 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_GetITStatus), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_ClearITPendingBit), (10 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_ClearITPendingBit), (8 bytes).
    Removing ft32f0xx_wwdg.o(.text), (0 bytes).
    Removing ft32f0xx_wwdg.o(.text.WWDG_DeInit), (22 bytes).
    Removing ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_DeInit), (8 bytes).
    Removing ft32f0xx_wwdg.o(.text.WWDG_SetPrescaler), (20 bytes).
    Removing ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_SetPrescaler), (8 bytes).
    Removing ft32f0xx_wwdg.o(.text.WWDG_SetWindowValue), (36 bytes).
    Removing ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_SetWindowValue), (8 bytes).
    Removing ft32f0xx_wwdg.o(.text.WWDG_EnableIT), (20 bytes).
    Removing ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_EnableIT), (8 bytes).
    Removing ft32f0xx_wwdg.o(.text.WWDG_SetCounter), (16 bytes).
    Removing ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_SetCounter), (8 bytes).
    Removing ft32f0xx_wwdg.o(.text.WWDG_Enable), (16 bytes).
    Removing ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_Enable), (8 bytes).
    Removing ft32f0xx_wwdg.o(.text.WWDG_GetFlagStatus), (16 bytes).
    Removing ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_wwdg.o(.text.WWDG_ClearFlag), (12 bytes).
    Removing ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_ClearFlag), (8 bytes).
    Removing system_ft32f0xx.o(.text), (0 bytes).
    Removing system_ft32f0xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_ft32f0xx.o(.ARM.exidx.text.SetSysClock), (8 bytes).
    Removing system_ft32f0xx.o(.text.SystemCoreClockUpdate), (96 bytes).
    Removing system_ft32f0xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_ft32f0xx.o(.rodata.AHBPrescTable), (16 bytes).
    Removing intqueuetimer.o(.text), (0 bytes).
    Removing intqueuetimer.o(.text.vInitialiseTimerForIntQueueTest), (92 bytes).
    Removing intqueuetimer.o(.ARM.exidx.text.vInitialiseTimerForIntQueueTest), (8 bytes).
    Removing intqueuetimer.o(.ARM.exidx.text.IntQueueTestTimerHandler), (8 bytes).
    Removing regtests.o(.text), (0 bytes).
    Removing regtests.o(.text.vStartRegisterTasks), (144 bytes).
    Removing regtests.o(.ARM.exidx.text.vStartRegisterTasks), (8 bytes).
    Removing regtests.o(.text.prvRegisterTest1Task), (124 bytes).
    Removing regtests.o(.ARM.exidx.text.prvRegisterTest1Task), (8 bytes).
    Removing regtests.o(.text.prvRegisterTest2Task), (124 bytes).
    Removing regtests.o(.ARM.exidx.text.prvRegisterTest2Task), (8 bytes).
    Removing regtests.o(.text.prvRegisterTest3Task), (16 bytes).
    Removing regtests.o(.ARM.exidx.text.prvRegisterTest3Task), (8 bytes).
    Removing regtests.o(.text.prvRegisterTest4Task), (16 bytes).
    Removing regtests.o(.ARM.exidx.text.prvRegisterTest4Task), (8 bytes).
    Removing regtests.o(.text.xAreRegisterTasksStillRunning), (140 bytes).
    Removing regtests.o(.ARM.exidx.text.xAreRegisterTasksStillRunning), (8 bytes).
    Removing regtests.o(.bss.xAreRegisterTasksStillRunning.ulLastRegisterTest1Counter), (4 bytes).
    Removing regtests.o(.bss.xAreRegisterTasksStillRunning.ulLastRegisterTest2Counter), (4 bytes).
    Removing regtests.o(.bss.xAreRegisterTasksStillRunning.ulLastRegisterTest3Counter), (4 bytes).
    Removing regtests.o(.bss.xAreRegisterTasksStillRunning.ulLastRegisterTest4Counter), (4 bytes).
    Removing regtests.o(.bss.ulRegisterTest1Counter), (4 bytes).
    Removing regtests.o(.bss.xErrorDetected), (4 bytes).
    Removing regtests.o(.bss.ulRegisterTest2Counter), (4 bytes).
    Removing regtests.o(.bss.ulRegisterTest3Counter), (4 bytes).
    Removing regtests.o(.bss.ulRegisterTest4Counter), (4 bytes).
    Removing testrunner.o(.text), (0 bytes).
    Removing testrunner.o(.ARM.exidx.text.vStartTests), (8 bytes).
    Removing testrunner.o(.ARM.exidx.text.prvCheckTask), (8 bytes).
    Removing testrunner.o(.ARM.exidx.text.vApplicationTickHook), (8 bytes).
    Removing abortdelay.o(.text), (0 bytes).
    Removing abortdelay.o(.text.vCreateAbortDelayTasks), (64 bytes).
    Removing abortdelay.o(.ARM.exidx.text.vCreateAbortDelayTasks), (8 bytes).
    Removing abortdelay.o(.text.prvControllingTask), (132 bytes).
    Removing abortdelay.o(.ARM.exidx.text.prvControllingTask), (8 bytes).
    Removing abortdelay.o(.text.prvBlockingTask), (136 bytes).
    Removing abortdelay.o(.ARM.exidx.text.prvBlockingTask), (8 bytes).
    Removing abortdelay.o(.text.xAreAbortDelayTestTasksStillRunning), (76 bytes).
    Removing abortdelay.o(.ARM.exidx.text.xAreAbortDelayTestTasksStillRunning), (8 bytes).
    Removing abortdelay.o(.text.prvCheckExpectedTimeIsWithinAnAcceptableMargin), (40 bytes).
    Removing abortdelay.o(.ARM.exidx.text.prvCheckExpectedTimeIsWithinAnAcceptableMargin), (8 bytes).
    Removing abortdelay.o(.text.prvPerformSingleTaskTests), (28 bytes).
    Removing abortdelay.o(.ARM.exidx.text.prvPerformSingleTaskTests), (8 bytes).
    Removing abortdelay.o(.text.prvTestAbortingTaskNotifyWait), (136 bytes).
    Removing abortdelay.o(.ARM.exidx.text.prvTestAbortingTaskNotifyWait), (8 bytes).
    Removing abortdelay.o(.text.prvTestAbortingTaskNotifyTake), (112 bytes).
    Removing abortdelay.o(.ARM.exidx.text.prvTestAbortingTaskNotifyTake), (8 bytes).
    Removing abortdelay.o(.text.prvTestAbortingTaskDelay), (66 bytes).
    Removing abortdelay.o(.ARM.exidx.text.prvTestAbortingTaskDelay), (8 bytes).
    Removing abortdelay.o(.text.prvTestAbortingTaskDelayUntil), (84 bytes).
    Removing abortdelay.o(.ARM.exidx.text.prvTestAbortingTaskDelayUntil), (8 bytes).
    Removing abortdelay.o(.text.prvTestAbortingSemaphoreTake), (124 bytes).
    Removing abortdelay.o(.ARM.exidx.text.prvTestAbortingSemaphoreTake), (8 bytes).
    Removing abortdelay.o(.text.prvTestAbortingEventGroupWait), (140 bytes).
    Removing abortdelay.o(.ARM.exidx.text.prvTestAbortingEventGroupWait), (8 bytes).
    Removing abortdelay.o(.text.prvTestAbortingQueueSend), (156 bytes).
    Removing abortdelay.o(.ARM.exidx.text.prvTestAbortingQueueSend), (8 bytes).
    Removing abortdelay.o(.text.prvTestAbortingStreamBufferReceive), (140 bytes).
    Removing abortdelay.o(.ARM.exidx.text.prvTestAbortingStreamBufferReceive), (8 bytes).
    Removing abortdelay.o(.rodata.xMaxBlockTime), (4 bytes).
    Removing abortdelay.o(.rodata.xHalfMaxBlockTime), (4 bytes).
    Removing abortdelay.o(.rodata.xAllowableMargin), (4 bytes).
    Removing abortdelay.o(.bss.xAreAbortDelayTestTasksStillRunning.xLastControllingCycleCount), (4 bytes).
    Removing abortdelay.o(.bss.xAreAbortDelayTestTasksStillRunning.xLastBlockingCycleCount), (4 bytes).
    Removing abortdelay.o(.bss.xControllingCycles), (4 bytes).
    Removing abortdelay.o(.bss.xBlockingCycles), (4 bytes).
    Removing abortdelay.o(.bss.xErrorOccurred), (4 bytes).
    Removing abortdelay.o(.rodata.str1.1), (15 bytes).
    Removing blockq.o(.text), (0 bytes).
    Removing blockq.o(.text.vStartBlockingQueueTasks), (344 bytes).
    Removing blockq.o(.ARM.exidx.text.vStartBlockingQueueTasks), (8 bytes).
    Removing blockq.o(.text.vBlockingQueueConsumer), (56 bytes).
    Removing blockq.o(.ARM.exidx.text.vBlockingQueueConsumer), (8 bytes).
    Removing blockq.o(.text.vBlockingQueueProducer), (54 bytes).
    Removing blockq.o(.ARM.exidx.text.vBlockingQueueProducer), (8 bytes).
    Removing blockq.o(.text.xAreBlockingQueuesStillRunning), (84 bytes).
    Removing blockq.o(.ARM.exidx.text.xAreBlockingQueuesStillRunning), (8 bytes).
    Removing blockq.o(.bss.sBlockingConsumerCount), (6 bytes).
    Removing blockq.o(.bss.sBlockingProducerCount), (6 bytes).
    Removing blockq.o(.bss.xAreBlockingQueuesStillRunning.sLastBlockingConsumerCount), (6 bytes).
    Removing blockq.o(.bss.xAreBlockingQueuesStillRunning.sLastBlockingProducerCount), (6 bytes).
    Removing blocktim.o(.text), (0 bytes).
    Removing blocktim.o(.text.vCreateBlockTimeTasks), (128 bytes).
    Removing blocktim.o(.ARM.exidx.text.vCreateBlockTimeTasks), (8 bytes).
    Removing blocktim.o(.text.vPrimaryBlockTimeTestTask), (564 bytes).
    Removing blocktim.o(.ARM.exidx.text.vPrimaryBlockTimeTestTask), (8 bytes).
    Removing blocktim.o(.text.vSecondaryBlockTimeTestTask), (168 bytes).
    Removing blocktim.o(.ARM.exidx.text.vSecondaryBlockTimeTestTask), (8 bytes).
    Removing blocktim.o(.text.xAreBlockTimeTestTasksStillRunning), (76 bytes).
    Removing blocktim.o(.ARM.exidx.text.xAreBlockTimeTestTasksStillRunning), (8 bytes).
    Removing blocktim.o(.text.prvBasicDelayTests), (212 bytes).
    Removing blocktim.o(.ARM.exidx.text.prvBasicDelayTests), (8 bytes).
    Removing blocktim.o(.bss.xTestQueue), (4 bytes).
    Removing blocktim.o(.bss.xSecondary), (4 bytes).
    Removing blocktim.o(.bss.xAreBlockTimeTestTasksStillRunning.xLastPrimaryCycleCount), (4 bytes).
    Removing blocktim.o(.bss.xAreBlockTimeTestTasksStillRunning.xLastSecondaryCycleCount), (4 bytes).
    Removing blocktim.o(.bss.xPrimaryCycles), (4 bytes).
    Removing blocktim.o(.bss.xSecondaryCycles), (4 bytes).
    Removing blocktim.o(.bss.xErrorOccurred), (4 bytes).
    Removing blocktim.o(.bss.xRunIndicator), (4 bytes).
    Removing countsem.o(.text), (0 bytes).
    Removing countsem.o(.text.vStartCountingSemaphoreTasks), (160 bytes).
    Removing countsem.o(.ARM.exidx.text.vStartCountingSemaphoreTasks), (8 bytes).
    Removing countsem.o(.text.prvCountingSemaphoreTask), (64 bytes).
    Removing countsem.o(.ARM.exidx.text.prvCountingSemaphoreTask), (8 bytes).
    Removing countsem.o(.text.xAreCountingSemaphoreTasksStillRunning), (64 bytes).
    Removing countsem.o(.ARM.exidx.text.xAreCountingSemaphoreTasksStillRunning), (8 bytes).
    Removing countsem.o(.text.prvDecrementSemaphoreCount), (88 bytes).
    Removing countsem.o(.ARM.exidx.text.prvDecrementSemaphoreCount), (8 bytes).
    Removing countsem.o(.text.prvIncrementSemaphoreCount), (92 bytes).
    Removing countsem.o(.ARM.exidx.text.prvIncrementSemaphoreCount), (8 bytes).
    Removing countsem.o(.bss.xParameters), (24 bytes).
    Removing countsem.o(.bss.xAreCountingSemaphoreTasksStillRunning.uxLastCount0), (4 bytes).
    Removing countsem.o(.bss.xAreCountingSemaphoreTasksStillRunning.uxLastCount1), (4 bytes).
    Removing countsem.o(.bss.xErrorDetected), (4 bytes).
    Removing death.o(.text), (0 bytes).
    Removing death.o(.text.vCreateSuicidalTasks), (36 bytes).
    Removing death.o(.ARM.exidx.text.vCreateSuicidalTasks), (8 bytes).
    Removing death.o(.text.vCreateTasks), (124 bytes).
    Removing death.o(.ARM.exidx.text.vCreateTasks), (8 bytes).
    Removing death.o(.text.xIsCreateTaskStillRunning), (68 bytes).
    Removing death.o(.ARM.exidx.text.xIsCreateTaskStillRunning), (8 bytes).
    Removing death.o(.text.vSuicidalTask), (60 bytes).
    Removing death.o(.ARM.exidx.text.vSuicidalTask), (8 bytes).
    Removing death.o(.data.xIsCreateTaskStillRunning.usLastCreationCount), (2 bytes).
    Removing death.o(.bss.usCreationCount), (2 bytes).
    Removing death.o(.bss.uxTasksRunningAtStart), (4 bytes).
    Removing death.o(.bss.xCreatedTask), (4 bytes).
    Removing dynamic.o(.text), (0 bytes).
    Removing dynamic.o(.text.vStartDynamicPriorityTasks), (224 bytes).
    Removing dynamic.o(.ARM.exidx.text.vStartDynamicPriorityTasks), (8 bytes).
    Removing dynamic.o(.text.vContinuousIncrementTask), (38 bytes).
    Removing dynamic.o(.ARM.exidx.text.vContinuousIncrementTask), (8 bytes).
    Removing dynamic.o(.text.vLimitedIncrementTask), (22 bytes).
    Removing dynamic.o(.ARM.exidx.text.vLimitedIncrementTask), (8 bytes).
    Removing dynamic.o(.text.vCounterControlTask), (144 bytes).
    Removing dynamic.o(.ARM.exidx.text.vCounterControlTask), (8 bytes).
    Removing dynamic.o(.text.vQueueSendWhenSuspendedTask), (64 bytes).
    Removing dynamic.o(.ARM.exidx.text.vQueueSendWhenSuspendedTask), (8 bytes).
    Removing dynamic.o(.text.vQueueReceiveWhenSuspendedTask), (84 bytes).
    Removing dynamic.o(.ARM.exidx.text.vQueueReceiveWhenSuspendedTask), (8 bytes).
    Removing dynamic.o(.text.xAreDynamicPriorityTasksStillRunning), (88 bytes).
    Removing dynamic.o(.ARM.exidx.text.xAreDynamicPriorityTasksStillRunning), (8 bytes).
    Removing dynamic.o(.bss.xSuspendedTestQueue), (4 bytes).
    Removing dynamic.o(.bss.ulCounter), (4 bytes).
    Removing dynamic.o(.bss.xContinuousIncrementHandle), (4 bytes).
    Removing dynamic.o(.bss.xLimitedIncrementHandle), (4 bytes).
    Removing dynamic.o(.bss.xAreDynamicPriorityTasksStillRunning.usLastTaskCheck), (2 bytes).
    Removing dynamic.o(.bss.xAreDynamicPriorityTasksStillRunning.ulLastExpectedValue), (4 bytes).
    Removing dynamic.o(.bss.usCheckVariable), (2 bytes).
    Removing dynamic.o(.bss.ulExpectedValue), (4 bytes).
    Removing dynamic.o(.bss.xSuspendedQueueSendError), (4 bytes).
    Removing dynamic.o(.bss.xSuspendedQueueReceiveError), (4 bytes).
    Removing dynamic.o(.bss.vQueueSendWhenSuspendedTask.ulValueToSend), (4 bytes).
    Removing eventgroupsdemo.o(.text), (0 bytes).
    Removing eventgroupsdemo.o(.text.vStartEventGroupTasks), (140 bytes).
    Removing eventgroupsdemo.o(.ARM.exidx.text.vStartEventGroupTasks), (8 bytes).
    Removing eventgroupsdemo.o(.text.prvTestSlaveTask), (288 bytes).
    Removing eventgroupsdemo.o(.ARM.exidx.text.prvTestSlaveTask), (8 bytes).
    Removing eventgroupsdemo.o(.text.prvTestMasterTask), (128 bytes).
    Removing eventgroupsdemo.o(.ARM.exidx.text.prvTestMasterTask), (8 bytes).
    Removing eventgroupsdemo.o(.text.prvSyncTask), (96 bytes).
    Removing eventgroupsdemo.o(.ARM.exidx.text.prvSyncTask), (8 bytes).
    Removing eventgroupsdemo.o(.text.vPeriodicEventGroupsProcessing), (132 bytes).
    Removing eventgroupsdemo.o(.ARM.exidx.text.vPeriodicEventGroupsProcessing), (8 bytes).
    Removing eventgroupsdemo.o(.text.xAreEventGroupTasksStillRunning), (88 bytes).
    Removing eventgroupsdemo.o(.ARM.exidx.text.xAreEventGroupTasksStillRunning), (8 bytes).
    Removing eventgroupsdemo.o(.text.prvSelectiveBitsTestMasterFunction), (192 bytes).
    Removing eventgroupsdemo.o(.ARM.exidx.text.prvSelectiveBitsTestMasterFunction), (8 bytes).
    Removing eventgroupsdemo.o(.text.prvBitCombinationTestMasterFunction), (320 bytes).
    Removing eventgroupsdemo.o(.ARM.exidx.text.prvBitCombinationTestMasterFunction), (8 bytes).
    Removing eventgroupsdemo.o(.text.prvPerformTaskSyncTests), (544 bytes).
    Removing eventgroupsdemo.o(.ARM.exidx.text.prvPerformTaskSyncTests), (8 bytes).
    Removing eventgroupsdemo.o(.text.prvSelectiveBitsTestSlaveFunction), (64 bytes).
    Removing eventgroupsdemo.o(.ARM.exidx.text.prvSelectiveBitsTestSlaveFunction), (8 bytes).
    Removing eventgroupsdemo.o(.rodata.str1.1), (5 bytes).
    Removing eventgroupsdemo.o(.bss.xSyncTask1), (4 bytes).
    Removing eventgroupsdemo.o(.bss.xSyncTask2), (4 bytes).
    Removing eventgroupsdemo.o(.bss.xISREventGroup), (4 bytes).
    Removing eventgroupsdemo.o(.bss.vPeriodicEventGroupsProcessing.xCallCount), (4 bytes).
    Removing eventgroupsdemo.o(.bss.vPeriodicEventGroupsProcessing.xISRTestError), (1 bytes).
    Removing eventgroupsdemo.o(.bss.ulISRCycles), (4 bytes).
    Removing eventgroupsdemo.o(.bss.xAreEventGroupTasksStillRunning.ulPreviousWaitBitCycles), (4 bytes).
    Removing eventgroupsdemo.o(.bss.xAreEventGroupTasksStillRunning.ulPreviousSetBitCycles), (4 bytes).
    Removing eventgroupsdemo.o(.bss.xAreEventGroupTasksStillRunning.ulPreviousISRCycles), (4 bytes).
    Removing eventgroupsdemo.o(.bss.ulTestMasterCycles), (4 bytes).
    Removing eventgroupsdemo.o(.bss.ulTestSlaveCycles), (4 bytes).
    Removing eventgroupsdemo.o(.bss.xEventGroup), (4 bytes).
    Removing flop.o(.text), (0 bytes).
    Removing flop.o(.text.vStartMathTasks), (132 bytes).
    Removing flop.o(.ARM.exidx.text.vStartMathTasks), (8 bytes).
    Removing flop.o(.text.vCompetingMathTask1), (192 bytes).
    Removing flop.o(.ARM.exidx.text.vCompetingMathTask1), (8 bytes).
    Removing flop.o(.text.vCompetingMathTask2), (192 bytes).
    Removing flop.o(.ARM.exidx.text.vCompetingMathTask2), (8 bytes).
    Removing flop.o(.text.vCompetingMathTask3), (172 bytes).
    Removing flop.o(.ARM.exidx.text.vCompetingMathTask3), (8 bytes).
    Removing flop.o(.text.vCompetingMathTask4), (176 bytes).
    Removing flop.o(.ARM.exidx.text.vCompetingMathTask4), (8 bytes).
    Removing flop.o(.text.xAreMathsTaskStillRunning), (44 bytes).
    Removing flop.o(.ARM.exidx.text.xAreMathsTaskStillRunning), (8 bytes).
    Removing flop.o(.bss.usTaskCheck), (8 bytes).
    Removing genqtest.o(.text), (0 bytes).
    Removing genqtest.o(.text.vStartGenericQueueTasks), (248 bytes).
    Removing genqtest.o(.ARM.exidx.text.vStartGenericQueueTasks), (8 bytes).
    Removing genqtest.o(.text.prvSendFrontAndBackTest), (568 bytes).
    Removing genqtest.o(.ARM.exidx.text.prvSendFrontAndBackTest), (8 bytes).
    Removing genqtest.o(.text.prvLowPriorityMutexTask), (52 bytes).
    Removing genqtest.o(.ARM.exidx.text.prvLowPriorityMutexTask), (8 bytes).
    Removing genqtest.o(.text.prvMediumPriorityMutexTask), (20 bytes).
    Removing genqtest.o(.ARM.exidx.text.prvMediumPriorityMutexTask), (8 bytes).
    Removing genqtest.o(.text.prvHighPriorityMutexTask), (68 bytes).
    Removing genqtest.o(.ARM.exidx.text.prvHighPriorityMutexTask), (8 bytes).
    Removing genqtest.o(.text.xAreGenericQueueTasksStillRunning), (76 bytes).
    Removing genqtest.o(.ARM.exidx.text.xAreGenericQueueTasksStillRunning), (8 bytes).
    Removing genqtest.o(.text.prvTakeTwoMutexesReturnInDifferentOrder), (248 bytes).
    Removing genqtest.o(.ARM.exidx.text.prvTakeTwoMutexesReturnInDifferentOrder), (8 bytes).
    Removing genqtest.o(.text.prvTakeTwoMutexesReturnInSameOrder), (228 bytes).
    Removing genqtest.o(.ARM.exidx.text.prvTakeTwoMutexesReturnInSameOrder), (8 bytes).
    Removing genqtest.o(.text.prvHighPriorityTimeout), (456 bytes).
    Removing genqtest.o(.ARM.exidx.text.prvHighPriorityTimeout), (8 bytes).
    Removing genqtest.o(.bss.xMediumPriorityMutexTask), (4 bytes).
    Removing genqtest.o(.bss.xHighPriorityMutexTask), (4 bytes).
    Removing genqtest.o(.bss.xSecondMediumPriorityMutexTask), (4 bytes).
    Removing genqtest.o(.bss.xAreGenericQueueTasksStillRunning.ulLastLoopCounter), (4 bytes).
    Removing genqtest.o(.bss.xAreGenericQueueTasksStillRunning.ulLastLoopCounter2), (4 bytes).
    Removing genqtest.o(.bss.ulLoopCounter), (4 bytes).
    Removing genqtest.o(.bss.xErrorDetected), (4 bytes).
    Removing genqtest.o(.bss.ulLoopCounter2), (4 bytes).
    Removing genqtest.o(.bss.ulGuardedVariable), (4 bytes).
    Removing genqtest.o(.bss.prvHighPriorityTimeout.uxLoopCount), (4 bytes).
    Removing genqtest.o(.bss.xBlockWasAborted), (4 bytes).
    Removing integer.o(.text), (0 bytes).
    Removing integer.o(.text.vStartIntegerMathTasks), (44 bytes).
    Removing integer.o(.ARM.exidx.text.vStartIntegerMathTasks), (8 bytes).
    Removing integer.o(.text.vCompeteingIntMathTask), (80 bytes).
    Removing integer.o(.ARM.exidx.text.vCompeteingIntMathTask), (8 bytes).
    Removing integer.o(.text.xAreIntegerMathsTaskStillRunning), (20 bytes).
    Removing integer.o(.ARM.exidx.text.xAreIntegerMathsTaskStillRunning), (8 bytes).
    Removing integer.o(.bss.xTaskCheck), (4 bytes).
    Removing intqueue.o(.text), (0 bytes).
    Removing intqueue.o(.text.vStartInterruptQueueTasks), (296 bytes).
    Removing intqueue.o(.ARM.exidx.text.vStartInterruptQueueTasks), (8 bytes).
    Removing intqueue.o(.text.prvHigherPriorityNormallyEmptyTask), (308 bytes).
    Removing intqueue.o(.ARM.exidx.text.prvHigherPriorityNormallyEmptyTask), (8 bytes).
    Removing intqueue.o(.text.prvLowerPriorityNormallyEmptyTask), (148 bytes).
    Removing intqueue.o(.ARM.exidx.text.prvLowerPriorityNormallyEmptyTask), (8 bytes).
    Removing intqueue.o(.text.prv1stHigherPriorityNormallyFullTask), (244 bytes).
    Removing intqueue.o(.ARM.exidx.text.prv1stHigherPriorityNormallyFullTask), (8 bytes).
    Removing intqueue.o(.text.prv2ndHigherPriorityNormallyFullTask), (120 bytes).
    Removing intqueue.o(.ARM.exidx.text.prv2ndHigherPriorityNormallyFullTask), (8 bytes).
    Removing intqueue.o(.text.prvLowerPriorityNormallyFullTask), (132 bytes).
    Removing intqueue.o(.ARM.exidx.text.prvLowerPriorityNormallyFullTask), (8 bytes).
    Removing intqueue.o(.text.xFirstTimerHandler), (272 bytes).
    Removing intqueue.o(.ARM.exidx.text.xFirstTimerHandler), (8 bytes).
    Removing intqueue.o(.ARM.exidx.text.prvRecordValue_NormallyFull), (8 bytes).
    Removing intqueue.o(.ARM.exidx.text.xSecondTimerHandler), (8 bytes).
    Removing intqueue.o(.ARM.exidx.text.prvQueueAccessLogError), (8 bytes).
    Removing intqueue.o(.ARM.exidx.text.prvRecordValue_NormallyEmpty), (8 bytes).
    Removing intqueue.o(.text.xAreIntQueueTasksStillRunning), (148 bytes).
    Removing intqueue.o(.ARM.exidx.text.xAreIntQueueTasksStillRunning), (8 bytes).
    Removing intqueue.o(.bss.xHighPriorityNormallyEmptyTask1), (4 bytes).
    Removing intqueue.o(.bss.xHighPriorityNormallyEmptyTask2), (4 bytes).
    Removing intqueue.o(.bss.xHighPriorityNormallyFullTask1), (4 bytes).
    Removing intqueue.o(.bss.xHighPriorityNormallyFullTask2), (4 bytes).
    Removing intqueue.o(.bss.xFirstTimerHandler.uxNextOperation), (4 bytes).
    Removing intqueue.o(.bss.xAreIntQueueTasksStillRunning.uxLastHighPriorityLoops1), (4 bytes).
    Removing intqueue.o(.bss.xAreIntQueueTasksStillRunning.uxLastHighPriorityLoops2), (4 bytes).
    Removing intqueue.o(.bss.xAreIntQueueTasksStillRunning.uxLastLowPriorityLoops1), (4 bytes).
    Removing intqueue.o(.bss.xAreIntQueueTasksStillRunning.uxLastLowPriorityLoops2), (4 bytes).
    Removing intqueue.o(.bss.uxHighPriorityLoops1), (4 bytes).
    Removing intqueue.o(.bss.uxHighPriorityLoops2), (4 bytes).
    Removing intqueue.o(.bss.uxLowPriorityLoops1), (4 bytes).
    Removing intqueue.o(.bss.uxLowPriorityLoops2), (4 bytes).
    Removing intqueue.o(.bss.xWasSuspended), (1 bytes).
    Removing intsemtest.o(.text), (0 bytes).
    Removing intsemtest.o(.text.vStartInterruptSemaphoreTasks), (148 bytes).
    Removing intsemtest.o(.ARM.exidx.text.vStartInterruptSemaphoreTasks), (8 bytes).
    Removing intsemtest.o(.text.vInterruptMutexSlaveTask), (60 bytes).
    Removing intsemtest.o(.ARM.exidx.text.vInterruptMutexSlaveTask), (8 bytes).
    Removing intsemtest.o(.text.vInterruptMutexMasterTask), (44 bytes).
    Removing intsemtest.o(.ARM.exidx.text.vInterruptMutexMasterTask), (8 bytes).
    Removing intsemtest.o(.text.vInterruptCountingSemaphoreTask), (176 bytes).
    Removing intsemtest.o(.ARM.exidx.text.vInterruptCountingSemaphoreTask), (8 bytes).
    Removing intsemtest.o(.text.vInterruptSemaphorePeriodicTest), (88 bytes).
    Removing intsemtest.o(.ARM.exidx.text.vInterruptSemaphorePeriodicTest), (8 bytes).
    Removing intsemtest.o(.text.xAreInterruptSemaphoreTasksStillRunning), (80 bytes).
    Removing intsemtest.o(.ARM.exidx.text.xAreInterruptSemaphoreTasksStillRunning), (8 bytes).
    Removing intsemtest.o(.text.prvTakeAndGiveInTheSameOrder), (224 bytes).
    Removing intsemtest.o(.ARM.exidx.text.prvTakeAndGiveInTheSameOrder), (8 bytes).
    Removing intsemtest.o(.text.prvTakeAndGiveInTheOppositeOrder), (224 bytes).
    Removing intsemtest.o(.ARM.exidx.text.prvTakeAndGiveInTheOppositeOrder), (8 bytes).
    Removing intsemtest.o(.rodata.xInterruptGivePeriod), (4 bytes).
    Removing intsemtest.o(.bss.xISRMutex), (4 bytes).
    Removing intsemtest.o(.bss.xISRCountingSemaphore), (4 bytes).
    Removing intsemtest.o(.bss.xMasterSlaveMutex), (4 bytes).
    Removing intsemtest.o(.bss.xSlaveHandle), (4 bytes).
    Removing intsemtest.o(.bss.vInterruptSemaphorePeriodicTest.xLastGiveTime), (4 bytes).
    Removing intsemtest.o(.bss.xOkToGiveMutex), (1 bytes).
    Removing intsemtest.o(.bss.xOkToGiveCountingSemaphore), (1 bytes).
    Removing intsemtest.o(.bss.xAreInterruptSemaphoreTasksStillRunning.ulLastMasterLoopCounter), (4 bytes).
    Removing intsemtest.o(.bss.xAreInterruptSemaphoreTasksStillRunning.ulLastCountingSemaphoreLoops), (4 bytes).
    Removing intsemtest.o(.bss.ulMasterLoops), (4 bytes).
    Removing intsemtest.o(.bss.xErrorDetected), (4 bytes).
    Removing intsemtest.o(.bss.ulCountingSemaphoreLoops), (4 bytes).
    Removing messagebufferamp.o(.text), (0 bytes).
    Removing messagebufferamp.o(.text.vStartMessageBufferAMPTasks), (124 bytes).
    Removing messagebufferamp.o(.ARM.exidx.text.vStartMessageBufferAMPTasks), (8 bytes).
    Removing messagebufferamp.o(.text.prvCoreATask), (72 bytes).
    Removing messagebufferamp.o(.ARM.exidx.text.prvCoreATask), (8 bytes).
    Removing messagebufferamp.o(.text.prvCoreBTasks), (104 bytes).
    Removing messagebufferamp.o(.ARM.exidx.text.prvCoreBTasks), (8 bytes).
    Removing messagebufferamp.o(.text.vGenerateCoreBInterrupt), (40 bytes).
    Removing messagebufferamp.o(.ARM.exidx.text.vGenerateCoreBInterrupt), (8 bytes).
    Removing messagebufferamp.o(.text.prvCoreBInterruptHandler), (60 bytes).
    Removing messagebufferamp.o(.ARM.exidx.text.prvCoreBInterruptHandler), (8 bytes).
    Removing messagebufferamp.o(.text.xAreMessageBufferAMPTasksStillRunning), (52 bytes).
    Removing messagebufferamp.o(.ARM.exidx.text.xAreMessageBufferAMPTasksStillRunning), (8 bytes).
    Removing messagebufferamp.o(.data.xDemoStatus), (4 bytes).
    Removing messagebufferamp.o(.bss.xControlMessageBuffer), (4 bytes).
    Removing messagebufferamp.o(.bss.xCoreBMessageBuffers), (8 bytes).
    Removing messagebufferamp.o(.bss.xAreMessageBufferAMPTasksStillRunning.ulLastCycleCounters), (8 bytes).
    Removing messagebufferamp.o(.bss.ulCycleCounters), (8 bytes).
    Removing messagebufferamp.o(.rodata.str1.1), (4 bytes).
    Removing messagebufferdemo.o(.text), (0 bytes).
    Removing messagebufferdemo.o(.text.vStartMessageBufferTasks), (168 bytes).
    Removing messagebufferdemo.o(.ARM.exidx.text.vStartMessageBufferTasks), (8 bytes).
    Removing messagebufferdemo.o(.text.prvEchoServer), (160 bytes).
    Removing messagebufferdemo.o(.ARM.exidx.text.prvEchoServer), (8 bytes).
    Removing messagebufferdemo.o(.text.prvNonBlockingReceiverTask), (176 bytes).
    Removing messagebufferdemo.o(.ARM.exidx.text.prvNonBlockingReceiverTask), (8 bytes).
    Removing messagebufferdemo.o(.text.prvNonBlockingSenderTask), (96 bytes).
    Removing messagebufferdemo.o(.ARM.exidx.text.prvNonBlockingSenderTask), (8 bytes).
    Removing messagebufferdemo.o(.text.xAreMessageBufferTasksStillRunning), (76 bytes).
    Removing messagebufferdemo.o(.ARM.exidx.text.xAreMessageBufferTasksStillRunning), (8 bytes).
    Removing messagebufferdemo.o(.text.prvEchoClient), (136 bytes).
    Removing messagebufferdemo.o(.ARM.exidx.text.prvEchoClient), (8 bytes).
    Removing messagebufferdemo.o(.text.prvSingleTaskTests), (468 bytes).
    Removing messagebufferdemo.o(.ARM.exidx.text.prvSingleTaskTests), (8 bytes).
    Removing messagebufferdemo.o(.bss.xBlockingStackSize), (2 bytes).
    Removing messagebufferdemo.o(.bss.xAreMessageBufferTasksStillRunning.ulLastEchoLoopCounters), (8 bytes).
    Removing messagebufferdemo.o(.bss.xAreMessageBufferTasksStillRunning.ulLastNonBlockingRxCounter), (4 bytes).
    Removing messagebufferdemo.o(.bss.ulEchoLoopCounters), (8 bytes).
    Removing messagebufferdemo.o(.bss.ulNonBlockingRxCounter), (4 bytes).
    Removing messagebufferdemo.o(.rodata.str1.1), (58 bytes).
    Removing pollq.o(.text), (0 bytes).
    Removing pollq.o(.text.vStartPolledQueueTasks), (116 bytes).
    Removing pollq.o(.ARM.exidx.text.vStartPolledQueueTasks), (8 bytes).
    Removing pollq.o(.text.vPolledQueueConsumer), (100 bytes).
    Removing pollq.o(.ARM.exidx.text.vPolledQueueConsumer), (8 bytes).
    Removing pollq.o(.text.vPolledQueueProducer), (84 bytes).
    Removing pollq.o(.ARM.exidx.text.vPolledQueueProducer), (8 bytes).
    Removing pollq.o(.text.xArePollingQueuesStillRunning), (36 bytes).
    Removing pollq.o(.ARM.exidx.text.xArePollingQueuesStillRunning), (8 bytes).
    Removing pollq.o(.bss.vStartPolledQueueTasks.xPolledQueue), (4 bytes).
    Removing pollq.o(.bss.xPollingConsumerCount), (4 bytes).
    Removing pollq.o(.bss.xPollingProducerCount), (4 bytes).
    Removing qpeek.o(.text), (0 bytes).
    Removing qpeek.o(.text.vStartQueuePeekTasks), (192 bytes).
    Removing qpeek.o(.ARM.exidx.text.vStartQueuePeekTasks), (8 bytes).
    Removing qpeek.o(.text.prvLowPriorityPeekTask), (224 bytes).
    Removing qpeek.o(.ARM.exidx.text.prvLowPriorityPeekTask), (8 bytes).
    Removing qpeek.o(.text.prvMediumPriorityPeekTask), (84 bytes).
    Removing qpeek.o(.ARM.exidx.text.prvMediumPriorityPeekTask), (8 bytes).
    Removing qpeek.o(.text.prvHighPriorityPeekTask), (112 bytes).
    Removing qpeek.o(.ARM.exidx.text.prvHighPriorityPeekTask), (8 bytes).
    Removing qpeek.o(.text.prvHighestPriorityPeekTask), (192 bytes).
    Removing qpeek.o(.ARM.exidx.text.prvHighestPriorityPeekTask), (8 bytes).
    Removing qpeek.o(.text.xAreQueuePeekTasksStillRunning), (44 bytes).
    Removing qpeek.o(.ARM.exidx.text.xAreQueuePeekTasksStillRunning), (8 bytes).
    Removing qpeek.o(.bss.xMediumPriorityTask), (4 bytes).
    Removing qpeek.o(.bss.xHighPriorityTask), (4 bytes).
    Removing qpeek.o(.bss.xHighestPriorityTask), (4 bytes).
    Removing qpeek.o(.bss.xAreQueuePeekTasksStillRunning.ulLastLoopCounter), (4 bytes).
    Removing qpeek.o(.bss.ulLoopCounter), (4 bytes).
    Removing qpeek.o(.bss.xErrorDetected), (4 bytes).
    Removing queueoverwrite.o(.text), (0 bytes).
    Removing queueoverwrite.o(.text.vStartQueueOverwriteTask), (60 bytes).
    Removing queueoverwrite.o(.ARM.exidx.text.vStartQueueOverwriteTask), (8 bytes).
    Removing queueoverwrite.o(.text.prvQueueOverwriteTask), (168 bytes).
    Removing queueoverwrite.o(.ARM.exidx.text.prvQueueOverwriteTask), (8 bytes).
    Removing queueoverwrite.o(.text.xIsQueueOverwriteTaskStillRunning), (32 bytes).
    Removing queueoverwrite.o(.ARM.exidx.text.xIsQueueOverwriteTaskStillRunning), (8 bytes).
    Removing queueoverwrite.o(.text.vQueueOverwritePeriodicISRDemo), (128 bytes).
    Removing queueoverwrite.o(.ARM.exidx.text.vQueueOverwritePeriodicISRDemo), (8 bytes).
    Removing queueoverwrite.o(.bss.xISRQueue), (4 bytes).
    Removing queueoverwrite.o(.bss.xISRTestStatus), (1 bytes).
    Removing queueoverwrite.o(.bss.ulLoopCounter), (4 bytes).
    Removing queueoverwrite.o(.bss.vQueueOverwritePeriodicISRDemo.ulCallCount), (4 bytes).
    Removing queueset.o(.text), (0 bytes).
    Removing queueset.o(.text.vStartQueueSetTasks), (88 bytes).
    Removing queueset.o(.ARM.exidx.text.vStartQueueSetTasks), (8 bytes).
    Removing queueset.o(.text.prvQueueSetSendingTask), (96 bytes).
    Removing queueset.o(.ARM.exidx.text.prvQueueSetSendingTask), (8 bytes).
    Removing queueset.o(.text.prvQueueSetReceivingTask), (100 bytes).
    Removing queueset.o(.ARM.exidx.text.prvQueueSetReceivingTask), (8 bytes).
    Removing queueset.o(.text.xAreQueueSetTasksStillRunning), (116 bytes).
    Removing queueset.o(.ARM.exidx.text.xAreQueueSetTasksStillRunning), (8 bytes).
    Removing queueset.o(.text.vQueueSetAccessQueueSetFromISR), (44 bytes).
    Removing queueset.o(.ARM.exidx.text.vQueueSetAccessQueueSetFromISR), (8 bytes).
    Removing queueset.o(.text.prvReceiveFromQueueInSetFromISR), (52 bytes).
    Removing queueset.o(.ARM.exidx.text.prvReceiveFromQueueInSetFromISR), (8 bytes).
    Removing queueset.o(.text.prvSendToQueueInSetFromISR), (84 bytes).
    Removing queueset.o(.ARM.exidx.text.prvSendToQueueInSetFromISR), (8 bytes).
    Removing queueset.o(.text.prvSRand), (12 bytes).
    Removing queueset.o(.ARM.exidx.text.prvSRand), (8 bytes).
    Removing queueset.o(.text.prvRand), (32 bytes).
    Removing queueset.o(.ARM.exidx.text.prvRand), (8 bytes).
    Removing queueset.o(.text.prvChangeRelativePriorities), (112 bytes).
    Removing queueset.o(.ARM.exidx.text.prvChangeRelativePriorities), (8 bytes).
    Removing queueset.o(.text.prvSetupTest), (228 bytes).
    Removing queueset.o(.ARM.exidx.text.prvSetupTest), (8 bytes).
    Removing queueset.o(.text.prvCheckReceivedValue), (120 bytes).
    Removing queueset.o(.ARM.exidx.text.prvCheckReceivedValue), (8 bytes).
    Removing queueset.o(.text.prvTestQueueOverwriteWithQueueSet), (224 bytes).
    Removing queueset.o(.ARM.exidx.text.prvTestQueueOverwriteWithQueueSet), (8 bytes).
    Removing queueset.o(.text.prvTestQueueOverwriteOnTwoQueusInQueueSet), (464 bytes).
    Removing queueset.o(.ARM.exidx.text.prvTestQueueOverwriteOnTwoQueusInQueueSet), (8 bytes).
    Removing queueset.o(.text.prvTestQueueOverwriteFromISROnTwoQueusInQueueSet), (464 bytes).
    Removing queueset.o(.ARM.exidx.text.prvTestQueueOverwriteFromISROnTwoQueusInQueueSet), (8 bytes).
    Removing queueset.o(.text.prvCheckReceivedValueWithinExpectedRange), (28 bytes).
    Removing queueset.o(.ARM.exidx.text.prvCheckReceivedValueWithinExpectedRange), (8 bytes).
    Removing queueset.o(.bss.xQueueSetSendingTask), (4 bytes).
    Removing queueset.o(.bss.xQueueSetReceivingTask), (4 bytes).
    Removing queueset.o(.bss.xAreQueueSetTasksStillRunning.ulLastCycleCounter), (4 bytes).
    Removing queueset.o(.bss.xAreQueueSetTasksStillRunning.ulLastISRTxValue), (4 bytes).
    Removing queueset.o(.bss.xAreQueueSetTasksStillRunning.ulLastQueueUsedCounter), (12 bytes).
    Removing queueset.o(.bss.ulCycleCounter), (4 bytes).
    Removing queueset.o(.bss.ulQueueUsedCounter), (12 bytes).
    Removing queueset.o(.data.xQueueSetTasksStatus), (4 bytes).
    Removing queueset.o(.data.ulISRTxValue), (4 bytes).
    Removing queueset.o(.bss.vQueueSetAccessQueueSetFromISR.ulCallCount), (4 bytes).
    Removing queueset.o(.bss.xSetupComplete), (4 bytes).
    Removing queueset.o(.bss.xQueues), (12 bytes).
    Removing queueset.o(.bss.uxNextRand), (4 bytes).
    Removing queueset.o(.bss.prvChangeRelativePriorities.ulLoops), (4 bytes).
    Removing queueset.o(.bss.prvChangeRelativePriorities.ePriorities), (1 bytes).
    Removing queueset.o(.bss.xQueueSet), (4 bytes).
    Removing queueset.o(.bss.prvCheckReceivedValue.ulExpectedReceivedFromTask), (4 bytes).
    Removing queueset.o(.data.prvCheckReceivedValue.ulExpectedReceivedFromISR), (4 bytes).
    Removing queueset.o(.bss.prvSendToQueueInSetFromISR.xQueueToWriteTo), (4 bytes).
    Removing queuesetpolling.o(.text), (0 bytes).
    Removing queuesetpolling.o(.text.vStartQueueSetPollingTask), (88 bytes).
    Removing queuesetpolling.o(.ARM.exidx.text.vStartQueueSetPollingTask), (8 bytes).
    Removing queuesetpolling.o(.text.prvQueueSetReceivingTask), (76 bytes).
    Removing queuesetpolling.o(.ARM.exidx.text.prvQueueSetReceivingTask), (8 bytes).
    Removing queuesetpolling.o(.text.vQueueSetPollingInterruptAccess), (56 bytes).
    Removing queuesetpolling.o(.ARM.exidx.text.vQueueSetPollingInterruptAccess), (8 bytes).
    Removing queuesetpolling.o(.text.xAreQueueSetPollTasksStillRunning), (40 bytes).
    Removing queuesetpolling.o(.ARM.exidx.text.xAreQueueSetPollTasksStillRunning), (8 bytes).
    Removing queuesetpolling.o(.bss.xQueue), (4 bytes).
    Removing queuesetpolling.o(.bss.xQueueSet), (4 bytes).
    Removing queuesetpolling.o(.bss.vQueueSetPollingInterruptAccess.ulCallCount), (4 bytes).
    Removing queuesetpolling.o(.bss.vQueueSetPollingInterruptAccess.ulValueToSend), (4 bytes).
    Removing queuesetpolling.o(.bss.xAreQueueSetPollTasksStillRunning.ulLastCycleCounter), (4 bytes).
    Removing queuesetpolling.o(.bss.ulCycleCounter), (4 bytes).
    Removing queuesetpolling.o(.data.xQueueSetPollStatus), (4 bytes).
    Removing recmutex.o(.text), (0 bytes).
    Removing recmutex.o(.text.vStartRecursiveMutexTasks), (152 bytes).
    Removing recmutex.o(.ARM.exidx.text.vStartRecursiveMutexTasks), (8 bytes).
    Removing recmutex.o(.text.prvRecursiveMutexControllingTask), (140 bytes).
    Removing recmutex.o(.ARM.exidx.text.prvRecursiveMutexControllingTask), (8 bytes).
    Removing recmutex.o(.text.prvRecursiveMutexBlockingTask), (116 bytes).
    Removing recmutex.o(.ARM.exidx.text.prvRecursiveMutexBlockingTask), (8 bytes).
    Removing recmutex.o(.text.prvRecursiveMutexPollingTask), (120 bytes).
    Removing recmutex.o(.ARM.exidx.text.prvRecursiveMutexPollingTask), (8 bytes).
    Removing recmutex.o(.text.xAreRecursiveMutexTasksStillRunning), (112 bytes).
    Removing recmutex.o(.ARM.exidx.text.xAreRecursiveMutexTasksStillRunning), (8 bytes).
    Removing recmutex.o(.bss.xMutex), (4 bytes).
    Removing recmutex.o(.bss.xControllingTaskHandle), (4 bytes).
    Removing recmutex.o(.bss.xBlockingTaskHandle), (4 bytes).
    Removing recmutex.o(.bss.xAreRecursiveMutexTasksStillRunning.uxLastControllingCycles), (4 bytes).
    Removing recmutex.o(.bss.xAreRecursiveMutexTasksStillRunning.uxLastBlockingCycles), (4 bytes).
    Removing recmutex.o(.bss.xAreRecursiveMutexTasksStillRunning.uxLastPollingCycles), (4 bytes).
    Removing recmutex.o(.bss.uxControllingCycles), (4 bytes).
    Removing recmutex.o(.bss.xErrorOccurred), (4 bytes).
    Removing recmutex.o(.bss.uxBlockingCycles), (4 bytes).
    Removing recmutex.o(.bss.uxPollingCycles), (4 bytes).
    Removing recmutex.o(.bss.xControllingIsSuspended), (4 bytes).
    Removing recmutex.o(.bss.xBlockingIsSuspended), (4 bytes).
    Removing semtest.o(.text), (0 bytes).
    Removing semtest.o(.text.vStartSemaphoreTasks), (280 bytes).
    Removing semtest.o(.ARM.exidx.text.vStartSemaphoreTasks), (8 bytes).
    Removing semtest.o(.text.prvSemaphoreTest), (176 bytes).
    Removing semtest.o(.ARM.exidx.text.prvSemaphoreTest), (8 bytes).
    Removing semtest.o(.text.xAreSemaphoreTasksStillRunning), (52 bytes).
    Removing semtest.o(.ARM.exidx.text.xAreSemaphoreTasksStillRunning), (8 bytes).
    Removing semtest.o(.bss.xAreSemaphoreTasksStillRunning.sLastCheckVariables), (8 bytes).
    Removing semtest.o(.bss.sCheckVariables), (8 bytes).
    Removing semtest.o(.bss.sNextCheckVariable), (2 bytes).
    Removing staticallocation.o(.text), (0 bytes).
    Removing streambufferdemo.o(.text), (0 bytes).
    Removing streambufferdemo.o(.text.vStartStreamBufferTasks), (192 bytes).
    Removing streambufferdemo.o(.ARM.exidx.text.vStartStreamBufferTasks), (8 bytes).
    Removing streambufferdemo.o(.text.prvEchoServer), (196 bytes).
    Removing streambufferdemo.o(.ARM.exidx.text.prvEchoServer), (8 bytes).
    Removing streambufferdemo.o(.text.prvNonBlockingReceiverTask), (116 bytes).
    Removing streambufferdemo.o(.ARM.exidx.text.prvNonBlockingReceiverTask), (8 bytes).
    Removing streambufferdemo.o(.text.prvNonBlockingSenderTask), (76 bytes).
    Removing streambufferdemo.o(.ARM.exidx.text.prvNonBlockingSenderTask), (8 bytes).
    Removing streambufferdemo.o(.text.prvInterruptTriggerLevelTest), (200 bytes).
    Removing streambufferdemo.o(.ARM.exidx.text.prvInterruptTriggerLevelTest), (8 bytes).
    Removing streambufferdemo.o(.text.vPeriodicStreamBufferProcessing), (64 bytes).
    Removing streambufferdemo.o(.ARM.exidx.text.vPeriodicStreamBufferProcessing), (8 bytes).
    Removing streambufferdemo.o(.text.xAreStreamBufferTasksStillRunning), (112 bytes).
    Removing streambufferdemo.o(.ARM.exidx.text.xAreStreamBufferTasksStillRunning), (8 bytes).
    Removing streambufferdemo.o(.text.prvCheckExpectedState), (20 bytes).
    Removing streambufferdemo.o(.ARM.exidx.text.prvCheckExpectedState), (8 bytes).
    Removing streambufferdemo.o(.text.prvEchoClient), (272 bytes).
    Removing streambufferdemo.o(.ARM.exidx.text.prvEchoClient), (8 bytes).
    Removing streambufferdemo.o(.text.prvSingleTaskTests), (1984 bytes).
    Removing streambufferdemo.o(.ARM.exidx.text.prvSingleTaskTests), (8 bytes).
    Removing streambufferdemo.o(.bss.vPeriodicStreamBufferProcessing.xNextChar), (4 bytes).
    Removing streambufferdemo.o(.bss.xInterruptStreamBuffer), (4 bytes).
    Removing streambufferdemo.o(.bss.xAreStreamBufferTasksStillRunning.ulLastEchoLoopCounters), (8 bytes).
    Removing streambufferdemo.o(.bss.xAreStreamBufferTasksStillRunning.ulLastNonBlockingRxCounter), (4 bytes).
    Removing streambufferdemo.o(.bss.xAreStreamBufferTasksStillRunning.ulLastInterruptTriggerCounter), (4 bytes).
    Removing streambufferdemo.o(.bss.ulEchoLoopCounters), (8 bytes).
    Removing streambufferdemo.o(.bss.xErrorStatus), (1 bytes).
    Removing streambufferdemo.o(.bss.ulNonBlockingRxCounter), (4 bytes).
    Removing streambufferdemo.o(.bss.ulInterruptTriggerCounter), (4 bytes).
    Removing streambufferdemo.o(.rodata.str1.1), (122 bytes).
    Removing streambufferinterrupt.o(.text), (0 bytes).
    Removing streambufferinterrupt.o(.text.vStartStreamBufferInterruptDemo), (64 bytes).
    Removing streambufferinterrupt.o(.ARM.exidx.text.vStartStreamBufferInterruptDemo), (8 bytes).
    Removing streambufferinterrupt.o(.text.prvReceivingTask), (132 bytes).
    Removing streambufferinterrupt.o(.ARM.exidx.text.prvReceivingTask), (8 bytes).
    Removing streambufferinterrupt.o(.text.vBasicStreamBufferSendFromISR), (92 bytes).
    Removing streambufferinterrupt.o(.ARM.exidx.text.vBasicStreamBufferSendFromISR), (8 bytes).
    Removing streambufferinterrupt.o(.text.xIsInterruptStreamBufferDemoStillRunning), (32 bytes).
    Removing streambufferinterrupt.o(.ARM.exidx.text.xIsInterruptStreamBufferDemoStillRunning), (8 bytes).
    Removing streambufferinterrupt.o(.bss.xStreamBuffer), (4 bytes).
    Removing streambufferinterrupt.o(.bss.vBasicStreamBufferSendFromISR.xNextByteToSend), (4 bytes).
    Removing streambufferinterrupt.o(.bss.vBasicStreamBufferSendFromISR.xCallCount), (4 bytes).
    Removing streambufferinterrupt.o(.bss.ulCycleCount), (4 bytes).
    Removing streambufferinterrupt.o(.bss.xDemoStatus), (1 bytes).
    Removing tasknotify.o(.text), (0 bytes).
    Removing tasknotify.o(.text.vStartTaskNotifyTask), (60 bytes).
    Removing tasknotify.o(.ARM.exidx.text.vStartTaskNotifyTask), (8 bytes).
    Removing tasknotify.o(.text.prvNotifiedTask), (272 bytes).
    Removing tasknotify.o(.ARM.exidx.text.prvNotifiedTask), (8 bytes).
    Removing tasknotify.o(.text.prvRand), (28 bytes).
    Removing tasknotify.o(.ARM.exidx.text.prvRand), (8 bytes).
    Removing tasknotify.o(.text.xNotifyTaskFromISR), (140 bytes).
    Removing tasknotify.o(.ARM.exidx.text.xNotifyTaskFromISR), (8 bytes).
    Removing tasknotify.o(.text.xAreTaskNotificationTasksStillRunning), (76 bytes).
    Removing tasknotify.o(.ARM.exidx.text.xAreTaskNotificationTasksStillRunning), (8 bytes).
    Removing tasknotify.o(.text.prvSingleTaskTests), (760 bytes).
    Removing tasknotify.o(.ARM.exidx.text.prvSingleTaskTests), (8 bytes).
    Removing tasknotify.o(.text.prvNotifyingTimer), (48 bytes).
    Removing tasknotify.o(.ARM.exidx.text.prvNotifyingTimer), (8 bytes).
    Removing tasknotify.o(.text.prvSuspendedTaskTimerTestCallback), (60 bytes).
    Removing tasknotify.o(.ARM.exidx.text.prvSuspendedTaskTimerTestCallback), (8 bytes).
    Removing tasknotify.o(.bss.xTaskToNotify), (4 bytes).
    Removing tasknotify.o(.bss.uxNextRand), (4 bytes).
    Removing tasknotify.o(.bss.xNotifyTaskFromISR.xCallCount), (4 bytes).
    Removing tasknotify.o(.bss.xNotifyTaskFromISR.xAPIToUse), (4 bytes).
    Removing tasknotify.o(.bss.xTimer), (4 bytes).
    Removing tasknotify.o(.bss.ulTimerNotificationsSent), (4 bytes).
    Removing tasknotify.o(.bss.xAreTaskNotificationTasksStillRunning.ulLastNotifyCycleCount), (4 bytes).
    Removing tasknotify.o(.bss.ulNotifyCycleCount), (4 bytes).
    Removing tasknotify.o(.bss.xErrorStatus), (1 bytes).
    Removing tasknotify.o(.bss.ulTimerNotificationsReceived), (4 bytes).
    Removing tasknotify.o(.bss.prvSuspendedTaskTimerTestCallback.ulCallCount), (4 bytes).
    Removing tasknotifyarray.o(.text), (0 bytes).
    Removing tasknotifyarray.o(.text.vStartTaskNotifyArrayTask), (152 bytes).
    Removing tasknotifyarray.o(.ARM.exidx.text.vStartTaskNotifyArrayTask), (8 bytes).
    Removing tasknotifyarray.o(.text.prvSuspendedTaskTimerTestCallback), (80 bytes).
    Removing tasknotifyarray.o(.ARM.exidx.text.prvSuspendedTaskTimerTestCallback), (8 bytes).
    Removing tasknotifyarray.o(.text.prvNotifyingTimerCallback), (48 bytes).
    Removing tasknotifyarray.o(.ARM.exidx.text.prvNotifyingTimerCallback), (8 bytes).
    Removing tasknotifyarray.o(.text.prvNotifiedTask), (36 bytes).
    Removing tasknotifyarray.o(.ARM.exidx.text.prvNotifiedTask), (8 bytes).
    Removing tasknotifyarray.o(.text.prvRand), (28 bytes).
    Removing tasknotifyarray.o(.ARM.exidx.text.prvRand), (8 bytes).
    Removing tasknotifyarray.o(.text.xNotifyArrayTaskFromISR), (140 bytes).
    Removing tasknotifyarray.o(.ARM.exidx.text.xNotifyArrayTaskFromISR), (8 bytes).
    Removing tasknotifyarray.o(.text.xAreTaskNotificationArrayTasksStillRunning), (100 bytes).
    Removing tasknotifyarray.o(.ARM.exidx.text.xAreTaskNotificationArrayTasksStillRunning), (8 bytes).
    Removing tasknotifyarray.o(.text.prvSingleTaskTests), (1176 bytes).
    Removing tasknotifyarray.o(.ARM.exidx.text.prvSingleTaskTests), (8 bytes).
    Removing tasknotifyarray.o(.text.prvTestNotifyTaskWhileSuspended), (232 bytes).
    Removing tasknotifyarray.o(.ARM.exidx.text.prvTestNotifyTaskWhileSuspended), (8 bytes).
    Removing tasknotifyarray.o(.text.prvBlockOnTheNotifiedIndexed), (192 bytes).
    Removing tasknotifyarray.o(.ARM.exidx.text.prvBlockOnTheNotifiedIndexed), (8 bytes).
    Removing tasknotifyarray.o(.text.prvBlockOnANonNotifiedIndexed), (160 bytes).
    Removing tasknotifyarray.o(.ARM.exidx.text.prvBlockOnANonNotifiedIndexed), (8 bytes).
    Removing tasknotifyarray.o(.text.prvBlockOnNotificationsComingFromInterrupts), (120 bytes).
    Removing tasknotifyarray.o(.ARM.exidx.text.prvBlockOnNotificationsComingFromInterrupts), (8 bytes).
    Removing tasknotifyarray.o(.bss.xNotifyWhileSuspendedTimer), (4 bytes).
    Removing tasknotifyarray.o(.bss.xIncrementingIndexTimer), (4 bytes).
    Removing tasknotifyarray.o(.bss.xTaskToNotify), (4 bytes).
    Removing tasknotifyarray.o(.bss.uxNextRand), (4 bytes).
    Removing tasknotifyarray.o(.bss.xNotifyArrayTaskFromISR.xAPIToUse), (4 bytes).
    Removing tasknotifyarray.o(.bss.xNotifyArrayTaskFromISR.uxIndexToNotify), (4 bytes).
    Removing tasknotifyarray.o(.bss.xSendNotificationFromISR), (4 bytes).
    Removing tasknotifyarray.o(.bss.xAreTaskNotificationArrayTasksStillRunning.ulLastFineCycleCount), (4 bytes).
    Removing tasknotifyarray.o(.bss.xAreTaskNotificationArrayTasksStillRunning.ulLastCourseCycleCount), (4 bytes).
    Removing tasknotifyarray.o(.bss.xAreTaskNotificationArrayTasksStillRunning.ulCallCount), (4 bytes).
    Removing tasknotifyarray.o(.bss.xAreTaskNotificationArrayTasksStillRunning.xErrorStatus), (1 bytes).
    Removing tasknotifyarray.o(.bss.ulFineCycleCount), (4 bytes).
    Removing tasknotifyarray.o(.bss.ulCourseCycleCounter), (4 bytes).
    Removing tasknotifyarray.o(.bss.prvSuspendedTaskTimerTestCallback.ulCallCount), (4 bytes).
    Removing tasknotifyarray.o(.bss.prvSuspendedTaskTimerTestCallback.uxIndexToNotify), (4 bytes).
    Removing tasknotifyarray.o(.bss.prvNotifyingTimerCallback.uxIndexToNotify), (4 bytes).
    Removing timerdemo.o(.text), (0 bytes).
    Removing timerdemo.o(.text.vStartTimerDemoTask), (100 bytes).
    Removing timerdemo.o(.ARM.exidx.text.vStartTimerDemoTask), (8 bytes).
    Removing timerdemo.o(.text.prvTest1_CreateTimersWithoutSchedulerRunning), (268 bytes).
    Removing timerdemo.o(.ARM.exidx.text.prvTest1_CreateTimersWithoutSchedulerRunning), (8 bytes).
    Removing timerdemo.o(.text.prvTimerTestTask), (128 bytes).
    Removing timerdemo.o(.ARM.exidx.text.prvTimerTestTask), (8 bytes).
    Removing timerdemo.o(.text.vTimerDemoIncludeBacklogTests), (12 bytes).
    Removing timerdemo.o(.ARM.exidx.text.vTimerDemoIncludeBacklogTests), (8 bytes).
    Removing timerdemo.o(.text.xAreTimerDemoTasksStillRunning), (108 bytes).
    Removing timerdemo.o(.ARM.exidx.text.xAreTimerDemoTasksStillRunning), (8 bytes).
    Removing timerdemo.o(.text.vTimerPeriodicISRTests), (572 bytes).
    Removing timerdemo.o(.ARM.exidx.text.vTimerPeriodicISRTests), (8 bytes).
    Removing timerdemo.o(.text.prvOneShotTimerCallback), (44 bytes).
    Removing timerdemo.o(.ARM.exidx.text.prvOneShotTimerCallback), (8 bytes).
    Removing timerdemo.o(.text.prvTest2_CheckTaskAndTimersInitialState), (56 bytes).
    Removing timerdemo.o(.ARM.exidx.text.prvTest2_CheckTaskAndTimersInitialState), (8 bytes).
    Removing timerdemo.o(.text.prvTest3_CheckAutoReloadExpireRates), (128 bytes).
    Removing timerdemo.o(.ARM.exidx.text.prvTest3_CheckAutoReloadExpireRates), (8 bytes).
    Removing timerdemo.o(.text.prvTest4_CheckAutoReloadTimersCanBeStopped), (164 bytes).
    Removing timerdemo.o(.ARM.exidx.text.prvTest4_CheckAutoReloadTimersCanBeStopped), (8 bytes).
    Removing timerdemo.o(.text.prvTest5_CheckBasicOneShotTimerBehaviour), (152 bytes).
    Removing timerdemo.o(.ARM.exidx.text.prvTest5_CheckBasicOneShotTimerBehaviour), (8 bytes).
    Removing timerdemo.o(.text.prvTest6_CheckAutoReloadResetBehaviour), (376 bytes).
    Removing timerdemo.o(.ARM.exidx.text.prvTest6_CheckAutoReloadResetBehaviour), (8 bytes).
    Removing timerdemo.o(.text.prvTest7_CheckBacklogBehaviour), (156 bytes).
    Removing timerdemo.o(.ARM.exidx.text.prvTest7_CheckBacklogBehaviour), (8 bytes).
    Removing timerdemo.o(.text.prvResetStartConditionsForNextIteration), (104 bytes).
    Removing timerdemo.o(.ARM.exidx.text.prvResetStartConditionsForNextIteration), (8 bytes).
    Removing timerdemo.o(.text.prvAutoReloadTimerCallback), (84 bytes).
    Removing timerdemo.o(.ARM.exidx.text.prvAutoReloadTimerCallback), (8 bytes).
    Removing timerdemo.o(.text.prvISRAutoReloadTimerCallback), (16 bytes).
    Removing timerdemo.o(.ARM.exidx.text.prvISRAutoReloadTimerCallback), (8 bytes).
    Removing timerdemo.o(.text.prvISROneShotTimerCallback), (16 bytes).
    Removing timerdemo.o(.ARM.exidx.text.prvISROneShotTimerCallback), (8 bytes).
    Removing timerdemo.o(.bss.ucAutoReloadTimerCounters), (6 bytes).
    Removing timerdemo.o(.bss.xAutoReloadTimers), (24 bytes).
    Removing timerdemo.o(.bss.xBasePeriod), (4 bytes).
    Removing timerdemo.o(.data.xTestStatus), (4 bytes).
    Removing timerdemo.o(.bss.ucIsBacklogDemoEnabled), (1 bytes).
    Removing timerdemo.o(.bss.xAreTimerDemoTasksStillRunning.ulLastLoopCounter), (4 bytes).
    Removing timerdemo.o(.bss.xAreTimerDemoTasksStillRunning.xIterationsWithoutCounterIncrement), (4 bytes).
    Removing timerdemo.o(.bss.xAreTimerDemoTasksStillRunning.xLastCycleFrequency), (4 bytes).
    Removing timerdemo.o(.bss.ulLoopCounter), (4 bytes).
    Removing timerdemo.o(.data.vTimerPeriodicISRTests.uxTick), (4 bytes).
    Removing timerdemo.o(.bss.ucISRAutoReloadTimerCounter), (1 bytes).
    Removing timerdemo.o(.bss.ucISROneShotTimerCounter), (1 bytes).
    Removing timerdemo.o(.bss.xISRAutoReloadTimer), (4 bytes).
    Removing timerdemo.o(.bss.xISROneShotTimer), (4 bytes).
    Removing timerdemo.o(.bss.xOneShotTimer), (4 bytes).
    Removing timerdemo.o(.bss.prvOneShotTimerCallback.uxCallCount), (4 bytes).
    Removing timerdemo.o(.bss.ucOneShotTimerCounter), (1 bytes).
    Removing timerdemo.o(.bss.ucIsStopNeededInTimerZeroCallback), (1 bytes).
    Removing timerdemo.o(.rodata.str1.1), (9 bytes).
    Removing highprotask.o(.text), (0 bytes).
    Removing highprotask.o(.text.CreateHighProTask), (64 bytes).
    Removing highprotask.o(.ARM.exidx.text.CreateHighProTask), (8 bytes).
    Removing highprotask.o(.text.HighProTask), (128 bytes).
    Removing highprotask.o(.ARM.exidx.text.HighProTask), (8 bytes).
    Removing idletask.o(.text), (0 bytes).
    Removing idletask.o(.text.vApplicationIdleHook), (2 bytes).
    Removing idletask.o(.ARM.exidx.text.vApplicationIdleHook), (8 bytes).
    Removing idletask.o(.text.Sleep), (2 bytes).
    Removing idletask.o(.ARM.exidx.text.Sleep), (8 bytes).
    Removing inittask.o(.text), (0 bytes).
    Removing inittask.o(.text.CreateInitTask), (48 bytes).
    Removing inittask.o(.ARM.exidx.text.CreateInitTask), (8 bytes).
    Removing inittask.o(.text.InitTask), (20 bytes).
    Removing inittask.o(.ARM.exidx.text.InitTask), (8 bytes).
    Removing inittask.o(.text.SystemApplicationDeviceInit), (28 bytes).
    Removing inittask.o(.ARM.exidx.text.SystemApplicationDeviceInit), (8 bytes).
    Removing inittask.o(.text.DeleteInitTask), (16 bytes).
    Removing inittask.o(.ARM.exidx.text.DeleteInitTask), (8 bytes).
    Removing inittask.o(.bss.pInitTaskHandle), (4 bytes).
    Removing lowprotask.o(.text), (0 bytes).
    Removing lowprotask.o(.text.CreateLowProTask), (64 bytes).
    Removing lowprotask.o(.ARM.exidx.text.CreateLowProTask), (8 bytes).
    Removing lowprotask.o(.text.LowProTask), (60 bytes).
    Removing lowprotask.o(.ARM.exidx.text.LowProTask), (8 bytes).
    Removing lowprotask.o(.bss.xLowProTaskQueue), (4 bytes).
    Removing taskmanager.o(.text), (0 bytes).
    Removing taskmanager.o(.text.SendMessage), (24 bytes).
    Removing taskmanager.o(.ARM.exidx.text.SendMessage), (8 bytes).
    Removing taskmanager.o(.text.SendShortMessageFromISR), (40 bytes).
    Removing taskmanager.o(.ARM.exidx.text.SendShortMessageFromISR), (8 bytes).
    Removing taskmanager.o(.ARM.exidx.text.SendMessageFromISR), (8 bytes).
    Removing taskmanager.o(.ARM.exidx.text.vApplicationMallocFailedHook), (8 bytes).
    Removing taskmanager.o(.ARM.exidx.text.vApplicationStackOverflowHook), (8 bytes).
    Removing dadd.o(.text), (356 bytes).
    Removing dmul.o(.text), (208 bytes).
    Removing ddiv.o(.text), (240 bytes).
    Removing dcmpgt.o(.text), (44 bytes).
    Removing dfltui.o(.text), (28 bytes).
    Removing depilogue.o(.text), (190 bytes).
    Removing dfixul.o(.text), (64 bytes).
    Removing cdrcmple.o(.text), (40 bytes).
    Removing depilogue.o(i.__ARM_clz), (46 bytes).

2045 unused section(s) (total 63278 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast_div0.o ABSOLUTE
    ../clib/longlong.c                       0x00000000   Number         0  llmul.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  printfstubs.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/string/memcmp.c         0x00000000   Number         0  memcmp.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strcmp.c         0x00000000   Number         0  strcmp.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  dcmpgt.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dfltui.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    AbortDelay.c                             0x00000000   Number         0  abortdelay.o ABSOLUTE
    BlockQ.c                                 0x00000000   Number         0  blockq.o ABSOLUTE
    EventGroupsDemo.c                        0x00000000   Number         0  eventgroupsdemo.o ABSOLUTE
    GenQTest.c                               0x00000000   Number         0  genqtest.o ABSOLUTE
    HighProTask.c                            0x00000000   Number         0  highprotask.o ABSOLUTE
    IdleTask.c                               0x00000000   Number         0  idletask.o ABSOLUTE
    InitTask.c                               0x00000000   Number         0  inittask.o ABSOLUTE
    IntQueue.c                               0x00000000   Number         0  intqueue.o ABSOLUTE
    IntQueueTimer.c                          0x00000000   Number         0  intqueuetimer.o ABSOLUTE
    IntSemTest.c                             0x00000000   Number         0  intsemtest.o ABSOLUTE
    LowProTask.c                             0x00000000   Number         0  lowprotask.o ABSOLUTE
    MessageBufferAMP.c                       0x00000000   Number         0  messagebufferamp.o ABSOLUTE
    MessageBufferDemo.c                      0x00000000   Number         0  messagebufferdemo.o ABSOLUTE
    Peripheral.c                             0x00000000   Number         0  peripheral.o ABSOLUTE
    PollQ.c                                  0x00000000   Number         0  pollq.o ABSOLUTE
    QPeek.c                                  0x00000000   Number         0  qpeek.o ABSOLUTE
    QueueOverwrite.c                         0x00000000   Number         0  queueoverwrite.o ABSOLUTE
    QueueSet.c                               0x00000000   Number         0  queueset.o ABSOLUTE
    QueueSetPolling.c                        0x00000000   Number         0  queuesetpolling.o ABSOLUTE
    RegTests.c                               0x00000000   Number         0  regtests.o ABSOLUTE
    StaticAllocation.c                       0x00000000   Number         0  staticallocation.o ABSOLUTE
    StreamBufferDemo.c                       0x00000000   Number         0  streambufferdemo.o ABSOLUTE
    StreamBufferInterrupt.c                  0x00000000   Number         0  streambufferinterrupt.o ABSOLUTE
    TaskManager.c                            0x00000000   Number         0  taskmanager.o ABSOLUTE
    TaskNotify.c                             0x00000000   Number         0  tasknotify.o ABSOLUTE
    TaskNotifyArray.c                        0x00000000   Number         0  tasknotifyarray.o ABSOLUTE
    TestRunner.c                             0x00000000   Number         0  testrunner.o ABSOLUTE
    TimerDemo.c                              0x00000000   Number         0  timerdemo.o ABSOLUTE
    User/Libraries/CMSIS/FT32F0xx/source/arm/startup_ft32f072xb.s 0x00000000   Number         0  startup_ft32f072xb.o ABSOLUTE
    blocktim.c                               0x00000000   Number         0  blocktim.o ABSOLUTE
    board.c                                  0x00000000   Number         0  board.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    countsem.c                               0x00000000   Number         0  countsem.o ABSOLUTE
    croutine.c                               0x00000000   Number         0  croutine.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    death.c                                  0x00000000   Number         0  death.o ABSOLUTE
    dynamic.c                                0x00000000   Number         0  dynamic.o ABSOLUTE
    event_groups.c                           0x00000000   Number         0  event_groups.o ABSOLUTE
    flop.c                                   0x00000000   Number         0  flop.o ABSOLUTE
    ft32f0xx_adc.c                           0x00000000   Number         0  ft32f0xx_adc.o ABSOLUTE
    ft32f0xx_comp.c                          0x00000000   Number         0  ft32f0xx_comp.o ABSOLUTE
    ft32f0xx_crc.c                           0x00000000   Number         0  ft32f0xx_crc.o ABSOLUTE
    ft32f0xx_crs.c                           0x00000000   Number         0  ft32f0xx_crs.o ABSOLUTE
    ft32f0xx_dac.c                           0x00000000   Number         0  ft32f0xx_dac.o ABSOLUTE
    ft32f0xx_debug.c                         0x00000000   Number         0  ft32f0xx_debug.o ABSOLUTE
    ft32f0xx_dma.c                           0x00000000   Number         0  ft32f0xx_dma.o ABSOLUTE
    ft32f0xx_exti.c                          0x00000000   Number         0  ft32f0xx_exti.o ABSOLUTE
    ft32f0xx_flash.c                         0x00000000   Number         0  ft32f0xx_flash.o ABSOLUTE
    ft32f0xx_gpio.c                          0x00000000   Number         0  ft32f0xx_gpio.o ABSOLUTE
    ft32f0xx_i2c.c                           0x00000000   Number         0  ft32f0xx_i2c.o ABSOLUTE
    ft32f0xx_it.c                            0x00000000   Number         0  ft32f0xx_it.o ABSOLUTE
    ft32f0xx_iwdg.c                          0x00000000   Number         0  ft32f0xx_iwdg.o ABSOLUTE
    ft32f0xx_misc.c                          0x00000000   Number         0  ft32f0xx_misc.o ABSOLUTE
    ft32f0xx_opa.c                           0x00000000   Number         0  ft32f0xx_opa.o ABSOLUTE
    ft32f0xx_pwr.c                           0x00000000   Number         0  ft32f0xx_pwr.o ABSOLUTE
    ft32f0xx_rcc.c                           0x00000000   Number         0  ft32f0xx_rcc.o ABSOLUTE
    ft32f0xx_rtc.c                           0x00000000   Number         0  ft32f0xx_rtc.o ABSOLUTE
    ft32f0xx_spi.c                           0x00000000   Number         0  ft32f0xx_spi.o ABSOLUTE
    ft32f0xx_syscfg.c                        0x00000000   Number         0  ft32f0xx_syscfg.o ABSOLUTE
    ft32f0xx_tim.c                           0x00000000   Number         0  ft32f0xx_tim.o ABSOLUTE
    ft32f0xx_usart.c                         0x00000000   Number         0  ft32f0xx_usart.o ABSOLUTE
    ft32f0xx_wwdg.c                          0x00000000   Number         0  ft32f0xx_wwdg.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    integer.c                                0x00000000   Number         0  integer.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main-demo.c                              0x00000000   Number         0  main-demo.o ABSOLUTE
    main-standardtest.c                      0x00000000   Number         0  main-standardtest.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    recmutex.c                               0x00000000   Number         0  recmutex.o ABSOLUTE
    semtest.c                                0x00000000   Number         0  semtest.o ABSOLUTE
    stream_buffer.c                          0x00000000   Number         0  stream_buffer.o ABSOLUTE
    system_ft32f0xx.c                        0x00000000   Number         0  system_ft32f0xx.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    RESET                                    0x08000000   Section      192  startup_ft32f072xb.o(RESET)
    .ARM.Collect$$$$00000000                 0x080000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x080000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x080000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x080000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x080000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x080000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x080000d0   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x080000d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x080000d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x080000d0   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x080000d4   Section       88  startup_ft32f072xb.o(.text)
    .text                                    0x0800012c   Section        0  llmul.o(.text)
    .text                                    0x0800015c   Section        0  memcpya.o(.text)
    .text                                    0x08000180   Section        0  memseta.o(.text)
    .text                                    0x080001a4   Section        0  uidiv_div0.o(.text)
    .text                                    0x080001e2   Section        0  uldiv.o(.text)
    .text                                    0x08000242   Section        0  llshl.o(.text)
    .text                                    0x08000264   Section       36  init.o(.text)
    .text                                    0x08000288   Section        0  llushr.o(.text)
    [Anonymous Symbol]                       0x080002ac   Section        0  ft32f0xx_dma.o(.text.DMA_ClearFlag)
    __arm_cp.8_0                             0x080002b8   Number         4  ft32f0xx_dma.o(.text.DMA_ClearFlag)
    [Anonymous Symbol]                       0x080002bc   Section        0  ft32f0xx_dma.o(.text.DMA_Cmd)
    __arm_cp.3_0                             0x080002d4   Number         4  ft32f0xx_dma.o(.text.DMA_Cmd)
    [Anonymous Symbol]                       0x080002d8   Section        0  ft32f0xx_dma.o(.text.DMA_GetCurrDataCounter)
    [Anonymous Symbol]                       0x080002e0   Section        0  ft32f0xx_dma.o(.text.DMA_Init)
    __arm_cp.1_0                             0x08000318   Number         4  ft32f0xx_dma.o(.text.DMA_Init)
    [Anonymous Symbol]                       0x0800031c   Section        0  ft32f0xx_dma.o(.text.DMA_SetCurrDataCounter)
    DMA_USART_RX_Config                      0x08000321   Thumb Code    60  peripheral.o(.text.DMA_USART_RX_Config)
    [Anonymous Symbol]                       0x08000320   Section        0  peripheral.o(.text.DMA_USART_RX_Config)
    __arm_cp.1_0                             0x0800035c   Number         4  peripheral.o(.text.DMA_USART_RX_Config)
    __arm_cp.1_1                             0x08000360   Number         4  peripheral.o(.text.DMA_USART_RX_Config)
    __arm_cp.1_2                             0x08000364   Number         4  peripheral.o(.text.DMA_USART_RX_Config)
    [Anonymous Symbol]                       0x08000368   Section        0  ft32f0xx_gpio.o(.text.GPIO_Init)
    [Anonymous Symbol]                       0x080003d8   Section        0  ft32f0xx_gpio.o(.text.GPIO_PinAFConfig)
    [Anonymous Symbol]                       0x080003f8   Section        0  ft32f0xx_it.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x080003fc   Section        0  intqueuetimer.o(.text.IntQueueTestTimerHandler)
    [Anonymous Symbol]                       0x08000410   Section        0  ft32f0xx_it.o(.text.NMI_Handler)
    [Anonymous Symbol]                       0x08000414   Section        0  ft32f0xx_misc.o(.text.NVIC_Init)
    __arm_cp.0_0                             0x08000458   Number         4  ft32f0xx_misc.o(.text.NVIC_Init)
    __arm_cp.0_1                             0x0800045c   Number         4  ft32f0xx_misc.o(.text.NVIC_Init)
    __arm_cp.0_2                             0x08000460   Number         4  ft32f0xx_misc.o(.text.NVIC_Init)
    [Anonymous Symbol]                       0x08000470   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x080004b0   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x080004b4   Section        0  ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd)
    __arm_cp.30_0                            0x080004cc   Number         4  ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd)
    [Anonymous Symbol]                       0x080004d0   Section        0  ft32f0xx_rcc.o(.text.RCC_APB2PeriphClockCmd)
    __arm_cp.31_0                            0x080004e8   Number         4  ft32f0xx_rcc.o(.text.RCC_APB2PeriphClockCmd)
    [Anonymous Symbol]                       0x080004ec   Section        0  ft32f0xx_rcc.o(.text.RCC_GetClocksFreq)
    __arm_cp.26_0                            0x080005c0   Number         4  ft32f0xx_rcc.o(.text.RCC_GetClocksFreq)
    __arm_cp.26_1                            0x080005c4   Number         4  ft32f0xx_rcc.o(.text.RCC_GetClocksFreq)
    __arm_cp.26_2                            0x080005c8   Number         4  ft32f0xx_rcc.o(.text.RCC_GetClocksFreq)
    __arm_cp.26_3                            0x080005cc   Number         4  ft32f0xx_rcc.o(.text.RCC_GetClocksFreq)
    __arm_cp.26_4                            0x080005d0   Number         4  ft32f0xx_rcc.o(.text.RCC_GetClocksFreq)
    __arm_cp.26_5                            0x080005d4   Number         4  ft32f0xx_rcc.o(.text.RCC_GetClocksFreq)
    [Anonymous Symbol]                       0x080005d8   Section        0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x080005dc   Section        0  taskmanager.o(.text.SendMessageFromISR)
    SetSysClock                              0x08000605   Thumb Code   148  system_ft32f0xx.o(.text.SetSysClock)
    [Anonymous Symbol]                       0x08000604   Section        0  system_ft32f0xx.o(.text.SetSysClock)
    __arm_cp.1_0                             0x08000698   Number         4  system_ft32f0xx.o(.text.SetSysClock)
    __arm_cp.1_1                             0x0800069c   Number         4  system_ft32f0xx.o(.text.SetSysClock)
    [Anonymous Symbol]                       0x080006a0   Section        0  port.o(.text.SysTick_Handler)
    __arm_cp.13_0                            0x080006c0   Number         4  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x080006c4   Section        0  system_ft32f0xx.o(.text.SystemInit)
    __arm_cp.0_0                             0x08000714   Number         4  system_ft32f0xx.o(.text.SystemInit)
    __arm_cp.0_1                             0x08000718   Number         4  system_ft32f0xx.o(.text.SystemInit)
    __arm_cp.0_2                             0x0800071c   Number         4  system_ft32f0xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08000720   Section        0  ft32f0xx_it.o(.text.TIM16_IRQHandler)
    __arm_cp.4_0                             0x0800073c   Number         4  ft32f0xx_it.o(.text.TIM16_IRQHandler)
    [Anonymous Symbol]                       0x08000740   Section        0  ft32f0xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    __arm_cp.3_0                             0x08000760   Number         4  ft32f0xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    [Anonymous Symbol]                       0x08000764   Section        0  ft32f0xx_tim.o(.text.TIM_ClearITPendingBit)
    [Anonymous Symbol]                       0x0800076a   Section        0  ft32f0xx_tim.o(.text.TIM_GetITStatus)
    [Anonymous Symbol]                       0x08000780   Section        0  ft32f0xx_it.o(.text.USART1_IRQHandler)
    __arm_cp.2_2                             0x080007dc   Number         4  ft32f0xx_it.o(.text.USART1_IRQHandler)
    [Anonymous Symbol]                       0x080007e0   Section        0  ft32f0xx_usart.o(.text.USART_ClearFlag)
    [Anonymous Symbol]                       0x080007e4   Section        0  ft32f0xx_usart.o(.text.USART_Cmd)
    [Anonymous Symbol]                       0x080007f4   Section        0  ft32f0xx_usart.o(.text.USART_DMACmd)
    [Anonymous Symbol]                       0x08000808   Section        0  ft32f0xx_usart.o(.text.USART_DMAReceptionErrorConfig)
    [Anonymous Symbol]                       0x0800081a   Section        0  ft32f0xx_usart.o(.text.USART_GetFlagStatus)
    [Anonymous Symbol]                       0x08000824   Section        0  ft32f0xx_usart.o(.text.USART_ITConfig)
    [Anonymous Symbol]                       0x08000854   Section        0  ft32f0xx_usart.o(.text.USART_Init)
    __arm_cp.1_0                             0x080008ec   Number         4  ft32f0xx_usart.o(.text.USART_Init)
    __arm_cp.1_1                             0x080008f0   Number         4  ft32f0xx_usart.o(.text.USART_Init)
    __arm_cp.1_3                             0x080008f4   Number         4  ft32f0xx_usart.o(.text.USART_Init)
    [Anonymous Symbol]                       0x080008f8   Section        0  ft32f0xx_usart.o(.text.USART_SendData)
    __arm_cp.17_0                            0x08000900   Number         4  ft32f0xx_usart.o(.text.USART_SendData)
    [Anonymous Symbol]                       0x08000904   Section        0  peripheral.o(.text.Usart_Init)
    __arm_cp.0_0                             0x080009ac   Number         4  peripheral.o(.text.Usart_Init)
    __arm_cp.0_2                             0x080009b0   Number         4  peripheral.o(.text.Usart_Init)
    __arm_cp.0_3                             0x080009b4   Number         4  peripheral.o(.text.Usart_Init)
    [Anonymous Symbol]                       0x080009b8   Section        0  peripheral.o(.text.fputc)
    __arm_cp.8_0                             0x080009d8   Number         4  peripheral.o(.text.fputc)
    [Anonymous Symbol]                       0x080009dc   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x080009e2   Section        0  main-standardtest.o(.text.main_standartest)
    prvAddCurrentTaskToDelayedList           0x080009ed   Thumb Code   132  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x080009ec   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    __arm_cp.8_0                             0x08000a70   Number         4  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    __arm_cp.8_2                             0x08000a74   Number         4  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    __arm_cp.8_3                             0x08000a78   Number         4  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    __arm_cp.8_4                             0x08000a7c   Number         4  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    __arm_cp.8_5                             0x08000a80   Number         4  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x08000a85   Thumb Code   140  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x08000a84   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    __arm_cp.2_1                             0x08000b10   Number         4  tasks.o(.text.prvAddNewTaskToReadyList)
    __arm_cp.2_2                             0x08000b14   Number         4  tasks.o(.text.prvAddNewTaskToReadyList)
    __arm_cp.2_3                             0x08000b18   Number         4  tasks.o(.text.prvAddNewTaskToReadyList)
    __arm_cp.2_4                             0x08000b1c   Number         4  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x08000b21   Thumb Code    72  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x08000b20   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    __arm_cp.1_0                             0x08000b68   Number         4  timers.o(.text.prvCheckForValidListAndQueue)
    __arm_cp.1_1                             0x08000b6c   Number         4  timers.o(.text.prvCheckForValidListAndQueue)
    __arm_cp.1_2                             0x08000b70   Number         4  timers.o(.text.prvCheckForValidListAndQueue)
    __arm_cp.1_3                             0x08000b74   Number         4  timers.o(.text.prvCheckForValidListAndQueue)
    __arm_cp.1_4                             0x08000b78   Number         4  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTask                             0x08000b85   Thumb Code    32  testrunner.o(.text.prvCheckTask)
    [Anonymous Symbol]                       0x08000b84   Section        0  testrunner.o(.text.prvCheckTask)
    __arm_cp.1_0                             0x08000ba4   Number         4  testrunner.o(.text.prvCheckTask)
    prvCheckTasksWaitingTermination          0x08000bbd   Thumb Code    64  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x08000bbc   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    __arm_cp.62_0                            0x08000bfc   Number         4  tasks.o(.text.prvCheckTasksWaitingTermination)
    __arm_cp.62_2                            0x08000c00   Number         4  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x08000c05   Thumb Code    36  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x08000c04   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x08000c29   Thumb Code   120  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x08000c28   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x08000ca1   Thumb Code    18  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x08000ca0   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetNextExpireTime                     0x08000cb5   Thumb Code    28  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x08000cb4   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvHeapInit                              0x08000cd1   Thumb Code    80  heap_4.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x08000cd0   Section        0  heap_4.o(.text.prvHeapInit)
    __arm_cp.1_0                             0x08000d20   Number         4  heap_4.o(.text.prvHeapInit)
    __arm_cp.1_3                             0x08000d24   Number         4  heap_4.o(.text.prvHeapInit)
    __arm_cp.1_4                             0x08000d28   Number         4  heap_4.o(.text.prvHeapInit)
    __arm_cp.1_5                             0x08000d2c   Number         4  heap_4.o(.text.prvHeapInit)
    prvIdleTask                              0x08000d31   Thumb Code    20  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x08000d30   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseNewQueue                    0x08000d45   Thumb Code    38  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x08000d44   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x08000d6b   Thumb Code   142  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x08000d6a   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x08000df9   Thumb Code    64  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x08000df8   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    __arm_cp.61_0                            0x08000e38   Number         4  tasks.o(.text.prvInitialiseTaskLists)
    __arm_cp.61_1                            0x08000e3c   Number         4  tasks.o(.text.prvInitialiseTaskLists)
    __arm_cp.61_2                            0x08000e40   Number         4  tasks.o(.text.prvInitialiseTaskLists)
    __arm_cp.61_3                            0x08000e44   Number         4  tasks.o(.text.prvInitialiseTaskLists)
    __arm_cp.61_4                            0x08000e48   Number         4  tasks.o(.text.prvInitialiseTaskLists)
    __arm_cp.61_5                            0x08000e4c   Number         4  tasks.o(.text.prvInitialiseTaskLists)
    __arm_cp.61_7                            0x08000e50   Number         4  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertBlockIntoFreeList               0x08000e55   Thumb Code    68  heap_4.o(.text.prvInsertBlockIntoFreeList)
    [Anonymous Symbol]                       0x08000e54   Section        0  heap_4.o(.text.prvInsertBlockIntoFreeList)
    __arm_cp.2_0                             0x08000e98   Number         4  heap_4.o(.text.prvInsertBlockIntoFreeList)
    __arm_cp.2_1                             0x08000e9c   Number         4  heap_4.o(.text.prvInsertBlockIntoFreeList)
    prvInsertTimerInActiveList               0x08000ea1   Thumb Code    52  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x08000ea0   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x08000ed5   Thumb Code    22  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x08000ed4   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvNotifyQueueSetContainer               0x08000eeb   Thumb Code    74  queue.o(.text.prvNotifyQueueSetContainer)
    [Anonymous Symbol]                       0x08000eea   Section        0  queue.o(.text.prvNotifyQueueSetContainer)
    prvProcessExpiredTimer                   0x08000f35   Thumb Code    60  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x08000f34   Section        0  timers.o(.text.prvProcessExpiredTimer)
    __arm_cp.23_0                            0x08000f70   Number         4  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x08000f75   Thumb Code   228  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x08000f74   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x08001059   Thumb Code   104  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x08001058   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    __arm_cp.20_1                            0x080010c0   Number         4  timers.o(.text.prvProcessTimerOrBlockTask)
    prvQueueAccessLogError                   0x080010c5   Thumb Code    12  intqueue.o(.text.prvQueueAccessLogError)
    [Anonymous Symbol]                       0x080010c4   Section        0  intqueue.o(.text.prvQueueAccessLogError)
    __arm_cp.9_0                             0x080010d0   Number         4  intqueue.o(.text.prvQueueAccessLogError)
    __arm_cp.9_1                             0x080010d4   Number         4  intqueue.o(.text.prvQueueAccessLogError)
    prvRecordValue_NormallyEmpty             0x080010d9   Thumb Code    28  intqueue.o(.text.prvRecordValue_NormallyEmpty)
    [Anonymous Symbol]                       0x080010d8   Section        0  intqueue.o(.text.prvRecordValue_NormallyEmpty)
    __arm_cp.10_0                            0x080010f4   Number         4  intqueue.o(.text.prvRecordValue_NormallyEmpty)
    prvRecordValue_NormallyFull              0x080010f9   Thumb Code    28  intqueue.o(.text.prvRecordValue_NormallyFull)
    [Anonymous Symbol]                       0x080010f8   Section        0  intqueue.o(.text.prvRecordValue_NormallyFull)
    __arm_cp.7_0                             0x08001114   Number         4  intqueue.o(.text.prvRecordValue_NormallyFull)
    prvReloadTimer                           0x08001119   Thumb Code    58  timers.o(.text.prvReloadTimer)
    [Anonymous Symbol]                       0x08001118   Section        0  timers.o(.text.prvReloadTimer)
    prvResetNextTaskUnblockTime              0x08001155   Thumb Code    28  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x08001154   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    __arm_cp.4_0                             0x08001170   Number         4  tasks.o(.text.prvResetNextTaskUnblockTime)
    __arm_cp.4_1                             0x08001174   Number         4  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x08001179   Thumb Code    36  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x08001178   Section        0  timers.o(.text.prvSampleTimeNow)
    __arm_cp.22_0                            0x0800119c   Number         4  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x080011a1   Thumb Code    44  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x080011a0   Section        0  timers.o(.text.prvSwitchTimerLists)
    __arm_cp.24_0                            0x080011cc   Number         4  timers.o(.text.prvSwitchTimerLists)
    __arm_cp.24_1                            0x080011d0   Number         4  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x080011d5   Thumb Code    18  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x080011d4   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x080011e7   Thumb Code    20  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x080011e6   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x080011fb   Thumb Code   144  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x080011fa   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x0800128c   Section        0  heap_4.o(.text.pvPortMalloc)
    __arm_cp.0_0                             0x08001360   Number         4  heap_4.o(.text.pvPortMalloc)
    __arm_cp.0_3                             0x08001364   Number         4  heap_4.o(.text.pvPortMalloc)
    __arm_cp.0_4                             0x08001368   Number         4  heap_4.o(.text.pvPortMalloc)
    __arm_cp.0_5                             0x0800136c   Number         4  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x08001370   Section        0  port.o(.text.pxPortInitialiseStack)
    __arm_cp.0_0                             0x08001398   Number         4  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x0800139c   Section        0  port.o(.text.ulSetInterruptMaskFromISR)
    [Anonymous Symbol]                       0x080013a4   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x080013c6   Section        0  taskmanager.o(.text.vApplicationMallocFailedHook)
    [Anonymous Symbol]                       0x080013ca   Section        0  taskmanager.o(.text.vApplicationStackOverflowHook)
    [Anonymous Symbol]                       0x080013ce   Section        0  testrunner.o(.text.vApplicationTickHook)
    [Anonymous Symbol]                       0x080013d0   Section        0  port.o(.text.vClearInterruptMaskFromISR)
    [Anonymous Symbol]                       0x080013d6   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x080013ea   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x080013f0   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x08001420   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x08001434   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x08001444   Section        0  heap_4.o(.text.vPortFree)
    __arm_cp.3_0                             0x08001494   Number         4  heap_4.o(.text.vPortFree)
    __arm_cp.3_1                             0x08001498   Number         4  heap_4.o(.text.vPortFree)
    __arm_cp.3_2                             0x0800149c   Number         4  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x080014a0   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    __arm_cp.4_0                             0x080014c0   Number         4  port.o(.text.vPortSetupTimerInterrupt)
    __arm_cp.4_1                             0x080014c4   Number         4  port.o(.text.vPortSetupTimerInterrupt)
    vPortStartFirstTask                      0x080014d1   Thumb Code    52  port.o(.text.vPortStartFirstTask)
    [Anonymous Symbol]                       0x080014d0   Section        0  port.o(.text.vPortStartFirstTask)
    pxCurrentTCBConst2                       0x08001500   Number         0  port.o(.text.vPortStartFirstTask)
    [Anonymous Symbol]                       0x08001504   Section        0  port.o(.text.vPortYield)
    __arm_cp.7_0                             0x08001518   Number         4  port.o(.text.vPortYield)
    [Anonymous Symbol]                       0x0800151c   Section        0  queue.o(.text.vQueueAddToRegistry)
    __arm_cp.35_0                            0x0800155c   Number         4  queue.o(.text.vQueueAddToRegistry)
    [Anonymous Symbol]                       0x08001560   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x080015a4   Section        0  testrunner.o(.text.vStartTests)
    __arm_cp.0_0                             0x080015c4   Number         4  testrunner.o(.text.vStartTests)
    [Anonymous Symbol]                       0x080015d0   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    __arm_cp.40_0                            0x080015e0   Number         4  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x080015e4   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x080015ec   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x08001604   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x08001644   Section        0  tasks.o(.text.vTaskStartScheduler)
    __arm_cp.20_0                            0x08001688   Number         4  tasks.o(.text.vTaskStartScheduler)
    __arm_cp.20_1                            0x0800168c   Number         4  tasks.o(.text.vTaskStartScheduler)
    __arm_cp.20_3                            0x08001698   Number         4  tasks.o(.text.vTaskStartScheduler)
    __arm_cp.20_4                            0x0800169c   Number         4  tasks.o(.text.vTaskStartScheduler)
    __arm_cp.20_5                            0x080016a0   Number         4  tasks.o(.text.vTaskStartScheduler)
    __arm_cp.20_6                            0x080016a4   Number         4  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x080016a8   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x080016b4   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x080016b4   Section        0  tasks.o(.text.vTaskSwitchContext)
    __arm_cp.16_0                            0x0800173c   Number         4  tasks.o(.text.vTaskSwitchContext)
    __arm_cp.16_1                            0x08001740   Number         4  tasks.o(.text.vTaskSwitchContext)
    __arm_cp.16_2                            0x08001744   Number         4  tasks.o(.text.vTaskSwitchContext)
    __arm_cp.16_3                            0x08001748   Number         4  tasks.o(.text.vTaskSwitchContext)
    __arm_cp.16_4                            0x0800174c   Number         4  tasks.o(.text.vTaskSwitchContext)
    __arm_cp.16_5                            0x08001750   Number         4  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x08001754   Section        0  port.o(.text.xPortStartScheduler)
    __arm_cp.3_0                             0x08001784   Number         4  port.o(.text.xPortStartScheduler)
    __arm_cp.3_1                             0x08001788   Number         4  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x0800178c   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x080017e2   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x08001860   Section        0  queue.o(.text.xQueueGenericSendFromISR)
    [Anonymous Symbol]                       0x0800190a   Section        0  queue.o(.text.xQueueIsQueueFullFromISR)
    [Anonymous Symbol]                       0x08001916   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x08001a18   Section        0  queue.o(.text.xQueueReceiveFromISR)
    [Anonymous Symbol]                       0x08001a88   Section        0  intqueue.o(.text.xSecondTimerHandler)
    __arm_cp.8_0                             0x08001c00   Number         4  intqueue.o(.text.xSecondTimerHandler)
    __arm_cp.8_1                             0x08001c04   Number         4  intqueue.o(.text.xSecondTimerHandler)
    __arm_cp.8_2                             0x08001c08   Number         4  intqueue.o(.text.xSecondTimerHandler)
    __arm_cp.8_3                             0x08001c0c   Number         4  intqueue.o(.text.xSecondTimerHandler)
    __arm_cp.8_4                             0x08001c10   Number         4  intqueue.o(.text.xSecondTimerHandler)
    __arm_cp.8_5                             0x08001c14   Number         4  intqueue.o(.text.xSecondTimerHandler)
    [Anonymous Symbol]                       0x08001c18   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x08001c80   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x08001ce4   Section        0  tasks.o(.text.xTaskDelayUntil)
    [Anonymous Symbol]                       0x08001d44   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x08001d4c   Section        0  tasks.o(.text.xTaskIncrementTick)
    __arm_cp.23_2                            0x08001e80   Number         4  tasks.o(.text.xTaskIncrementTick)
    __arm_cp.23_3                            0x08001e84   Number         4  tasks.o(.text.xTaskIncrementTick)
    __arm_cp.23_4                            0x08001e88   Number         4  tasks.o(.text.xTaskIncrementTick)
    __arm_cp.23_5                            0x08001e8c   Number         4  tasks.o(.text.xTaskIncrementTick)
    __arm_cp.23_6                            0x08001e90   Number         4  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x08001e94   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x08001eec   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    __arm_cp.37_4                            0x08001f88   Number         4  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x08001f8c   Section        0  tasks.o(.text.xTaskResumeAll)
    __arm_cp.9_0                             0x08002088   Number         4  tasks.o(.text.xTaskResumeAll)
    __arm_cp.9_1                             0x0800208c   Number         4  tasks.o(.text.xTaskResumeAll)
    __arm_cp.9_2                             0x08002090   Number         4  tasks.o(.text.xTaskResumeAll)
    __arm_cp.9_3                             0x08002094   Number         4  tasks.o(.text.xTaskResumeAll)
    __arm_cp.9_4                             0x08002098   Number         4  tasks.o(.text.xTaskResumeAll)
    __arm_cp.9_5                             0x0800209c   Number         4  tasks.o(.text.xTaskResumeAll)
    __arm_cp.9_6                             0x080020a0   Number         4  tasks.o(.text.xTaskResumeAll)
    __arm_cp.9_7                             0x080020a4   Number         4  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x080020a8   Section        0  timers.o(.text.xTimerCreateTimerTask)
    __arm_cp.0_0                             0x080020d8   Number         4  timers.o(.text.xTimerCreateTimerTask)
    __arm_cp.0_1                             0x080020dc   Number         4  timers.o(.text.xTimerCreateTimerTask)
    __arm_cp.0_2                             0x080020e0   Number         4  timers.o(.text.xTimerCreateTimerTask)
    i.__0printf$8                            0x080020ec   Section        0  printf8.o(i.__0printf$8)
    i.__scatterload_copy                     0x0800210c   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x0800211a   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x0800211c   Section       14  handlers.o(i.__scatterload_zeroinit)
    _printf_core                             0x0800212d   Thumb Code  1020  printf8.o(i._printf_core)
    i._printf_core                           0x0800212c   Section        0  printf8.o(i._printf_core)
    _printf_post_padding                     0x08002555   Thumb Code    32  printf8.o(i._printf_post_padding)
    i._printf_post_padding                   0x08002554   Section        0  printf8.o(i._printf_post_padding)
    _printf_pre_padding                      0x08002575   Thumb Code    44  printf8.o(i._printf_pre_padding)
    i._printf_pre_padding                    0x08002574   Section        0  printf8.o(i._printf_pre_padding)
    APBAHBPrescTable                         0x080025a0   Data          16  ft32f0xx_rcc.o(.rodata.APBAHBPrescTable)
    [Anonymous Symbol]                       0x080025a0   Section        0  ft32f0xx_rcc.o(.rodata.APBAHBPrescTable)
    .data                                    0x20000000   Section        4  stdout.o(.data)
    uxCriticalNesting                        0x20000008   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000008   Section        0  port.o(.data.uxCriticalNesting)
    prvSampleTimeNow.xLastTime               0x20000010   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x20000010   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    pxCurrentTimerList                       0x20000018   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x20000018   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x2000001c   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x2000001c   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x20000020   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x20000020   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x20000024   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20000024   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x20000028   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x20000028   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x2000002c   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x2000002c   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000090   Data        6144  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000090   Section        0  heap_4.o(.bss.ucHeap)
    ucNormallyEmptyReceivedValues            0x20001890   Data         200  intqueue.o(.bss.ucNormallyEmptyReceivedValues)
    [Anonymous Symbol]                       0x20001890   Section        0  intqueue.o(.bss.ucNormallyEmptyReceivedValues)
    ucNormallyFullReceivedValues             0x20001958   Data         200  intqueue.o(.bss.ucNormallyFullReceivedValues)
    [Anonymous Symbol]                       0x20001958   Section        0  intqueue.o(.bss.ucNormallyFullReceivedValues)
    uxCurrentNumberOfTasks                   0x20001a48   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20001a48   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20001a4c   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20001a4c   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x20001a50   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x20001a50   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20001a54   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20001a54   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20001a58   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20001a58   Section        0  tasks.o(.bss.uxTopReadyPriority)
    uxValueForNormallyEmptyQueue             0x20001a5c   Data           4  intqueue.o(.bss.uxValueForNormallyEmptyQueue)
    [Anonymous Symbol]                       0x20001a5c   Section        0  intqueue.o(.bss.uxValueForNormallyEmptyQueue)
    uxValueForNormallyFullQueue              0x20001a60   Data           4  intqueue.o(.bss.uxValueForNormallyFullQueue)
    [Anonymous Symbol]                       0x20001a60   Section        0  intqueue.o(.bss.uxValueForNormallyFullQueue)
    xActiveTimerList1                        0x20001a64   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20001a64   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x20001a78   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x20001a78   Section        0  timers.o(.bss.xActiveTimerList2)
    xBlockAllocatedBit                       0x20001a8c   Data           1  heap_4.o(.bss.xBlockAllocatedBit)
    [Anonymous Symbol]                       0x20001a8c   Section        0  heap_4.o(.bss.xBlockAllocatedBit)
    xDelayedTaskList1                        0x20001a90   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20001a90   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20001aa4   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20001aa4   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xErrorLine                               0x20001ab8   Data           4  intqueue.o(.bss.xErrorLine)
    [Anonymous Symbol]                       0x20001ab8   Section        0  intqueue.o(.bss.xErrorLine)
    xErrorStatus                             0x20001abc   Data           1  intqueue.o(.bss.xErrorStatus)
    [Anonymous Symbol]                       0x20001abc   Section        0  intqueue.o(.bss.xErrorStatus)
    xFreeBytesRemaining                      0x20001ac0   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x20001ac0   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandle                          0x20001ac8   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x20001ac8   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMinimumEverFreeBytesRemaining           0x20001acc   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x20001acc   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x20001ad0   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20001ad0   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNormallyEmptyQueue                      0x20001ad4   Data           4  intqueue.o(.bss.xNormallyEmptyQueue)
    [Anonymous Symbol]                       0x20001ad4   Section        0  intqueue.o(.bss.xNormallyEmptyQueue)
    xNormallyFullQueue                       0x20001ad8   Data           4  intqueue.o(.bss.xNormallyFullQueue)
    [Anonymous Symbol]                       0x20001ad8   Section        0  intqueue.o(.bss.xNormallyFullQueue)
    xNumOfOverflows                          0x20001adc   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20001adc   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x20001ae0   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x20001ae0   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20001ae4   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20001ae4   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x20001ae8   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20001ae8   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20001aec   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20001aec   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20001b40   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20001b40   Section        0  tasks.o(.bss.xSchedulerRunning)
    xSecondTimerHandler.uxNextOperation      0x20001b44   Data           4  intqueue.o(.bss.xSecondTimerHandler.uxNextOperation)
    [Anonymous Symbol]                       0x20001b44   Section        0  intqueue.o(.bss.xSecondTimerHandler.uxNextOperation)
    xStart                                   0x20001b48   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x20001b48   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x20001b50   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20001b50   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20001b64   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20001b64   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20001b78   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20001b78   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x20001b7c   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20001b7c   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20001b80   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20001b80   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x20001b84   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20001b84   Section        0  tasks.o(.bss.xYieldPending)
    STACK                                    0x20001b88   Section      512  startup_ft32f072xb.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    _printf_a                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_Size                           0x000000c0   Number         0  startup_ft32f072xb.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_ft32f072xb.o(RESET)
    __Vectors_End                            0x080000c0   Data           0  startup_ft32f072xb.o(RESET)
    __main                                   0x080000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x080000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x080000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x080000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x080000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x080000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x080000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x080000d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x080000d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x080000d5   Thumb Code    38  startup_ft32f072xb.o(.text)
    ADC1_IRQHandler                          0x08000105   Thumb Code     0  startup_ft32f072xb.o(.text)
    DMA1_Channel1_IRQHandler                 0x08000105   Thumb Code     0  startup_ft32f072xb.o(.text)
    DMA1_Channel2_3_IRQHandler               0x08000105   Thumb Code     0  startup_ft32f072xb.o(.text)
    DMA1_Channel4_5_IRQHandler               0x08000105   Thumb Code     0  startup_ft32f072xb.o(.text)
    EXTI0_1_IRQHandler                       0x08000105   Thumb Code     0  startup_ft32f072xb.o(.text)
    EXTI2_3_IRQHandler                       0x08000105   Thumb Code     0  startup_ft32f072xb.o(.text)
    EXTI4_15_IRQHandler                      0x08000105   Thumb Code     0  startup_ft32f072xb.o(.text)
    FLASH_IRQHandler                         0x08000105   Thumb Code     0  startup_ft32f072xb.o(.text)
    I2C1_IRQHandler                          0x08000105   Thumb Code     0  startup_ft32f072xb.o(.text)
    I2C2_IRQHandler                          0x08000105   Thumb Code     0  startup_ft32f072xb.o(.text)
    PVD_VDDIO_IRQHandler                     0x08000105   Thumb Code     0  startup_ft32f072xb.o(.text)
    RCC_IRQHandler                           0x08000105   Thumb Code     0  startup_ft32f072xb.o(.text)
    RTC_IRQHandler                           0x08000105   Thumb Code     0  startup_ft32f072xb.o(.text)
    SPI1_IRQHandler                          0x08000105   Thumb Code     0  startup_ft32f072xb.o(.text)
    SPI2_IRQHandler                          0x08000105   Thumb Code     0  startup_ft32f072xb.o(.text)
    TIM14_IRQHandler                         0x08000105   Thumb Code     0  startup_ft32f072xb.o(.text)
    TIM15_IRQHandler                         0x08000105   Thumb Code     0  startup_ft32f072xb.o(.text)
    TIM17_IRQHandler                         0x08000105   Thumb Code     0  startup_ft32f072xb.o(.text)
    TIM1_CC_IRQHandler                       0x08000105   Thumb Code     0  startup_ft32f072xb.o(.text)
    TIM3_IRQHandler                          0x08000105   Thumb Code     0  startup_ft32f072xb.o(.text)
    TIM6_IRQHandler                          0x08000105   Thumb Code     0  startup_ft32f072xb.o(.text)
    USART2_IRQHandler                        0x08000105   Thumb Code     0  startup_ft32f072xb.o(.text)
    USB_IRQHandler                           0x08000105   Thumb Code     0  startup_ft32f072xb.o(.text)
    WWDG_IRQHandler                          0x08000105   Thumb Code     0  startup_ft32f072xb.o(.text)
    __aeabi_lmul                             0x0800012d   Thumb Code    48  llmul.o(.text)
    _ll_mul                                  0x0800012d   Thumb Code     0  llmul.o(.text)
    __aeabi_memcpy                           0x0800015d   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x0800015d   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x0800015d   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x08000181   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x08000181   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x08000181   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x0800018f   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x0800018f   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x0800018f   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x08000193   Thumb Code    18  memseta.o(.text)
    __aeabi_uidiv                            0x080001a5   Thumb Code     0  uidiv_div0.o(.text)
    __aeabi_uidivmod                         0x080001a5   Thumb Code    62  uidiv_div0.o(.text)
    __aeabi_uldivmod                         0x080001e3   Thumb Code    96  uldiv.o(.text)
    __aeabi_llsl                             0x08000243   Thumb Code    32  llshl.o(.text)
    _ll_shift_l                              0x08000243   Thumb Code     0  llshl.o(.text)
    __scatterload                            0x08000265   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x08000265   Thumb Code     0  init.o(.text)
    __aeabi_llsr                             0x08000289   Thumb Code    34  llushr.o(.text)
    _ll_ushift_r                             0x08000289   Thumb Code     0  llushr.o(.text)
    DMA_ClearFlag                            0x080002ad   Thumb Code    12  ft32f0xx_dma.o(.text.DMA_ClearFlag)
    DMA_Cmd                                  0x080002bd   Thumb Code    24  ft32f0xx_dma.o(.text.DMA_Cmd)
    DMA_GetCurrDataCounter                   0x080002d9   Thumb Code     6  ft32f0xx_dma.o(.text.DMA_GetCurrDataCounter)
    DMA_Init                                 0x080002e1   Thumb Code    56  ft32f0xx_dma.o(.text.DMA_Init)
    DMA_SetCurrDataCounter                   0x0800031d   Thumb Code     4  ft32f0xx_dma.o(.text.DMA_SetCurrDataCounter)
    GPIO_Init                                0x08000369   Thumb Code   112  ft32f0xx_gpio.o(.text.GPIO_Init)
    GPIO_PinAFConfig                         0x080003d9   Thumb Code    32  ft32f0xx_gpio.o(.text.GPIO_PinAFConfig)
    HardFault_Handler                        0x080003f9   Thumb Code     2  ft32f0xx_it.o(.text.HardFault_Handler)
    IntQueueTestTimerHandler                 0x080003fd   Thumb Code    20  intqueuetimer.o(.text.IntQueueTestTimerHandler)
    NMI_Handler                              0x08000411   Thumb Code     2  ft32f0xx_it.o(.text.NMI_Handler)
    NVIC_Init                                0x08000415   Thumb Code    68  ft32f0xx_misc.o(.text.NVIC_Init)
    PendSV_Handler                           0x08000471   Thumb Code    68  port.o(.text.PendSV_Handler)
    RCC_AHBPeriphClockCmd                    0x080004b5   Thumb Code    24  ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd)
    RCC_APB2PeriphClockCmd                   0x080004d1   Thumb Code    24  ft32f0xx_rcc.o(.text.RCC_APB2PeriphClockCmd)
    RCC_GetClocksFreq                        0x080004ed   Thumb Code   212  ft32f0xx_rcc.o(.text.RCC_GetClocksFreq)
    SVC_Handler                              0x080005d9   Thumb Code     2  port.o(.text.SVC_Handler)
    SendMessageFromISR                       0x080005dd   Thumb Code    40  taskmanager.o(.text.SendMessageFromISR)
    SysTick_Handler                          0x080006a1   Thumb Code    32  port.o(.text.SysTick_Handler)
    SystemInit                               0x080006c5   Thumb Code    80  system_ft32f0xx.o(.text.SystemInit)
    TIM16_IRQHandler                         0x08000721   Thumb Code    28  ft32f0xx_it.o(.text.TIM16_IRQHandler)
    TIM1_BRK_UP_TRG_COM_IRQHandler           0x08000741   Thumb Code    32  ft32f0xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    TIM_ClearITPendingBit                    0x08000765   Thumb Code     6  ft32f0xx_tim.o(.text.TIM_ClearITPendingBit)
    TIM_GetITStatus                          0x0800076b   Thumb Code    20  ft32f0xx_tim.o(.text.TIM_GetITStatus)
    USART1_IRQHandler                        0x08000781   Thumb Code    92  ft32f0xx_it.o(.text.USART1_IRQHandler)
    USART_ClearFlag                          0x080007e1   Thumb Code     4  ft32f0xx_usart.o(.text.USART_ClearFlag)
    USART_Cmd                                0x080007e5   Thumb Code    16  ft32f0xx_usart.o(.text.USART_Cmd)
    USART_DMACmd                             0x080007f5   Thumb Code    20  ft32f0xx_usart.o(.text.USART_DMACmd)
    USART_DMAReceptionErrorConfig            0x08000809   Thumb Code    18  ft32f0xx_usart.o(.text.USART_DMAReceptionErrorConfig)
    USART_GetFlagStatus                      0x0800081b   Thumb Code    10  ft32f0xx_usart.o(.text.USART_GetFlagStatus)
    USART_ITConfig                           0x08000825   Thumb Code    46  ft32f0xx_usart.o(.text.USART_ITConfig)
    USART_Init                               0x08000855   Thumb Code   152  ft32f0xx_usart.o(.text.USART_Init)
    USART_SendData                           0x080008f9   Thumb Code     8  ft32f0xx_usart.o(.text.USART_SendData)
    Usart_Init                               0x08000905   Thumb Code   168  peripheral.o(.text.Usart_Init)
    fputc                                    0x080009b9   Thumb Code    32  peripheral.o(.text.fputc)
    main                                     0x080009dd   Thumb Code     6  main.o(.text.main)
    main_standartest                         0x080009e3   Thumb Code    10  main-standardtest.o(.text.main_standartest)
    pvPortMalloc                             0x0800128d   Thumb Code   212  heap_4.o(.text.pvPortMalloc)
    pxPortInitialiseStack                    0x08001371   Thumb Code    40  port.o(.text.pxPortInitialiseStack)
    ulSetInterruptMaskFromISR                0x0800139d   Thumb Code     8  port.o(.text.ulSetInterruptMaskFromISR)
    uxListRemove                             0x080013a5   Thumb Code    34  list.o(.text.uxListRemove)
    vApplicationMallocFailedHook             0x080013c7   Thumb Code     4  taskmanager.o(.text.vApplicationMallocFailedHook)
    vApplicationStackOverflowHook            0x080013cb   Thumb Code     4  taskmanager.o(.text.vApplicationStackOverflowHook)
    vApplicationTickHook                     0x080013cf   Thumb Code     2  testrunner.o(.text.vApplicationTickHook)
    vClearInterruptMaskFromISR               0x080013d1   Thumb Code     6  port.o(.text.vClearInterruptMaskFromISR)
    vListInitialise                          0x080013d7   Thumb Code    20  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x080013eb   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsert                              0x080013f1   Thumb Code    46  list.o(.text.vListInsert)
    vPortEnterCritical                       0x08001421   Thumb Code    20  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x08001435   Thumb Code    16  port.o(.text.vPortExitCritical)
    vPortFree                                0x08001445   Thumb Code    80  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x080014a1   Thumb Code    32  port.o(.text.vPortSetupTimerInterrupt)
    vPortYield                               0x08001505   Thumb Code    20  port.o(.text.vPortYield)
    vQueueAddToRegistry                      0x0800151d   Thumb Code    64  queue.o(.text.vQueueAddToRegistry)
    vQueueWaitForMessageRestricted           0x08001561   Thumb Code    68  queue.o(.text.vQueueWaitForMessageRestricted)
    vStartTests                              0x080015a5   Thumb Code    32  testrunner.o(.text.vStartTests)
    vTaskInternalSetTimeOutState             0x080015d1   Thumb Code    16  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x080015e5   Thumb Code     8  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x080015ed   Thumb Code    24  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x08001605   Thumb Code    64  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskStartScheduler                      0x08001645   Thumb Code    68  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspendAll                          0x080016a9   Thumb Code    12  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x080016b5   Thumb Code   136  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x08001755   Thumb Code    48  port.o(.text.xPortStartScheduler)
    xQueueGenericCreate                      0x0800178d   Thumb Code    86  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x080017e3   Thumb Code   126  queue.o(.text.xQueueGenericReset)
    xQueueGenericSendFromISR                 0x08001861   Thumb Code   170  queue.o(.text.xQueueGenericSendFromISR)
    xQueueIsQueueFullFromISR                 0x0800190b   Thumb Code    12  queue.o(.text.xQueueIsQueueFullFromISR)
    xQueueReceive                            0x08001917   Thumb Code   258  queue.o(.text.xQueueReceive)
    xQueueReceiveFromISR                     0x08001a19   Thumb Code   110  queue.o(.text.xQueueReceiveFromISR)
    xSecondTimerHandler                      0x08001a89   Thumb Code   376  intqueue.o(.text.xSecondTimerHandler)
    xTaskCheckForTimeOut                     0x08001c19   Thumb Code   104  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x08001c81   Thumb Code    98  tasks.o(.text.xTaskCreate)
    xTaskDelayUntil                          0x08001ce5   Thumb Code    96  tasks.o(.text.xTaskDelayUntil)
    xTaskGetTickCount                        0x08001d45   Thumb Code     8  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x08001d4d   Thumb Code   308  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x08001e95   Thumb Code    88  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskRemoveFromEventList                 0x08001eed   Thumb Code   156  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x08001f8d   Thumb Code   252  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x080020a9   Thumb Code    48  timers.o(.text.xTimerCreateTimerTask)
    __0printf$8                              0x080020ed   Thumb Code    24  printf8.o(i.__0printf$8)
    __1printf$8                              0x080020ed   Thumb Code     0  printf8.o(i.__0printf$8)
    __2printf                                0x080020ed   Thumb Code     0  printf8.o(i.__0printf$8)
    __scatterload_copy                       0x0800210d   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x0800211b   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x0800211d   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    uxTopUsedPriority                        0x080025b0   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x080025b4   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x080025d4   Number         0  anon$$obj.o(Region$$Table)
    __stdout                                 0x20000000   Data           4  stdout.o(.data)
    SystemCoreClock                          0x20000004   Data           4  system_ft32f0xx.o(.data.SystemCoreClock)
    pxCurrentTCB                             0x20000014   Data           4  tasks.o(.bss.pxCurrentTCB)
    usart_rx_buff                            0x20001a20   Data          40  peripheral.o(.bss.usart_rx_buff)
    xHighProTaskQueue                        0x20001ac4   Data           4  highprotask.o(.bss.xHighProTaskQueue)
    xQueueRegistry                           0x20001b00   Data          64  queue.o(.bss.xQueueRegistry)
    __initial_sp                             0x20001d88   Data           0  startup_ft32f072xb.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000d5

  Load Region LR_1 (Base: 0x08000000, Size: 0x000025e0, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x000025d4, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000c0   Data   RO           12    RESET               startup_ft32f072xb.o
    0x080000c0   0x080000c0   0x00000000   Code   RO         2698  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x080000c0   0x080000c0   0x00000004   Code   RO         2994    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x080000c4   0x080000c4   0x00000004   Code   RO         2997    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x080000c8   0x080000c8   0x00000000   Code   RO         2999    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x080000c8   0x080000c8   0x00000000   Code   RO         3001    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x080000c8   0x080000c8   0x00000008   Code   RO         3002    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x080000d0   0x080000d0   0x00000000   Code   RO         3004    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x080000d0   0x080000d0   0x00000000   Code   RO         3006    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x080000d0   0x080000d0   0x00000004   Code   RO         2995    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x080000d4   0x080000d4   0x00000058   Code   RO           13  * .text               startup_ft32f072xb.o
    0x0800012c   0x0800012c   0x00000030   Code   RO         2709    .text               mc_p.l(llmul.o)
    0x0800015c   0x0800015c   0x00000024   Code   RO         2711    .text               mc_p.l(memcpya.o)
    0x08000180   0x08000180   0x00000024   Code   RO         2713    .text               mc_p.l(memseta.o)
    0x080001a4   0x080001a4   0x0000003e   Code   RO         3013    .text               mc_p.l(uidiv_div0.o)
    0x080001e2   0x080001e2   0x00000060   Code   RO         3019    .text               mc_p.l(uldiv.o)
    0x08000242   0x08000242   0x00000020   Code   RO         3021    .text               mc_p.l(llshl.o)
    0x08000262   0x08000262   0x00000002   PAD
    0x08000264   0x08000264   0x00000024   Code   RO         3034    .text               mc_p.l(init.o)
    0x08000288   0x08000288   0x00000022   Code   RO         3036    .text               mc_p.l(llushr.o)
    0x080002aa   0x080002aa   0x00000002   PAD
    0x080002ac   0x080002ac   0x00000010   Code   RO          845    .text.DMA_ClearFlag  ft32f0xx_dma.o
    0x080002bc   0x080002bc   0x0000001c   Code   RO          835    .text.DMA_Cmd       ft32f0xx_dma.o
    0x080002d8   0x080002d8   0x00000006   Code   RO          839    .text.DMA_GetCurrDataCounter  ft32f0xx_dma.o
    0x080002de   0x080002de   0x00000002   PAD
    0x080002e0   0x080002e0   0x0000003c   Code   RO          831    .text.DMA_Init      ft32f0xx_dma.o
    0x0800031c   0x0800031c   0x00000004   Code   RO          837    .text.DMA_SetCurrDataCounter  ft32f0xx_dma.o
    0x08000320   0x08000320   0x00000048   Code   RO           87    .text.DMA_USART_RX_Config  peripheral.o
    0x08000368   0x08000368   0x00000070   Code   RO          949    .text.GPIO_Init     ft32f0xx_gpio.o
    0x080003d8   0x080003d8   0x00000020   Code   RO          971    .text.GPIO_PinAFConfig  ft32f0xx_gpio.o
    0x080003f8   0x080003f8   0x00000002   Code   RO           38    .text.HardFault_Handler  ft32f0xx_it.o
    0x080003fa   0x080003fa   0x00000002   PAD
    0x080003fc   0x080003fc   0x00000014   Code   RO         1752    .text.IntQueueTestTimerHandler  intqueuetimer.o
    0x08000410   0x08000410   0x00000002   Code   RO           36    .text.NMI_Handler   ft32f0xx_it.o
    0x08000412   0x08000412   0x00000002   PAD
    0x08000414   0x08000414   0x00000050   Code   RO         1095    .text.NVIC_Init     ft32f0xx_misc.o
    0x08000464   0x08000464   0x0000000c   PAD
    0x08000470   0x08000470   0x00000044   Code   RO          608    .text.PendSV_Handler  port.o
    0x080004b4   0x080004b4   0x0000001c   Code   RO         1217    .text.RCC_AHBPeriphClockCmd  ft32f0xx_rcc.o
    0x080004d0   0x080004d0   0x0000001c   Code   RO         1219    .text.RCC_APB2PeriphClockCmd  ft32f0xx_rcc.o
    0x080004ec   0x080004ec   0x000000ec   Code   RO         1209    .text.RCC_GetClocksFreq  ft32f0xx_rcc.o
    0x080005d8   0x080005d8   0x00000002   Code   RO          588    .text.SVC_Handler   port.o
    0x080005da   0x080005da   0x00000002   PAD
    0x080005dc   0x080005dc   0x00000028   Code   RO         2685    .text.SendMessageFromISR  taskmanager.o
    0x08000604   0x08000604   0x0000009c   Code   RO         1736    .text.SetSysClock   system_ft32f0xx.o
    0x080006a0   0x080006a0   0x00000024   Code   RO          610    .text.SysTick_Handler  port.o
    0x080006c4   0x080006c4   0x0000005c   Code   RO         1734    .text.SystemInit    system_ft32f0xx.o
    0x08000720   0x08000720   0x00000020   Code   RO           44    .text.TIM16_IRQHandler  ft32f0xx_it.o
    0x08000740   0x08000740   0x00000024   Code   RO           42    .text.TIM1_BRK_UP_TRG_COM_IRQHandler  ft32f0xx_it.o
    0x08000764   0x08000764   0x00000006   Code   RO         1586    .text.TIM_ClearITPendingBit  ft32f0xx_tim.o
    0x0800076a   0x0800076a   0x00000014   Code   RO         1584    .text.TIM_GetITStatus  ft32f0xx_tim.o
    0x0800077e   0x0800077e   0x00000002   PAD
    0x08000780   0x08000780   0x00000060   Code   RO           40    .text.USART1_IRQHandler  ft32f0xx_it.o
    0x080007e0   0x080007e0   0x00000004   Code   RO         1696    .text.USART_ClearFlag  ft32f0xx_usart.o
    0x080007e4   0x080007e4   0x00000010   Code   RO         1638    .text.USART_Cmd     ft32f0xx_usart.o
    0x080007f4   0x080007f4   0x00000014   Code   RO         1684    .text.USART_DMACmd  ft32f0xx_usart.o
    0x08000808   0x08000808   0x00000012   Code   RO         1686    .text.USART_DMAReceptionErrorConfig  ft32f0xx_usart.o
    0x0800081a   0x0800081a   0x0000000a   Code   RO         1694    .text.USART_GetFlagStatus  ft32f0xx_usart.o
    0x08000824   0x08000824   0x0000002e   Code   RO         1688    .text.USART_ITConfig  ft32f0xx_usart.o
    0x08000852   0x08000852   0x00000002   PAD
    0x08000854   0x08000854   0x000000a4   Code   RO         1630    .text.USART_Init    ft32f0xx_usart.o
    0x080008f8   0x080008f8   0x0000000c   Code   RO         1662    .text.USART_SendData  ft32f0xx_usart.o
    0x08000904   0x08000904   0x000000b4   Code   RO           85    .text.Usart_Init    peripheral.o
    0x080009b8   0x080009b8   0x00000024   Code   RO          101    .text.fputc         peripheral.o
    0x080009dc   0x080009dc   0x00000006   Code   RO            2    .text.main          main.o
    0x080009e2   0x080009e2   0x0000000a   Code   RO           20    .text.main_standartest  main-standardtest.o
    0x080009ec   0x080009ec   0x00000098   Code   RO          343    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x08000a84   0x08000a84   0x0000009c   Code   RO          331    .text.prvAddNewTaskToReadyList  tasks.o
    0x08000b20   0x08000b20   0x00000064   Code   RO          485    .text.prvCheckForValidListAndQueue  timers.o
    0x08000b84   0x08000b84   0x00000038   Code   RO         1792    .text.prvCheckTask  testrunner.o
    0x08000bbc   0x08000bbc   0x00000048   Code   RO          451    .text.prvCheckTasksWaitingTermination  tasks.o
    0x08000c04   0x08000c04   0x00000024   Code   RO          214    .text.prvCopyDataFromQueue  queue.o
    0x08000c28   0x08000c28   0x00000078   Code   RO          200    .text.prvCopyDataToQueue  queue.o
    0x08000ca0   0x08000ca0   0x00000012   Code   RO          337    .text.prvDeleteTCB  tasks.o
    0x08000cb2   0x08000cb2   0x00000002   PAD
    0x08000cb4   0x08000cb4   0x0000001c   Code   RO          521    .text.prvGetNextExpireTime  timers.o
    0x08000cd0   0x08000cd0   0x00000060   Code   RO          554    .text.prvHeapInit   heap_4.o
    0x08000d30   0x08000d30   0x00000014   Code   RO          369    .text.prvIdleTask   tasks.o
    0x08000d44   0x08000d44   0x00000026   Code   RO          180    .text.prvInitialiseNewQueue  queue.o
    0x08000d6a   0x08000d6a   0x0000008e   Code   RO          329    .text.prvInitialiseNewTask  tasks.o
    0x08000df8   0x08000df8   0x0000005c   Code   RO          449    .text.prvInitialiseTaskLists  tasks.o
    0x08000e54   0x08000e54   0x0000004c   Code   RO          556    .text.prvInsertBlockIntoFreeList  heap_4.o
    0x08000ea0   0x08000ea0   0x00000034   Code   RO          535    .text.prvInsertTimerInActiveList  timers.o
    0x08000ed4   0x08000ed4   0x00000016   Code   RO          216    .text.prvIsQueueEmpty  queue.o
    0x08000eea   0x08000eea   0x0000004a   Code   RO          202    .text.prvNotifyQueueSetContainer  queue.o
    0x08000f34   0x08000f34   0x00000040   Code   RO          529    .text.prvProcessExpiredTimer  timers.o
    0x08000f74   0x08000f74   0x000000e4   Code   RO          525    .text.prvProcessReceivedCommands  timers.o
    0x08001058   0x08001058   0x0000006c   Code   RO          523    .text.prvProcessTimerOrBlockTask  timers.o
    0x080010c4   0x080010c4   0x00000014   Code   RO         2102    .text.prvQueueAccessLogError  intqueue.o
    0x080010d8   0x080010d8   0x00000020   Code   RO         2104    .text.prvRecordValue_NormallyEmpty  intqueue.o
    0x080010f8   0x080010f8   0x00000020   Code   RO         2098    .text.prvRecordValue_NormallyFull  intqueue.o
    0x08001118   0x08001118   0x0000003a   Code   RO          533    .text.prvReloadTimer  timers.o
    0x08001152   0x08001152   0x00000002   PAD
    0x08001154   0x08001154   0x00000024   Code   RO          335    .text.prvResetNextTaskUnblockTime  tasks.o
    0x08001178   0x08001178   0x00000028   Code   RO          527    .text.prvSampleTimeNow  timers.o
    0x080011a0   0x080011a0   0x00000034   Code   RO          531    .text.prvSwitchTimerLists  timers.o
    0x080011d4   0x080011d4   0x00000012   Code   RO          586    .text.prvTaskExitError  port.o
    0x080011e6   0x080011e6   0x00000014   Code   RO          487    .text.prvTimerTask  timers.o
    0x080011fa   0x080011fa   0x00000090   Code   RO          206    .text.prvUnlockQueue  queue.o
    0x0800128a   0x0800128a   0x00000002   PAD
    0x0800128c   0x0800128c   0x000000e4   Code   RO          552    .text.pvPortMalloc  heap_4.o
    0x08001370   0x08001370   0x0000002c   Code   RO          584    .text.pxPortInitialiseStack  port.o
    0x0800139c   0x0800139c   0x00000008   Code   RO          604    .text.ulSetInterruptMaskFromISR  port.o
    0x080013a4   0x080013a4   0x00000022   Code   RO          166    .text.uxListRemove  list.o
    0x080013c6   0x080013c6   0x00000004   Code   RO         2687    .text.vApplicationMallocFailedHook  taskmanager.o
    0x080013ca   0x080013ca   0x00000004   Code   RO         2689    .text.vApplicationStackOverflowHook  taskmanager.o
    0x080013ce   0x080013ce   0x00000002   Code   RO         1794    .text.vApplicationTickHook  testrunner.o
    0x080013d0   0x080013d0   0x00000006   Code   RO          606    .text.vClearInterruptMaskFromISR  port.o
    0x080013d6   0x080013d6   0x00000014   Code   RO          158    .text.vListInitialise  list.o
    0x080013ea   0x080013ea   0x00000006   Code   RO          160    .text.vListInitialiseItem  list.o
    0x080013f0   0x080013f0   0x0000002e   Code   RO          164    .text.vListInsert   list.o
    0x0800141e   0x0800141e   0x00000002   PAD
    0x08001420   0x08001420   0x00000014   Code   RO          600    .text.vPortEnterCritical  port.o
    0x08001434   0x08001434   0x00000010   Code   RO          602    .text.vPortExitCritical  port.o
    0x08001444   0x08001444   0x0000005c   Code   RO          558    .text.vPortFree     heap_4.o
    0x080014a0   0x080014a0   0x00000028   Code   RO          592    .text.vPortSetupTimerInterrupt  port.o
    0x080014c8   0x080014c8   0x00000008   PAD
    0x080014d0   0x080014d0   0x00000034   Code   RO          594    .text.vPortStartFirstTask  port.o
    0x08001504   0x08001504   0x00000018   Code   RO          598    .text.vPortYield    port.o
    0x0800151c   0x0800151c   0x00000044   Code   RO          246    .text.vQueueAddToRegistry  queue.o
    0x08001560   0x08001560   0x00000044   Code   RO          250    .text.vQueueWaitForMessageRestricted  queue.o
    0x080015a4   0x080015a4   0x0000002c   Code   RO         1790    .text.vStartTests   testrunner.o
    0x080015d0   0x080015d0   0x00000014   Code   RO          407    .text.vTaskInternalSetTimeOutState  tasks.o
    0x080015e4   0x080015e4   0x00000008   Code   RO          411    .text.vTaskMissedYield  tasks.o
    0x080015ec   0x080015ec   0x00000018   Code   RO          395    .text.vTaskPlaceOnEventList  tasks.o
    0x08001604   0x08001604   0x00000040   Code   RO          399    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x08001644   0x08001644   0x00000064   Code   RO          367    .text.vTaskStartScheduler  tasks.o
    0x080016a8   0x080016a8   0x0000000c   Code   RO          341    .text.vTaskSuspendAll  tasks.o
    0x080016b4   0x080016b4   0x000000a0   Code   RO          359    .text.vTaskSwitchContext  tasks.o
    0x08001754   0x08001754   0x00000038   Code   RO          590    .text.xPortStartScheduler  port.o
    0x0800178c   0x0800178c   0x00000056   Code   RO          178    .text.xQueueGenericCreate  queue.o
    0x080017e2   0x080017e2   0x0000007e   Code   RO          176    .text.xQueueGenericReset  queue.o
    0x08001860   0x08001860   0x000000aa   Code   RO          208    .text.xQueueGenericSendFromISR  queue.o
    0x0800190a   0x0800190a   0x0000000c   Code   RO          244    .text.xQueueIsQueueFullFromISR  queue.o
    0x08001916   0x08001916   0x00000102   Code   RO          212    .text.xQueueReceive  queue.o
    0x08001a18   0x08001a18   0x0000006e   Code   RO          222    .text.xQueueReceiveFromISR  queue.o
    0x08001a86   0x08001a86   0x00000002   PAD
    0x08001a88   0x08001a88   0x00000190   Code   RO         2100    .text.xSecondTimerHandler  intqueue.o
    0x08001c18   0x08001c18   0x00000068   Code   RO          409    .text.xTaskCheckForTimeOut  tasks.o
    0x08001c80   0x08001c80   0x00000062   Code   RO          327    .text.xTaskCreate   tasks.o
    0x08001ce2   0x08001ce2   0x00000002   PAD
    0x08001ce4   0x08001ce4   0x00000060   Code   RO          339    .text.xTaskDelayUntil  tasks.o
    0x08001d44   0x08001d44   0x00000008   Code   RO          375    .text.xTaskGetTickCount  tasks.o
    0x08001d4c   0x08001d4c   0x00000148   Code   RO          373    .text.xTaskIncrementTick  tasks.o
    0x08001e94   0x08001e94   0x00000058   Code   RO          427    .text.xTaskPriorityDisinherit  tasks.o
    0x08001eec   0x08001eec   0x000000a0   Code   RO          401    .text.xTaskRemoveFromEventList  tasks.o
    0x08001f8c   0x08001f8c   0x0000011c   Code   RO          345    .text.xTaskResumeAll  tasks.o
    0x080020a8   0x080020a8   0x00000044   Code   RO          483    .text.xTimerCreateTimerTask  timers.o
    0x080020ec   0x080020ec   0x00000020   Code   RO         2930    i.__0printf$8       mc_p.l(printf8.o)
    0x0800210c   0x0800210c   0x0000000e   Code   RO         3040    i.__scatterload_copy  mc_p.l(handlers.o)
    0x0800211a   0x0800211a   0x00000002   Code   RO         3041    i.__scatterload_null  mc_p.l(handlers.o)
    0x0800211c   0x0800211c   0x0000000e   Code   RO         3042    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x0800212a   0x0800212a   0x00000002   PAD
    0x0800212c   0x0800212c   0x00000428   Code   RO         2937    i._printf_core      mc_p.l(printf8.o)
    0x08002554   0x08002554   0x00000020   Code   RO         2938    i._printf_post_padding  mc_p.l(printf8.o)
    0x08002574   0x08002574   0x0000002c   Code   RO         2939    i._printf_pre_padding  mc_p.l(printf8.o)
    0x080025a0   0x080025a0   0x00000010   Data   RO         1237    .rodata.APBAHBPrescTable  ft32f0xx_rcc.o
    0x080025b0   0x080025b0   0x00000004   Data   RO          454    .rodata.uxTopUsedPriority  tasks.o
    0x080025b4   0x080025b4   0x00000020   Data   RO         3039    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x080025d4, Size: 0x0000000c, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x080025d4   0x00000004   Data   RW         3008    .data               mc_p.l(stdout.o)
    0x20000004   0x080025d8   0x00000004   Data   RW         1740    .data.SystemCoreClock  system_ft32f0xx.o
    0x20000008   0x080025dc   0x00000004   Data   RW          612    .data.uxCriticalNesting  port.o


    Execution Region ER_ZI (Exec base: 0x20000010, Load base: 0x080025e0, Size: 0x00001d78, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000010        -       0x00000004   Zero   RW          541    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x20000014        -       0x00000004   Zero   RW          453    .bss.pxCurrentTCB   tasks.o
    0x20000018        -       0x00000004   Zero   RW          539    .bss.pxCurrentTimerList  timers.o
    0x2000001c        -       0x00000004   Zero   RW          461    .bss.pxDelayedTaskList  tasks.o
    0x20000020        -       0x00000004   Zero   RW          568    .bss.pxEnd          heap_4.o
    0x20000024        -       0x00000004   Zero   RW          462    .bss.pxOverflowDelayedTaskList  tasks.o
    0x20000028        -       0x00000004   Zero   RW          540    .bss.pxOverflowTimerList  timers.o
    0x2000002c        -       0x00000064   Zero   RW          464    .bss.pxReadyTasksLists  tasks.o
    0x20000090        -       0x00001800   Zero   RW          575    .bss.ucHeap         heap_4.o
    0x20001890        -       0x000000c8   Zero   RW         2127    .bss.ucNormallyEmptyReceivedValues  intqueue.o
    0x20001958        -       0x000000c8   Zero   RW         2129    .bss.ucNormallyFullReceivedValues  intqueue.o
    0x20001a20        -       0x00000028   Zero   RW          112    .bss.usart_rx_buff  peripheral.o
    0x20001a48        -       0x00000004   Zero   RW          458    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20001a4c        -       0x00000004   Zero   RW          457    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x20001a50        -       0x00000004   Zero   RW          466    .bss.uxSchedulerSuspended  tasks.o
    0x20001a54        -       0x00000004   Zero   RW          455    .bss.uxTaskNumber   tasks.o
    0x20001a58        -       0x00000004   Zero   RW          465    .bss.uxTopReadyPriority  tasks.o
    0x20001a5c        -       0x00000004   Zero   RW         2115    .bss.uxValueForNormallyEmptyQueue  intqueue.o
    0x20001a60        -       0x00000004   Zero   RW         2117    .bss.uxValueForNormallyFullQueue  intqueue.o
    0x20001a64        -       0x00000014   Zero   RW          542    .bss.xActiveTimerList1  timers.o
    0x20001a78        -       0x00000014   Zero   RW          543    .bss.xActiveTimerList2  timers.o
    0x20001a8c        -       0x00000001   Zero   RW          569    .bss.xBlockAllocatedBit  heap_4.o
    0x20001a8d   0x080025e0   0x00000003   PAD
    0x20001a90        -       0x00000014   Zero   RW          473    .bss.xDelayedTaskList1  tasks.o
    0x20001aa4        -       0x00000014   Zero   RW          474    .bss.xDelayedTaskList2  tasks.o
    0x20001ab8        -       0x00000004   Zero   RW         2130    .bss.xErrorLine     intqueue.o
    0x20001abc        -       0x00000001   Zero   RW         2126    .bss.xErrorStatus   intqueue.o
    0x20001abd   0x080025e0   0x00000003   PAD
    0x20001ac0        -       0x00000004   Zero   RW          570    .bss.xFreeBytesRemaining  heap_4.o
    0x20001ac4        -       0x00000004   Zero   RW         2632    .bss.xHighProTaskQueue  highprotask.o
    0x20001ac8        -       0x00000004   Zero   RW          469    .bss.xIdleTaskHandle  tasks.o
    0x20001acc        -       0x00000004   Zero   RW          572    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x20001ad0        -       0x00000004   Zero   RW          470    .bss.xNextTaskUnblockTime  tasks.o
    0x20001ad4        -       0x00000004   Zero   RW         2113    .bss.xNormallyEmptyQueue  intqueue.o
    0x20001ad8        -       0x00000004   Zero   RW         2112    .bss.xNormallyFullQueue  intqueue.o
    0x20001adc        -       0x00000004   Zero   RW          472    .bss.xNumOfOverflows  tasks.o
    0x20001ae0        -       0x00000004   Zero   RW          573    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x20001ae4        -       0x00000004   Zero   RW          574    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x20001ae8        -       0x00000004   Zero   RW          471    .bss.xPendedTicks   tasks.o
    0x20001aec        -       0x00000014   Zero   RW          468    .bss.xPendingReadyList  tasks.o
    0x20001b00        -       0x00000040   Zero   RW          262    .bss.xQueueRegistry  queue.o
    0x20001b40        -       0x00000004   Zero   RW          459    .bss.xSchedulerRunning  tasks.o
    0x20001b44        -       0x00000004   Zero   RW         2116    .bss.xSecondTimerHandler.uxNextOperation  intqueue.o
    0x20001b48        -       0x00000008   Zero   RW          571    .bss.xStart         heap_4.o
    0x20001b50        -       0x00000014   Zero   RW          463    .bss.xSuspendedTaskList  tasks.o
    0x20001b64        -       0x00000014   Zero   RW          456    .bss.xTasksWaitingTermination  tasks.o
    0x20001b78        -       0x00000004   Zero   RW          460    .bss.xTickCount     tasks.o
    0x20001b7c        -       0x00000004   Zero   RW          537    .bss.xTimerQueue    timers.o
    0x20001b80        -       0x00000004   Zero   RW          538    .bss.xTimerTaskHandle  timers.o
    0x20001b84        -       0x00000004   Zero   RW          467    .bss.xYieldPending  tasks.o
    0x20001b88        -       0x00000200   Zero   RW           10    STACK               startup_ft32f072xb.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       114         12          0          0          0       3962   ft32f0xx_dma.o
       144          0          0          0          0       4823   ft32f0xx_gpio.o
       168         12          0          0          0       2659   ft32f0xx_it.o
        80         12          0          0          0       2503   ft32f0xx_misc.o
       292         32         16          0          0      10247   ft32f0xx_rcc.o
        26          0          0          0          0      24973   ft32f0xx_tim.o
       290         16          0          0          0       9924   ft32f0xx_usart.o
       492         52          0          0       6173       4350   heap_4.o
         0          0          0          0          4       2241   highprotask.o
       484         40          0          0        425       7686   intqueue.o
        20          0          0          0          0       3052   intqueuetimer.o
       106          0          0          0          0       2141   list.o
        10          0          0          0          0        397   main-standardtest.o
         6          0          0          0          0        386   main.o
       288         28          0          0         40       8685   peripheral.o
       390         36          0          4          0       2690   port.o
      1332          4          0          0         64      19706   queue.o
        88         38        192          0        512        728   startup_ft32f072xb.o
       248         20          0          4          0       2435   system_ft32f0xx.o
        48          0          0          0          0       2187   taskmanager.o
      2242        196          4          0        260      28754   tasks.o
       102         36          0          0          0       1252   testrunner.o
       818         78          0          0         60      11216   timers.o

    ----------------------------------------------------------------------
      7832        632        244          8       7544     156997   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        44         20          0          0          6          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        48          0          0          0          0         72   llmul.o
        32          0          0          0          0         68   llshl.o
        34          0          0          0          0         68   llushr.o
        36          0          0          0          0         60   memcpya.o
        36          0          0          0          0        100   memseta.o
      1172         52          0          0          0        324   printf8.o
         0          0          0          4          0          0   stdout.o
        62          0          0          0          0         72   uidiv_div0.o
        96          0          0          0          0         84   uldiv.o

    ----------------------------------------------------------------------
      1608         68          0          4          0        916   Library Totals
         6          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1602         68          0          4          0        916   mc_p.l

    ----------------------------------------------------------------------
      1608         68          0          4          0        916   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      9440        700        244         12       7544     157269   Grand Totals
      9440        700        244         12       7544     157269   ELF Image Totals
      9440        700        244         12          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 9684 (   9.46kB)
    Total RW  Size (RW Data + ZI Data)              7556 (   7.38kB)
    Total ROM Size (Code + RO Data + RW Data)       9696 (   9.47kB)

==============================================================================

